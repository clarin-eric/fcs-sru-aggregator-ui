{"version":3,"mappings":"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","names":["m","require$$0","client","REQ_PARAM_CONSORTIA","getInitData","axios","params","urlParams","url","getResources","getLanguages","getStatisticsData","postSearch","searchParams","postSearchMoreResults","searchID","getSearchResultsMetaOnly","getSearchResultsMetaOnlyForResource","resourceID","results","result","getSearchResultDetails","getURLForDownload","format","language","languageFilter","relURL","getURLForWeblicht","languageForWeblicht","KEEP_PARAMS","makeSearchQuery","useKeepSearchParamsRaw","urlSearchParams","useSearchParams","useMemo","name","getNewSearchParams","useCallback","extraParams","newParams","createSearchParams","value","key","useKeepSearchParams","searchLink","getNewSearchLink","Footer","useTranslation","i18nKeyTerms","urlTerms","hasTerms","i18nKeyContact","urlContact","hasContact","i18nKeyServiceInfo","hasServiceInfo","linkSearch","jsx","Container","Row","jsxs","Col","Link","Trans","appStore","createStore","set","path","state","show","title","user","newUsername","localeStore","define_import_meta_env_LOCALES_default","nextLocale","nextLocales","useLocaleStore","selector","useBoundStore","useStore","appLogoUrl","logoUrl","personIcon","translateIcon","Header","locale","locales","setLocale","authName","AppStore","isAuthenticated","deployPath","loginPath","i18nKeyTranslationHelpUrl","urlHelpWithTranslations","hasHelpWithTranslationsUrl","handleLocaleChangeClick","eventKey","renderAuth","Navbar","Nav","renderLocales","langNames","currentSelectedLanguage","Fragment","NavDropdown","localeOption","langNamesLocalized","e","renderAppLogo","currentTarget","NavLink","getPreferredTheme","setTheme","theme","useColorMode","useEffect","updateTheme","resources","resourcesEnApp","resourcesEnCommon","I18N_NS_CONTEXT_PREFIX","LANGUAGE","LANGUAGES","resolveNs","ns","defaultNSs","nsParam","I18N_NS_ALL_BASE","I18N_NS_ALL","toArray","val","postProcessTryPrefixedNamespacesFirst","options","translator","keys","namespaces","resolved","namespacesPrefixed","i18n","initReactI18next","resourcesToBackend","namespace","__variableDynamicImportRuntimeHelper","__vitePreload","n","addScriptActions","script","container","addScript","removeScript","useScript","delay","timeoutId","cyrb53","str","seed","h1","h2","ch","setup","siteId","trackerUrl","enableLinkTracking","domains","userId","installScript","srcUrl","scripts","getConfig","configString","error","indexUrl","setupAndInstallFromConfigString","setupParams","installParams","trackPageView","referrerUrl","trackSiteSearch","query","category","count","people","technologiesFrontEnd","About","userLocale","hasMatomo","matomoIndexUrl","matomoOptOutScript","appTitleHead","showBackendInfos","renderTechnologiesList","technologies","technology","renderDateTime","datetime","date","Helmet","person","Card","eyeIcon$1","magicIcon","arrowClockwiseIcon","balloonIcon","bankIcon","bracesIcon","downloadIcon","envelopeArrowUpIcon","exclamationTriangleIcon","eyeIcon","gearIcon","highlightsIcon","houseDoorIcon","infoCircleIcon","link45degIcon","plusCircleIcon","repeatIcon","searchIcon","shieldCheckIcon","shieldLockIcon","threeDotsIcon","xCircleIcon","iconMap","eyeFillIcon","Help","renderIconsLegend","icons","iconKeys","iconKey","b","idA","idB","context","c","Badge","AggregatorDataContext","createContext","AggregatorDataProvider","languages","weblichtLanguages","children","data","useAggregatorData","useContext","AxiosContext","useAxios","AxiosProvider","SearchParamsContext","SearchParamsProvider","queryType","resourceIDs","numberOfResults","DEFAULT_SEARCH_LANGUAGE_FILTER","DEFAULT_RESOURCE_VIEW_VISIBILITY","DEFAULT_RESOURCE_VIEW_GROUPING","DEFAULT_RESOURCE_VIEW_SORTING","MULTIPLE_LANGUAGE_CODE","languageCodeToName","code","codeToLanguageMapping","fromApi","LocaleStore","prepareFn","resource","rootResource","subResource","convertedResources","sortFn","x","y","xInstitution","getBestFromMultilingualValuesTryByLanguage","yInstitution","r","xTitle","yTitle","recurseResources","evaluateAggregationContext","endpoints2handles","selectedResourceIDs","handlesNotFound","resourcesToSelect","endpoint","handles","handle","found","fn","recfn","index","findResourceByFilter","filter","findRecFn","getResourceIDs","getResourceIDsBySplit","resourceIDsMap","getAvailableResourceIDs","queryTypeId","languageCode","checkFn","isResourceAvailableDueToSubResource","isResourceAvailable","getInstitutions","institutions","institution","flattenResources","flattenFn","MULTILINGUAL_VALUE_CHECK_LANGUAGES","getBestFromMultilingualValues","values","ownLanguages","getFromMultilingualValuesByLanguage","valueByLanguage","getBestLanguageFromMultilingualValuesTryByLanguage","getLanguagesFromResourceInfo","defaultLanguage","languagesForTitle","languagesForDescription","languagesForInstitution","languageForResource","isResourceAvailableForQueryType","isResourceAvailableForLanguage","shouldBeAvailable","recursivelyCheck","SORT_FNS","a","aTitle","bTitle","aInstitution","bInstitution","ret","useDebounce","debounceValue","setDebounceValue","useState","handler","getTextCursorOffset","node","offset","selectionNode","parent","lengthBefore","i","child","getRangeContainerWithOffsetFromTextOffset","containerLength","childLength","newOffset","getAbsoluteTextCursorOffsets","range","start","end","setCursorPosition","selection","startRange","getCursorPosition","idxRange","queryTypeToPrismLanguage","highlightSyntax","pluginClasses","prismValue","Prism","sanitizeValue","ContentEditable","React","onChange","onCursorChange","disabled","placeholder","props","ref","inputRef","useRef","mRef","useImperativeHandle","sanitizedValue","setSanitizedValue","cursorPos","setCursorPos","deboundedSanitizedValue","htmlValue","setHtmlValue","valueWithStyle","pos","newValue","useLayoutEffect","handleInput","event","handlePaste","pastedData","handleInsert","handleKeyDown","handleBackspace","handleDelete","handlePossibleCursorChange","isClick","selectionIndices","doRemove","mode","numDeleted","acc","cur","oldValue","newValueSpansRemoved","text","lastPos","firstPos","valueToInsertSanitized","insertPos","newValueWithInsert","newCursorPos","LanguageModal","searchLanguage","searchLanguageFilter","paramShowResourceCounts","showLanguageFilterOptions","onModalClose","t","selectedLanguage","setSelectedLanguage","selectedFilterOption","setSelectedFilterOption","setLanguageFilter","showResourceCounts","setShowResourceCounts","languageToNumberOfResources","counts","filteredLanguages","useFuzzySearchList","item","score","matches","oneThird","handleClose","action","handleReset","handleToggleShowResourceCountsChange","renderLanguageOption","highlights","isSelected","className","Button","Highlight","Modal","Form","type","QUERY_TYPES","QUERY_TYPE_MAP","id","qt","QUERY_TYPES_WITH_BUILDER_SUPPORT","DOWNLOAD_FORMATS","DEFAULT_QUERY_TYPE","NUMBER_OF_RESULTS","NO_MORE_RECORDS_DIAGNOSTIC_URI","exampleQueries","QuerySuggestionsModal","queryTypesProp","queryTypes","requestedExamples","example","handleUseQueryClose","renderExample","description","nr","examples","DebouncedFuzzySearchInput","setFilter","deboundedFilter","useFuzzySearchListWithHierarchy","fields","flattenedResources","filteredResources","strings","matchesByField","fieldIdx","filteredResourcesHighlights","map","filteredResourcesScores","resourceIDsOfParentsToAdd","rootScore","filteredResourcesParents","aScore","bScore","ResourceSelector","highlighting","highlightings","shouldBeShown","localeForInfos","onSelectClick","expanded","setExpanded","showSubResources","setShowSubResources","shouldExpandToggleBeShown","subresource","handleToggleExpansionClick","isExpanded","handleToggleSelectionClick","handleToggleShowSubResourcesClick","doShow","renderResourceAvailabilityRestriction","ToggleButtonGroup","ToggleButton","GroupedResources","resourceScores","expandedProp","onExpandToggleClick","onSelectAllClick","onDeselectAllClick","visibleResources","handleToggleExpandButton","renderResourceCounts","rootResources","numResources","numResourcesRoot","numResourcesSelected","rid","Collapse","ResourceSelectionModal","showGrouping","availableResources","selectedResources","setSelectedResourceIDs","viewResourcesVisibility","setViewResourcesVisibility","viewResourcesGrouping","setViewResourcesGrouping","viewResourcesSorting","setViewResourcesSorting","resourcesGroupedByInstitute","setResourcesGroupedByInstitute","resourcesGroupedByLanguage","setResourcesGroupedByLanguage","sortedResources","resourceInfoLanguagesGrouped","filteredResourceScores","groupScore","institute","rScore","instituteToResourcesMap","instituteToLanguagesMap","resourcesInfo","languageCodeToNameHelper","changeSelectedResourceIDs","nextResourceIDs","handleViewOptionsVisibilityChange","handleViewOptionsGroupingChange","handleViewOptionsSortingChange","handleSelectAllClick","handleDeselectAllClick","handleSelectVisibleClick","handleResourceOnSelectClick","selected","handleGroupedResourcesOnSelectAllClick","resourcesInGroup","handleGroupedResourcesOnDeselectAllClick","shouldResourceBeShown","renderResources","FloatingLabel","amount","useFlipOnceTrue","setState","useSearchParamsFromHash","routerNavigate","useNavigate","hash","useLocation","setSearchParams","nextInit","newSearchParams","newHash","QueryBuilderModal","lazy","getQueryFromSearchParams","fallback","newQuery","getQueryTypeFromSearchParams","newQueryType","SearchInput","onSearch","onShowToast","availableResourcesProps","selectedResourcesProps","hasSearch","hashSearchParams","setHashSearchParams","showResourceSelectionModal","setShowResourceSelectionModal","showResourceSelectionModalGrouping","setShowResourceSelectionModalGrouping","showLanguageSelectionModal","setShowLanguageSelectionModal","showQuerySuggestionsModal","setShowQuerySuggestionsModal","showQueryBuilderModal","setShowQueryBuilderModal","isLoadQueryBuilderModalTriggered","triggerLoadQueryBuilderModal","setLanguage","setQueryType","validResourceIDs","setValidResourceIDs","setNumberOfResults","setQuery","queryError","queryInputEnhanced","setQueryInputEnhanced","getAvailableResourceIDsCallback","availableResourceIDs","doSearch","numberOfSelectedInstitutions","hasResourcesForQueryFCS","hasResourcesForQueryLex","showQueryBuilderButton","handleChangeQueryType","handleChangeNumberOfResults","handleChangeLanguageSelection","handleChangeResourceSelection","handleChangeQuerySuggestion","handleChangeQueryBuilderQuery","validResources","handleQueryChange","handleSearchSubmit","renderSelectedResourcesMsg","InputGroup","isChecked","Dropdown","info","Suspense","LoadMoreResultsButton","searchId","resourceId","pollDelay","queryClient","useQueryClient","isPolling","setIsPolling","isPendingRequesting","mutate","reset","useMutation","dataPolling","isLoadingPolling","isFetchingPolling","useQuery","isLoading","isFinished","showSpinner","handleLoadMoreClick","Spinner","computeShortLayerIds","layerIds","collapePlaceholder","layerIdTokens","maxTokens","layerIdTokenPattern","l","idx","_","plh","lId","lParts","v","idShort","filterMainLayerIds","layers","resourceLayers","layersWithMatchingSpanRanges","layer","span","layerInfo","layerA","layerB","layerAInfo","layerBInfo","layerAType","layerBType","ViewAdvancedTabular","availLayer","renderAdvancedLayers","layerIdShort","numSpans","mainLayerId","showLayerInfoColumns","Table","record","OverlayTrigger","Tooltip","ViewKwic","ViewLex","field","ListGroup","ViewLexPlain","fragment","ViewPlain","ResourceResultsModal","viewModeProps","showDiagnosticsProps","showDiagnostics","setShowDiagnostics","viewMode","setViewMode","hasDiagnostics","diagnostic","hasMoreResults","disableWeblicht","languagesFromKwic","handleViewModeChange","renderResults","label","Alert","ResourceSearchResult","resultInfo","showResourceDetails","htmlId","useId","showModal","setShowModal","inProgress","hasResults","isError","handleViewClick","handleModalClose","renderResultsCounter","DEFAULT_VIEW_MODE","DEFAULT_VIEW_MODE_WHEN_LEX","DEFAULT_VIEW_MODE_WHEN_FCS","DEFAULT_SORTING","lookup","titleA","titleB","countA","countB","DEFAULT_POLL_DELAY","SearchResults","sorting","setSorting","setShowResourceDetails","sortedResults","isAllLexHITS","numRequested","numInProgress","numWithResults","numWithResultsWithWarnings","numNoResults","numNoResultsWithIssues","numNoResultsWithExceptions","numNoResultsWithWarnings","numResultsTotalAvailable","numResultsTotalLoaded","sent","setSent","handleSortingChange","Popover","ProgressBar","fcsLogoDarkModeUrl","fcsLogoUrl","Search","setUrlSearchParams","setResources","setLanguages","setWeblichtLanguages","searchResourceIDs","setSearchResourceIDs","setHasSearch","toasts","setToasts","newResources","resourcesByAuth","numberOfAuthOnlyRessources","authFreeResources","aggregationContext","unavailable","isInputDisabled","mutateSearch","isSearchPending","handleSearch","searchData","handleShowToast","toast","ToastContainer","Toast","oldToast","useReactRouterNavigate","search","originalPath","newPath","generatePath","useRouteMatch","routeContext","UNSAFE_RouteContext","location","routes","routeMatch","matchRoutes","usePrevious","REQ_PARAM_RESOURCE_ID","DEFAULT_RESOURCE_INSTITUTION_VARIANT","DEFAULT_URL_VARIANT","extractTLD","domain","parts","lastTLDPart","preLastTLDPart","extractMainDomain","tld","parsed","shortDomain","getSURT","domainSURT","restOfURL","sortBySURT","urlA","urlB","surtA","surtB","len","fragmentA","fragmentB","res","FCSStatistics","getLinkSearch","resourcesAll","setResourcesAll","selectedResourceInstitutionVariantOption","setSelectedResourceInstitutionVariantOption","selectedEndpointURLVariantOption","setSelectedEndpointURLVariantOption","consortia","dataResources","isPendingResources","isErrorResources","errorResources","dataLanguages","isPendingLanguages","isErrorLanguages","errorLanguages","dataResourcesAll","isPendingResourcesAll","isErrorResourcesAll","errorResourcesAll","prevConsortia","newConsortia","flatResources","endpointURLsWithResources","endpointDomainsWithURLs","endpointTLDsWithURLs","institutionsWithResources","endpointInstitutionsWithResources","searchCapabilitiesWithResources","capabilities","capability","availabilityRestrictionsWithResources","restriction","consortiaWithResources","consortium","consortiumData","hasResources","hasLanguages","enableResourceLanguageSelectionModal","hasResourcesWithAvailabilityRestriction","toggleConsortium","renderEndpointURLTable","tldA","tldB","urls","endpoints","ResourcesDetails","validatorUrl","selectedResourceId","setSelectedResourceId","resourceFoundById","resourceFoundByHandle","newResourceId","selectedResource","isPending","handleChangeResource","renderResourceDropdownItem","nestLevel","renderResourceMetadataField","fieldType","fieldValues","fallbackEmptyValue","renderResourceHierarchy","renderRecursiveResourceHierarchy","resourceInHierarchy","showLexDVInfo","dv","showAdvDVInfo","EndpointStatistics","statistics","isScan","secondsFormatter","renderResourceWithInfos","resInfo","resourceInner","linkToResourceInfo","note","slugify","nameOrResInfo","reason","SectionStatistics","filterFields","setFilterFields","showIssuesOnly","setShowIssuesOnly","idSuffix","flatData","institutionName","institutionEndpoints","endpointUrl","endpointInfo","endpointsWithIssues","institutionData","strOrObj","handleFilterOptionToggleChange","f","institutionMatch","CATEGORY_LABELS","CATEGORY_LABELS_MAP","OTHER_TABS","Statistics","categoryId","useParams","navigate","setValidatorUrl","categoryKeys","defaultCategoryTab","refreshData","handleTabChange","Tab","section","contents","App","pathname","setPathname","newPathname","Routes","Route","CONFIG_NAMES_ONLY_ON_INITIALIZATION","configure","target","prop","updateLocale","userLanguages","foundLocale","userLanguage","basename","apiURL","QueryClient","axiosClient","matomoParams","rootId","domRoot","root","createRoot","StrictMode","QueryClientProvider","HelmetProvider","BrowserRouter"],"ignoreList":[0,8,9,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"sources":["../../node_modules/react-dom/client.js","../../src/utils/api.ts","../../src/hooks/useKeepSearchParams.ts","../../src/components/Footer/Footer.tsx","../../src/stores/app.ts","../../src/stores/locale.ts","../../src/assets/images/clarin-logo-wide.png","../../src/assets/images/icon-services-fcs.png","../../node_modules/bootstrap-icons/icons/person.svg?raw","../../node_modules/bootstrap-icons/icons/translate.svg?raw","../../src/components/Header/Header.tsx","../../src/hooks/useColorMode.ts","../../src/i18n/i18next.ts","../../src/hooks/useScript.ts","../../src/utils/cyrb53.ts","../../src/utils/matomo.ts","../../src/pages/About/data.ts","../../src/pages/About/About.tsx","../../node_modules/bootstrap-icons/icons/eye-fill.svg?raw","../../node_modules/bootstrap-icons/icons/magic.svg?raw","../../node_modules/bootstrap-icons/icons/arrow-clockwise.svg?raw","../../node_modules/bootstrap-icons/icons/balloon.svg?raw","../../node_modules/bootstrap-icons/icons/bank.svg?raw","../../node_modules/bootstrap-icons/icons/braces.svg?raw","../../node_modules/bootstrap-icons/icons/download.svg?raw","../../node_modules/bootstrap-icons/icons/envelope-arrow-up.svg?raw","../../node_modules/bootstrap-icons/icons/exclamation-triangle.svg?raw","../../node_modules/bootstrap-icons/icons/eye.svg?raw","../../node_modules/bootstrap-icons/icons/gear-fill.svg?raw","../../node_modules/bootstrap-icons/icons/highlights.svg?raw","../../node_modules/bootstrap-icons/icons/house-door.svg?raw","../../node_modules/bootstrap-icons/icons/info-circle.svg?raw","../../node_modules/bootstrap-icons/icons/link-45deg.svg?raw","../../node_modules/bootstrap-icons/icons/plus-circle.svg?raw","../../node_modules/bootstrap-icons/icons/repeat.svg?raw","../../node_modules/bootstrap-icons/icons/search.svg?raw","../../node_modules/bootstrap-icons/icons/shield-check.svg?raw","../../node_modules/bootstrap-icons/icons/shield-lock.svg?raw","../../node_modules/bootstrap-icons/icons/three-dots.svg?raw","../../node_modules/bootstrap-icons/icons/x-circle.svg?raw","../../src/pages/Help/Help.tsx","../../src/providers/AggregatorDataContext.tsx","../../src/providers/AxiosContext.tsx","../../src/providers/SearchParamsContext.tsx","../../src/utils/search.ts","../../src/utils/resources.ts","../../src/hooks/useDebounce.ts","../../src/utils/cursor.ts","../../src/utils/prism.ts","../../src/components/ContentEditable/ContentEditable.tsx","../../src/components/LanguageModal.tsx","../../src/utils/constants.ts","../../src/components/QuerySuggestionsModal/examples.ts","../../src/components/QuerySuggestionsModal/QuerySuggestionsModal.tsx","../../src/components/DebouncedFuzzySearchInput.tsx","../../src/hooks/useFuzzySearchListWithHierarchy.ts","../../src/components/ResourceSelectionModal/ResourceSelector.tsx","../../src/components/ResourceSelectionModal/GroupedResources.tsx","../../src/components/ResourceSelectionModal/ResourceSelectionModal.tsx","../../src/hooks/useFlipOnceTrue.ts","../../src/hooks/useSearchParamsFromHash.ts","../../src/pages/Search/SearchInput.tsx","../../src/components/ResourceSearchResult/LoadMoreResultsButton.tsx","../../src/components/ResourceSearchResult/ViewAdvancedTabular.tsx","../../src/components/ResourceSearchResult/ViewKwic.tsx","../../src/components/ResourceSearchResult/ViewLex.tsx","../../src/components/ResourceSearchResult/ViewLexPlain.tsx","../../src/components/ResourceSearchResult/ViewPlain.tsx","../../src/components/ResourceSearchResult/ResourceResultsModal.tsx","../../src/components/ResourceSearchResult/ResourceSearchResult.tsx","../../src/utils/results.ts","../../src/pages/Search/SearchResults.tsx","../../src/assets/images/logo-fcs-dark.png","../../src/assets/images/logo-fcs.png","../../src/pages/Search/Search.tsx","../../src/hooks/useNavigate.ts","../../src/hooks/useRouteMatch.ts","../../src/hooks/usePrevious.ts","../../src/pages/Statistics/utils.ts","../../src/pages/Statistics/FCSStatistics.tsx","../../src/pages/Statistics/ResourcesDetails.tsx","../../src/pages/Statistics/EndpointStatistics.tsx","../../src/pages/Statistics/SectionStatistics.tsx","../../src/pages/Statistics/Statistics.tsx","../../src/App.tsx","../../src/public.ts","../../src/index.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { type AxiosInstance } from 'axios'\n\nimport { type LanguageCode2NameMap, type LanguageFilterOptions } from '@/utils/search'\nimport { type DownloadFormats } from './constants'\n\n// https://app.quicktype.io/?l=ts\n\n// --------------------------------------------------------------------------\n\nexport interface ExtraScopingParams {\n  consortia?: string | null\n}\n\nexport const REQ_PARAM_CONSORTIA = 'x-consortia'\n\n// --------------------------------------------------------------------------\n\nexport interface InitData {\n  languages: LanguageCode2NameMap\n  resources: Resource[]\n  weblichtLanguages: string[]\n}\n\nexport interface Resource {\n  endpointInstitution: EndpointInstitution\n  endpoint: Endpoint\n  handle: string\n  numberOfRecords: null\n  languages: string[]\n  landingPage: null | string\n  title: string | { [language: string]: string }\n  description: null | string | { [language: string]: string }\n  institution: string | { [language: string]: string }\n  searchCapabilities: SearchCapability[]\n  availabilityRestriction: AvailabilityRestriction\n  availableDataViews: AvailableDataView[] | null\n  availableLayers: AvailableLayer[] | null\n  availableLexFields: AvailableLexField[] | null\n  subResources: Resource[]\n  id: string\n  searchCapabilitiesResolved: SearchCapability[]\n  // field will be set in resources.ts#fromApi\n  rootResourceId: string | null\n}\n\nexport interface Endpoint {\n  url: string\n  protocol: ProtocolVersion\n  searchCapabilities: SearchCapability[]\n}\n\nexport interface EndpointInstitution {\n  name: string\n  link: string\n  consortium?: Consortium\n  endpoints: Endpoint[]\n  sideloaded?: boolean\n}\n\nexport interface AvailableDataView {\n  identifier: AvailableDataViewIdentifier\n  mimeType: MIMEType\n  deliveryPolicy: DeliveryPolicy\n}\n\nexport interface AvailableLayer {\n  identifier: string\n  resultId: string\n  layerType: LayerType\n  encoding: Encoding\n  qualifier: null | string\n  altValueInfo: null\n  altValueInfoURI: null\n}\n\nexport interface AvailableLexField {\n  id: string\n  type: LexFieldType\n}\n\nexport type Consortium =\n  | 'CLARIAH-AT'\n  | 'CLARIN-BE'\n  | 'CLARIN-D'\n  | 'CLARIN-DK'\n  | 'CLARIN-IT'\n  | 'CLARIN-LV'\n  | 'CLARIN-PL'\n  | 'LINDAT/CLARIAH-CZ'\n  | 'PORTULAN CLARIN'\n  | 'SWE-CLARIN'\n  | string\n\nexport type SearchCapability = 'BASIC_SEARCH' | 'ADVANCED_SEARCH' | 'LEX_SEARCH'\nexport type ProtocolVersion = 'VERSION_2' | 'VERSION_1' | 'LEGACY'\nexport type AvailabilityRestriction = 'NONE' | 'AUTH_ONLY' | 'PERSONAL_IDENTIFIER'\n\nexport type Encoding = 'VALUE' | 'EMPTY'\nexport type DeliveryPolicy = 'SEND_BY_DEFAULT' | 'NEED_TO_REQUEST'\nexport type MIMEType =\n  | 'application/x-clarin-fcs-hits+xml'\n  | 'application/x-clarin-fcs-adv+xml'\n  | 'application/x-clarin-fcs-lex+xml'\n  | 'application/x-clarin-fcs-kwic+xml'\n  | 'application/x-cmdi+xml'\nexport type LayerType =\n  | 'text'\n  | 'lemma'\n  | 'pos'\n  | 'orth'\n  | 'norm'\n  | 'phonetic'\n  | 'word' // TODO: 'word' non-standard/legacy layer type?\n  | 'entity'\nexport type LexFieldType =\n  | 'entryId'\n  | 'lemma'\n  | 'translation'\n  | 'transcription'\n  | 'phonetic'\n  | 'definition'\n  | 'etymology'\n  | 'case'\n  | 'number'\n  | 'gender'\n  | 'pos'\n  | 'baseform'\n  | 'segmentation'\n  | 'sentiment'\n  | 'frequency'\n  | 'antonym'\n  | 'hyponym'\n  | 'hypernym'\n  | 'meronym'\n  | 'holonym'\n  | 'synonym'\n  | 'related'\n  | 'ref'\n  | 'senseRef'\n  | 'citation'\nexport type VirtualLexFieldType = 'lang'\nexport type AvailableDataViewIdentifier = 'hits' | 'adv' | 'cmdi' | 'kwic' | 'lex' | string\n\n// --------------------------------------------------------------------------\n\nexport async function getInitData(axios: AxiosInstance, params?: ExtraScopingParams) {\n  const urlParams = new URLSearchParams()\n  if (params?.consortia !== undefined && params?.consortia !== null) {\n    urlParams.set(REQ_PARAM_CONSORTIA, params.consortia)\n  }\n  const url = 'init' + (urlParams.entries().next().done ? '' : `?${urlParams}`)\n\n  const response = await axios.get(url)\n  console.debug('[getInitData]', response)\n  return response.data as InitData\n\n  // TODO: mock\n  // return { languages: [], resources: [], weblichtLanguages: [] }\n}\n\nexport async function getResources(axios: AxiosInstance, params?: ExtraScopingParams) {\n  const urlParams = new URLSearchParams()\n  if (params?.consortia !== undefined && params?.consortia !== null) {\n    urlParams.set(REQ_PARAM_CONSORTIA, params.consortia)\n  }\n  const url = 'resources' + (urlParams.entries().next().done ? '' : `?${urlParams}`)\n\n  const response = await axios.get(url)\n  console.debug('[getResources]', response)\n  return response.data as Resource[]\n\n  // TODO: mock\n  // return [] satisfies Resource[]\n}\n\nexport async function getLanguages(axios: AxiosInstance, params?: ExtraScopingParams) {\n  const urlParams = new URLSearchParams()\n  if (params?.consortia !== undefined && params?.consortia !== null) {\n    urlParams.set(REQ_PARAM_CONSORTIA, params.consortia)\n  }\n  const url = 'languages' + (urlParams.entries().next().done ? '' : `?${urlParams}`)\n\n  const response = await axios.get(url)\n  console.debug('[getLanguages]', response)\n  return response.data as LanguageCode2NameMap\n\n  // TODO: mock\n  // return {} satisfies LanguageCode2NameMap\n}\n\nexport async function getConsortia(axios: AxiosInstance) {\n  const url = 'consortia'\n  const response = await axios.get(url)\n  console.debug('[getConsortia]', response)\n  return (response.data as (string | null)[]).filter((consortium) => consortium !== null)\n}\n\n// --------------------------------------------------------------------------\n\nexport interface Statistics {\n  'Last Scan': StatisticsSection\n  'Recent Searches': StatisticsSection\n}\n\nexport interface StatisticsSection {\n  institutions: { [institutionName: string]: { [endpointUrl: string]: InstitutionEndpointInfo } }\n  date: number\n  timeout: number\n  isScan: boolean\n}\n\nexport interface InstitutionEndpointInfo {\n  version: ProtocolVersion\n  searchCapabilities: SearchCapability[]\n  rootResources: string[] | StatisticsResourceInfo[]\n  maxConcurrentRequests: number\n  diagnostics: Diagnostics\n  errors: Errors\n  maxQueueTime: number\n  avgQueueTime: number\n  avgExecutionTime: number\n  maxExecutionTime: number\n  numberOfRequests: number\n}\n\nexport interface Diagnostics {\n  [reason: string]: DiagnosticInfo\n}\nexport interface Errors {\n  [reason: string]: ErrorInfo\n}\n\nexport interface DiagnosticInfo {\n  diagnostic: Diagnostic\n  context: string\n  counter: number\n}\nexport interface Diagnostic {\n  uri: string\n  message: string\n  diagnostic: null | string\n}\n\nexport interface ErrorInfo {\n  exception: Exception\n  context: string\n  counter: number\n}\nexport interface Exception {\n  klass: string\n  message: string\n  cause: null | string\n}\n\nexport interface StatisticsResourceInfo {\n  handle: string\n  title: string\n  valid: boolean\n  notes: string[]\n}\n\n// --------------------------------------------------------------------------\n\nexport async function getStatisticsData(axios: AxiosInstance, params?: ExtraScopingParams) {\n  const urlParams = new URLSearchParams()\n  if (params?.consortia !== undefined && params?.consortia !== null) {\n    urlParams.set(REQ_PARAM_CONSORTIA, params.consortia)\n  }\n  const url = 'statistics' + (urlParams.entries().next().done ? '' : `?${urlParams}`)\n\n  const response = await axios.get(url)\n  console.debug('[getStatisticsData]', response)\n  return response.data as Statistics\n\n  // TODO: mock\n  // return {\n  //   'last-scan': { institutions: {}, date: 0, timeout: 0, isScan: true },\n  //   'Recent Searches': { institutions: {}, date: 0, timeout: 0, isScan: false },\n  // }\n}\n\n// --------------------------------------------------------------------------\n\nexport interface PostSearchData {\n  query: string\n  queryType: string\n  language: string\n  numberOfResults: string\n  resourceIds: string[]\n}\n\nexport interface PostSearchMoreResultsData {\n  resourceId: string\n  numberOfResults: number\n}\n\n// --------------------------------------------------------------------------\n\nexport async function postSearch(axios: AxiosInstance, searchParams: PostSearchData) {\n  const response = await axios.post('search', searchParams, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  })\n  console.debug('[postSearch]', searchParams, response)\n  return response.data as string // UUID with searchID\n}\n\nexport async function postSearchMoreResults(\n  axios: AxiosInstance,\n  searchID: string,\n  searchParams: PostSearchMoreResultsData\n) {\n  const response = await axios.post(`search/${searchID}`, searchParams, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n  })\n  console.debug('[postSearchMoreResults]', { searchID, searchParams }, response)\n  return response.data as string // UUID with searchID\n}\n\n// --------------------------------------------------------------------------\n\nexport interface SearchResults {\n  inProgress: number\n  results: ResourceSearchResult[]\n}\n\nexport interface SearchResultsMetaOnly {\n  inProgress: number\n  results: ResourceSearchResultMetaOnly[]\n}\n\nexport interface ResourceSearchResultMetaOnly {\n  id: string\n  resourceHandle: string\n  endpointUrl: string\n\n  inProgress: boolean\n  nextRecordPosition: number\n  numberOfRecords: number\n  numberOfRecordsLoaded: number\n\n  exception: Exception | null\n  diagnostics: Diagnostic[]\n\n  hasAdvResults: boolean\n  hasLexResults: boolean\n  isLexHits?: boolean\n}\n\nexport interface ResourceSearchResult {\n  id: string\n  endpointUrl: string\n  resourceHandle: string\n  resource: Resource\n\n  inProgress: boolean\n  nextRecordPosition: number\n  numberOfRecords: number\n  numberOfRecordsLoaded: number\n\n  exception: Exception | null\n  diagnostics: Diagnostic[]\n\n  isLexHits: boolean\n  hasAdvResults: boolean\n  hasLexResults: boolean\n\n  records: ResultRecord[]\n}\n\nexport interface ResultRecord {\n  pid: string\n  ref: string | null\n  lang: string | null\n\n  hits: Kwic\n  adv: AdvancedLayer[] | null\n  lex: LexEntry | null\n}\n\nexport interface Kwic {\n  fragments: KwicFragment[]\n  left: string\n  keyword: string\n  right: string\n}\n\nexport interface KwicFragment {\n  text: string\n  hit: boolean\n  hitKind?: string\n}\n\nexport interface AdvancedLayer {\n  id: string\n  spans: LayerFragment[]\n}\n\nexport interface LayerFragment {\n  text: string\n  hit: boolean\n  range?: [number, number]\n}\n\nexport interface LexEntry {\n  fields: LexField[]\n  lang: string\n  langUri: string\n  pid: string\n  reference: string | null\n}\n\nexport interface LexField {\n  type: LexFieldType | VirtualLexFieldType // TODO: test API responses\n  values: LexValue[]\n}\n\nexport interface LexValue {\n  value: string | null // ?\n  xmlId?: string\n  xmlLang?: string\n  langUri?: string\n  preferred?: boolean\n  ref?: string\n  idRefs?: string[]\n  vocabRef?: string\n  vocabValueRef?: string\n  type?: string\n  source?: string\n  sourceRef?: string\n  date?: string\n}\n\n// --------------------------------------------------------------------------\n\nexport async function getSearchResults(axios: AxiosInstance, searchID: string) {\n  if (!searchID) throw new Error('Invalid \"searchID\" parameter!')\n\n  const response = await axios.get(`search/${searchID}`)\n  console.debug('[getSearchResults]', { searchID }, response)\n\n  if (\n    (response.data as SearchResults)?.results?.length > 0 &&\n    (response.data as SearchResults).results[0].records === undefined\n  ) {\n    console.warn(\n      \"Using legacy FCS SRU Aggregator API with Search Results not in '.records'!\",\n      { searchID },\n      response.data\n    )\n  }\n\n  return response.data as SearchResults\n}\n\nexport async function getSearchResultsMetaOnly(axios: AxiosInstance, searchID: string) {\n  if (!searchID) throw new Error('Invalid \"searchID\" parameter!')\n\n  const response = await axios.get(`search/${searchID}/metaonly`)\n  console.debug('[getSearchResultsMetaOnly]', { searchID }, response)\n  return response.data as SearchResultsMetaOnly\n}\n\nexport async function getSearchResultsMetaOnlyForResource(\n  axios: AxiosInstance,\n  searchID: string,\n  resourceID: string\n) {\n  if (!searchID) throw new Error('Invalid \"searchID\" parameter!')\n  if (!resourceID) throw new Error('Invalid \"resourceID\" parameter!')\n\n  const response = await axios.get(\n    `search/${searchID}/metaonly?resourceId=${encodeURIComponent(resourceID)}`\n  )\n  console.debug('[getSearchResultsMetaOnlyForResource]', { searchID, resourceID }, response)\n\n  const results = (response.data as SearchResultsMetaOnly).results.filter(\n    (result) => result.id === resourceID\n  )\n  if (results.length === 0)\n    throw new Error(\n      `Results (meta) for resource not found! (searchId: ${searchID}, resourceId: ${resourceID})`\n    )\n\n  return results[0]\n}\n\nexport async function getSearchResultDetails(\n  axios: AxiosInstance,\n  searchID: string,\n  resourceID: string\n) {\n  if (!searchID) throw new Error('Invalid \"searchID\" parameter!')\n  if (!resourceID) throw new Error('Invalid \"resourceID\" parameter!')\n\n  const response = await axios.get(\n    `search/${searchID}?resourceId=${encodeURIComponent(resourceID)}`\n  )\n  console.debug('[getSearchResultDetails]', { searchID, resourceID }, response)\n\n  const results = (response.data as SearchResults).results.filter(\n    (result) => result.resource.id === resourceID\n  )\n  if (results.length === 0)\n    throw new Error(\n      `Results for resource not found! (searchId: ${searchID}, resourceId: ${resourceID})`\n    )\n\n  if (results[0].records === undefined) {\n    console.warn(\n      \"Using legacy FCS SRU Aggregator API with Search Results not in '.records'!\",\n      { searchID },\n      results\n    )\n  }\n\n  return results[0]\n}\n\n// --------------------------------------------------------------------------\n\n// TODO: alternatively to axios use AppStore?\n// const apiURL = AppStore.getState().apiURL\n\nexport function getURLForDownload(\n  axios: AxiosInstance,\n  searchID: string,\n  resourceID: string,\n  format: DownloadFormats,\n  language: string,\n  languageFilter: LanguageFilterOptions\n) {\n  const params = new URLSearchParams({\n    resourceId: resourceID, // encodeURIComponent\n    format: format,\n  })\n  if (languageFilter === 'byGuess' || languageFilter === 'byMetaAndGuess') {\n    params.set('filterLanguage', language)\n  }\n  const relURL = `search/${searchID}/download?${params.toString()}`\n  return axios.getUri({ url: relURL })\n}\n\nexport function getURLForWeblicht(\n  axios: AxiosInstance,\n  searchID: string,\n  resourceID: string,\n  languageForWeblicht: string | null,\n  language: string,\n  languageFilter: LanguageFilterOptions\n) {\n  const params = new URLSearchParams({\n    resourceId: resourceID, // encodeURIComponent\n  })\n  if (languageForWeblicht) {\n    params.set('filterLanguage', languageForWeblicht)\n  } else if (languageFilter === 'byGuess' || languageFilter === 'byMetaAndGuess') {\n    params.set('filterLanguage', language)\n  }\n  const relURL = `search/${searchID}/toWeblicht?${params.toString()}`\n  return axios.getUri({ url: relURL })\n}\n","import { useCallback, useMemo } from 'react'\nimport { useSearchParams, createSearchParams, type URLSearchParamsInit } from 'react-router'\n\nimport { REQ_PARAM_CONSORTIA } from '@/utils/api'\n\n// --------------------------------------------------------------------------\n\nexport const KEEP_PARAMS = [REQ_PARAM_CONSORTIA]\n\nexport function makeSearchQuery(params: URLSearchParams) {\n  return !params.entries().next().done ? `?${params}` : undefined\n}\n\nexport function useKeepSearchParamsRaw(): [\n  URLSearchParams,\n  (extraParams: URLSearchParamsInit) => URLSearchParams\n] {\n  const [urlSearchParams] = useSearchParams()\n\n  // filter search parameters to those we want to persist\n  const params = useMemo(\n    () =>\n      new URLSearchParams(\n        Array.from(urlSearchParams.entries()).filter(([name]) => KEEP_PARAMS.includes(name))\n      ),\n    [urlSearchParams]\n  )\n\n  // getter/compute method to create search query with user supplied extra parameters\n  const getNewSearchParams = useCallback(\n    (extraParams: URLSearchParamsInit) => {\n      const newParams = new URLSearchParams(params)\n      createSearchParams(extraParams).forEach((value, key) => newParams.append(key, value))\n      return newParams\n    },\n    [params]\n  )\n\n  return [params, getNewSearchParams]\n}\n\nexport default function useKeepSearchParams(): [\n  string | undefined,\n  (extraParams: URLSearchParamsInit) => string | undefined\n] {\n  const [params, getNewSearchParams] = useKeepSearchParamsRaw()\n\n  // most compact search query that uses the persistent parameters\n  const searchLink = makeSearchQuery(params)\n\n  // getter/compute method to create search query with user supplied extra parameters\n  const getNewSearchLink = useCallback(\n    (extraParams: URLSearchParamsInit) => makeSearchQuery(getNewSearchParams(extraParams)),\n    [getNewSearchParams]\n  )\n\n  return [searchLink, getNewSearchLink]\n}\n","import Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router'\n\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n\nfunction Footer() {\n  const { t } = useTranslation()\n\n  const i18nKeyTerms = 'urls.termsUseAndDisclaimer'\n  const urlTerms = t(i18nKeyTerms, { ns: 'common' })\n  const hasTerms = urlTerms !== i18nKeyTerms\n  const i18nKeyContact = 'urls.contact'\n  const urlContact = t(i18nKeyContact, { ns: 'common' })\n  const hasContact = urlContact !== i18nKeyContact\n  const i18nKeyServiceInfo = 'footer.serviceInfo.text'\n  const transServiceInfo = t(i18nKeyServiceInfo)\n  const hasServiceInfo = transServiceInfo !== i18nKeyServiceInfo\n\n  const [linkSearch] = useKeepSearchParams()\n\n  // ------------------------------------------------------------------------\n\n  return (\n    <footer className=\"text-muted\">\n      <Container>\n        <Row>\n          <Col className=\"text-start d-flex flex-sm-row flex-column column-gap-3 row-gap-2\">\n            {/* On smaller screen, show about link with contact link */}\n            <div>\n              <Link to={{ pathname: '/about', search: linkSearch }} className=\"hidden-xs\">\n                {t('footer.links.about')}\n              </Link>\n              {/* Center version on mobile */}\n              <div className=\"version-info text-muted text-center-xs\">\n                v{import.meta.env.APPLICATION_VERSION}\n              </div>\n            </div>\n            <Link to={{ pathname: '/stats', search: linkSearch }}>\n              {t('footer.links.statistics')}\n            </Link>\n          </Col>\n          <Col className=\"text-center\">\n            {/* CLARIN logo and copyright (center column on larger screens) */}\n            {hasServiceInfo && (\n              <Trans\n                i18nKey={i18nKeyServiceInfo}\n                components={{\n                  serviceBy: <a href={t('footer.serviceInfo.urlServiceBy')} />,\n                  hostedBy: <a href={t('footer.serviceInfo.urlHostedBy')} />,\n                }}\n              />\n            )}\n          </Col>\n          <Col className=\"hidden-xs text-end d-flex flex-sm-row flex-column justify-content-sm-end column-gap-3 row-gap-2\">\n            {/* Contact link in right column on larger screens */}\n            {hasTerms && <a href={urlTerms}>{t('footer.links.termsUseAndDisclaimer')}</a>}\n            {hasContact && <a href={urlContact}>{t('footer.links.contact')}</a>}\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import { createStore } from 'zustand/vanilla'\n\nimport { SetupAndInstallScriptParams as MatomoSetupParams } from '@/utils/matomo'\n\n// see: https://zustand.docs.pmnd.rs/apis/create-store#updating-state-based-on-previous-state\n\n// --------------------------------------------------------------------------\n\ntype AppStoreState = {\n  deployPath: string\n  apiURL: string\n  validatorURL: string | null\n\n  showSearchResultLink: boolean\n\n  appTitle: string\n  appTitleHead: string\n\n  matomoTrackingEnabled: boolean\n  matomoTrackingParams: string | MatomoSetupParams | null\n\n  authUsername: string | null\n  isAuthenticated: boolean\n}\ntype AppStoreActions = {\n  setDeployPath: (\n    path:\n      | AppStoreState['deployPath']\n      | ((currentPath: AppStoreState['deployPath']) => AppStoreState['deployPath'])\n  ) => void\n  setApiURL: (\n    url:\n      | AppStoreState['apiURL']\n      | ((currentURL: AppStoreState['apiURL']) => AppStoreState['apiURL'])\n  ) => void\n  setValidatorURL: (\n    url:\n      | AppStoreState['validatorURL']\n      | ((currentURL: AppStoreState['validatorURL']) => AppStoreState['validatorURL'])\n  ) => void\n\n  setShowSearchResultLink: (\n    show:\n      | AppStoreState['showSearchResultLink']\n      | ((oldShow: AppStoreState['showSearchResultLink']) => AppStoreState['showSearchResultLink'])\n  ) => void\n\n  setAppTitle: (\n    title:\n      | AppStoreState['appTitle']\n      | ((currentTitle: AppStoreState['appTitle']) => AppStoreState['appTitle'])\n  ) => void\n  setAppTitleHead: (\n    title:\n      | AppStoreState['appTitleHead']\n      | ((currentTitle: AppStoreState['appTitleHead']) => AppStoreState['appTitleHead'])\n  ) => void\n\n  setMatomoTrackingParams: (\n    params:\n      | AppStoreState['matomoTrackingParams']\n      | ((\n          oldParams: AppStoreState['matomoTrackingParams']\n        ) => AppStoreState['matomoTrackingParams'])\n  ) => void\n\n  setAuthUsername: (\n    user:\n      | AppStoreState['authUsername']\n      | ((oldUser: AppStoreState['authUsername']) => AppStoreState['authUsername'])\n  ) => void\n}\ntype AppStore = AppStoreState & AppStoreActions\n\n// --------------------------------------------------------------------------\n\nconst appStore = createStore<AppStore>((set) => ({\n  // state\n  deployPath: import.meta.env.DEPLOY_PATH,\n  apiURL: import.meta.env.API_URL,\n  validatorURL: import.meta.env.VALIDATOR_URL,\n  showSearchResultLink: import.meta.env.SHOW_SEARCH_RESULT_LINK,\n  appTitle: import.meta.env.APP_TITLE,\n  appTitleHead: import.meta.env.APP_TITLE_HEAD,\n  matomoTrackingEnabled: import.meta.env.FEATURE_TRACKING_MATOMO, // read-only\n  matomoTrackingParams: import.meta.env.FEATURE_TRACKING_MATOMO\n    ? import.meta.env.FEATURE_TRACKING_MATOMO_PARAMS\n    : null,\n  authUsername: null,\n  isAuthenticated: false,\n\n  // actions\n  setDeployPath: (path) =>\n    set((state) => ({ deployPath: typeof path === 'function' ? path(state.deployPath) : path })),\n  setApiURL: (url) =>\n    set((state) => ({ apiURL: typeof url === 'function' ? url(state.apiURL) : url })),\n  setValidatorURL: (url) =>\n    set((state) => ({ validatorURL: typeof url === 'function' ? url(state.validatorURL) : url })),\n  setShowSearchResultLink: (show) =>\n    set((state) => ({\n      showSearchResultLink: typeof show === 'function' ? show(state.showSearchResultLink) : show,\n    })),\n  setAppTitle: (title) =>\n    set((state) => ({ appTitle: typeof title === 'function' ? title(state.appTitle) : title })),\n  setAppTitleHead: (title) =>\n    set((state) => ({\n      appTitleHead: typeof title === 'function' ? title(state.appTitleHead) : title,\n    })),\n  setMatomoTrackingParams: (params) =>\n    set((state) => ({\n      matomoTrackingParams:\n        typeof params === 'function' ? params(state.matomoTrackingParams) : params,\n    })),\n  setAuthUsername: (user) =>\n    set((state) => {\n      const newUsername = typeof user === 'function' ? user(state.authUsername) : user\n      return {\n        authUsername: newUsername,\n        isAuthenticated: newUsername !== null && newUsername !== 'anonymous', // anonymous\n      }\n    }),\n}))\n\nexport default appStore\n","import { createStore } from 'zustand/vanilla'\nimport { useStore } from 'zustand/react'\n\n// --------------------------------------------------------------------------\n\ntype LocaleStoreState = {\n  locale: string\n  locales: string[]\n}\ntype LocaleStoreActions = {\n  setLocale: (\n    locale:\n      | LocaleStoreState['locale']\n      | ((currentLocale: LocaleStoreState['locale']) => LocaleStoreState['locale'])\n  ) => void\n  setLocales: (\n    locales:\n      | LocaleStoreState['locales']\n      | ((currentLocales: LocaleStoreState['locales']) => LocaleStoreState['locales'])\n  ) => void\n}\nexport type LocaleStore = LocaleStoreState & LocaleStoreActions\n\n// --------------------------------------------------------------------------\n\nconst localeStore = createStore<LocaleStore>((set) => ({\n  // state\n  locale: import.meta.env.LOCALE ?? 'en',\n  locales: import.meta.env.LOCALES ?? (import.meta.env.LOCALE ? [import.meta.env.LOCALE] : ['en']),\n\n  // actions\n  setLocale: (nextLocale) =>\n    // TODO: we could add validation here to not call set() if locale is unknown...\n    set((state) => ({\n      locale: typeof nextLocale === 'function' ? nextLocale(state.locale) : nextLocale,\n    })),\n  setLocales: (nextLocales) =>\n    set((state) => ({\n      locales: typeof nextLocales === 'function' ? nextLocales(state.locales) : nextLocales,\n    })),\n}))\n\nexport default localeStore\n\n// --------------------------------------------------------------------------\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const useLocaleStore = (selector?: (state: LocaleStore) => any) => {\n  const useBoundStore = useStore(localeStore, selector!)\n  Object.assign(useBoundStore, localeStore)\n  return useBoundStore\n}\n\n// --------------------------------------------------------------------------\n","export default \"__VITE_ASSET__CA6LwmRy__\"","export default \"__VITE_ASSET__ne7X2bFD__\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-person\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-translate\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M4.545 6.714 4.11 8H3l1.862-5h1.284L8 8H6.833l-.435-1.286zm1.634-.736L5.5 3.956h-.049l-.679 2.022z\\\"/>\\n  <path d=\\\"M0 2a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v3h3a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-3H2a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zm7.138 9.995q.289.451.63.846c-.748.575-1.673 1.001-2.768 1.292.178.217.451.635.555.867 1.125-.359 2.08-.844 2.886-1.494.777.665 1.739 1.165 2.93 1.472.133-.254.414-.673.629-.89-1.125-.253-2.057-.694-2.82-1.284.681-.747 1.222-1.651 1.621-2.757H14V8h-3v1.047h.765c-.318.844-.74 1.546-1.272 2.13a6 6 0 0 1-.415-.492 2 2 0 0 1-.94.31\\\"/>\\n</svg>\"","import Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link, NavLink } from 'react-router'\n// import { useStore } from 'zustand'\n\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\nimport AppStore from '@/stores/app'\nimport { useLocaleStore } from '@/stores/locale'\n\nimport appLogoUrl from '@images/app-logo.png' // NOTE: placeholder will be resolved with plugin\nimport logoUrl from '@images/icon-services-fcs.png'\n\nimport personIcon from 'bootstrap-icons/icons/person.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n\nfunction Header() {\n  const { t } = useTranslation()\n\n  const locale: string = useLocaleStore((state) => state.locale)\n  const locales: string[] = useLocaleStore((state) => state.locales)\n  const setLocale: (locale: string) => void = useLocaleStore((state) => state.setLocale)\n\n  // const AppStoreReactive = useStore(AppStore)\n  // const authName = AppStoreReactive.authUsername\n  const authName = AppStore.getState().authUsername\n  const isAuthenticated = AppStore.getState().isAuthenticated\n\n  const deployPath = AppStore.getState().deployPath ?? ''\n  const loginPath = deployPath + (deployPath.endsWith('/') ? '' : '/') + 'login'\n\n  const [linkSearch] = useKeepSearchParams()\n\n  const i18nKeyTranslationHelpUrl = 'urls.helpWithTranslations'\n  const urlHelpWithTranslations = t(i18nKeyTranslationHelpUrl, { ns: 'common' })\n  const hasHelpWithTranslationsUrl = urlHelpWithTranslations !== i18nKeyTranslationHelpUrl\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleLocaleChangeClick(eventKey: string | null) {\n    if (eventKey === null) return\n\n    console.debug('Change locale to:', eventKey, ', from:', locale)\n    setLocale(eventKey)\n  }\n\n  // ------------------------------------------------------------------------\n  // rendering\n\n  function renderAuth() {\n    if (!import.meta.env.FEATURE_AUTHENTICATION) return null\n\n    if (isAuthenticated) {\n      return (\n        <Navbar.Text>\n          <i dangerouslySetInnerHTML={{ __html: personIcon }} className=\"d-md-inline d-none\" />{' '}\n          <Trans\n            i18nKey=\"header.login.signedInAs\"\n            components={[<span className=\"fw-bold\">{authName}</span>]}\n          />\n        </Navbar.Text>\n      )\n    }\n\n    // unauthorized\n    return (\n      <Nav.Link href={`${loginPath}${linkSearch ?? ''}`}>\n        <i dangerouslySetInnerHTML={{ __html: personIcon }} className=\"d-md-inline d-none\" />{' '}\n        {t('header.login.login')}\n      </Nav.Link>\n    )\n  }\n\n  function renderLocales() {\n    // if only one locale available, then do not show anything...\n    if (!locales || locales.length === 1) return null\n\n    const langNames = new Intl.DisplayNames([locale, 'en'], { type: 'language' })\n\n    const currentSelectedLanguage = (\n      <>\n        <i dangerouslySetInnerHTML={{ __html: translateIcon }} className=\"d-md-inline d-none\" />\n        <span className=\"d-inline d-md-none\">{t('header.localeLabelOnMobile')}</span>{' '}\n        {locale.toUpperCase()}{' '}\n      </>\n    )\n\n    // TODO: update min-width of .dropdown-menu or add language names?\n    return (\n      <NavDropdown\n        title={currentSelectedLanguage}\n        align=\"end\"\n        className=\"ms-md-2\"\n        onSelect={handleLocaleChangeClick}\n      >\n        {locales.map((localeOption) => {\n          const langNamesLocalized = new Intl.DisplayNames([localeOption, 'en'], {\n            type: 'language',\n          })\n          return (\n            <NavDropdown.Item\n              key={localeOption}\n              disabled={localeOption === locale}\n              aria-disabled={localeOption === locale}\n              eventKey={localeOption}\n              title={t('header.localeOptionTitle', {\n                code: localeOption,\n                name: langNamesLocalized.of(localeOption),\n                // show translated language name in current active language\n                context: localeOption !== locale ? 'translated' : null,\n                translated: langNames.of(localeOption),\n              })}\n            >\n              {localeOption.toUpperCase()} – {langNamesLocalized.of(localeOption)}\n            </NavDropdown.Item>\n          )\n        })}\n        {hasHelpWithTranslationsUrl && (\n          <>\n            <NavDropdown.Divider />\n            <NavDropdown.Item\n              className=\"matomo_link text-wrap\"\n              target=\"_blank\"\n              href={urlHelpWithTranslations}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {t('header.localeHelpWithTranslations')}\n            </NavDropdown.Item>\n          </>\n        )}\n      </NavDropdown>\n    )\n  }\n\n  function renderAppLogo() {\n    if (!appLogoUrl) return null\n\n    return (\n      <Navbar.Brand className=\"ms-md-4\">\n        <img\n          src={appLogoUrl}\n          alt={t('header.appLogoAlt')}\n          height={30}\n          className=\"d-inline-block align-top\"\n          onError={({ currentTarget }) => {\n            // on error, simply disable the logo element\n            console.warn('Logo not found!')\n            currentTarget.onerror = null // prevents looping\n            currentTarget.parentElement!.style.display = 'none'\n          }}\n        />\n      </Navbar.Brand>\n    )\n  }\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  return (\n    <header>\n      <Navbar expand=\"md\" className=\"bg-body-tertiary\">\n        <Container>\n          <Navbar.Brand as={Link} to={{ pathname: '/', search: linkSearch }}>\n            <img\n              src={logoUrl}\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n              alt={`${t('header.title')} logo`}\n            />{' '}\n            {t('header.title')}\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"header-navbar-nav\" />\n          <Navbar.Collapse id=\"header-navbar-nav\">\n            <Nav className=\"w-100 d-flex\">\n              <Nav.Link as={NavLink} to={{ pathname: '/', search: linkSearch }}>\n                {t('header.menu.home')}\n              </Nav.Link>\n              <Nav.Link as={NavLink} to={{ pathname: '/help', search: linkSearch }}>\n                {t('header.menu.help')}\n              </Nav.Link>\n              <Navbar.Text className=\"ms-auto d-md-block d-none\" />\n              {renderAuth()}\n              {renderLocales()}\n              {renderAppLogo()}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","/*!\n * Color mode switcher based on example from Bootstrap 5 docs.\n * @see https://getbootstrap.com/docs/5.3/customize/color-modes/#javascript\n */\n\nimport { useEffect } from 'react'\n\n// --------------------------------------------------------------------------\n\nfunction getPreferredTheme() {\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n}\n\nfunction setTheme(theme: string) {\n  if (theme === 'auto') {\n    document.documentElement.setAttribute(\n      'data-bs-theme',\n      window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n    )\n  } else {\n    document.documentElement.setAttribute('data-bs-theme', theme)\n  }\n}\n\n// --------------------------------------------------------------------------\n\n/**\n * Sets the theme for the document, adds event listener for color-scheme changes.\n * Should run once, and will stop the event listener at the lifecycle end.\n */\nexport default function useColorMode() {\n  // run once, set theme, add event listener; stop event listener on dispose\n  useEffect(() => {\n    function updateTheme() {\n      setTheme(getPreferredTheme())\n    }\n\n    console.debug('Set color mode and watch for changes ...')\n\n    // run initial update\n    updateTheme()\n\n    // start event listener\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', updateTheme)\n    // stop event listener on dispose\n    return () =>\n      window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', updateTheme)\n  }, [])\n}\n","import type { TOptions } from 'i18next'\nimport i18n from 'i18next'\nimport resourcesToBackend from 'i18next-resources-to-backend'\nimport { initReactI18next } from 'react-i18next'\n\nimport localeStore from '@/stores/locale'\n\nimport resourcesEnApp from '@/locales/en/app.json'\nimport resourcesEnCommon from '@/locales/en/common.json'\n\n// pre-loaded resources\nconst resources = {\n  en: {\n    app: resourcesEnApp,\n    common: resourcesEnCommon,\n  },\n}\n\n// i18n namespace prefix to allow for overriding global defaults\nexport const I18N_NS_CONTEXT_PREFIX = import.meta.env.I18N_NS_CONTEXT_PREFIX as string | undefined\n// default language\nexport const LANGUAGE = localeStore.getInitialState().locale\nexport const LANGUAGES = localeStore.getInitialState().locales\n\n// --------------------------------------------------------------------------\n\nexport function resolveNs(ns?: string[] | string, defaultNSs?: string[]) {\n  if (!ns) return defaultNSs\n  const nsParam = typeof ns === 'string' ? [ns] : ns\n  const nsAndPrefiex = I18N_NS_CONTEXT_PREFIX\n    ? [...nsParam.map((ns) => `${I18N_NS_CONTEXT_PREFIX}.${ns}`), ...nsParam]\n    : nsParam\n  return defaultNSs ? [...nsAndPrefiex, ...defaultNSs] : nsAndPrefiex\n}\n\n// --------------------------------------------------------------------------\n\n// list of all (pre-loaded namespaces)\nconst I18N_NS_ALL_BASE = ['app', 'common']\n// build list with prefixed variants with higher lookup priority\nconst I18N_NS_ALL = resolveNs(I18N_NS_ALL_BASE)\n\n// --------------------------------------------------------------------------\n\nfunction toArray(val: readonly string[] | string) {\n  return typeof val === 'string' || !Array.isArray(val) ? [String(val)] : val\n}\n\nfunction postProcessTryPrefixedNamespacesFirst(\n  value: string,\n  key: string | string[],\n  options: TOptions,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  translator: any\n): string {\n  // if no prefix defined, nothing to do here\n  if (I18N_NS_CONTEXT_PREFIX === undefined) return value\n\n  // console.debug('[postProcessor:try-prefixed-namespaces-first]', { value, key, options, translator })\n\n  // if we are recursing, then exit\n  if (options?.['postProcessTryPrefixedNamespacesFirst'] !== undefined) return value\n\n  // see: i18next/src/Translator.js\n\n  const keys = toArray(key)\n  const namespaces = toArray(options.ns || translator.options.defaultNS || [])\n  // NOTE: we do NOT do any namespaces check in keys\n\n  // check which namespaces to search for key\n  const resolved = translator.resolve(keys, options)\n\n  // we found a translation, only check namespace where key was found (and if options.ns argument)\n  // if no translation, check all namespaces\n  const namespacesToCheck =\n    resolved?.res !== undefined\n      ? [...toArray(options.ns || []), resolved.usedNS]\n      : [...toArray(options.ns || []), ...namespaces]\n  // TODO: or just namespaces?\n\n  // prefix namespaces\n  const namespacesPrefixed = namespacesToCheck.map((ns: string) =>\n    ns.startsWith(I18N_NS_CONTEXT_PREFIX) ? ns : `${I18N_NS_CONTEXT_PREFIX}.${ns}`\n  )\n\n  // use translator.translate() instead of translator.resolve() for all the fancy processing\n  const result = translator.translate(keys, {\n    ...options,\n    ns: namespacesPrefixed,\n    postProcessTryPrefixedNamespacesFirst: true, // marker to stop recursion\n  })\n\n  // const resolvedPrefixed = translator.resolve(keys, { ...options, ns: namespacesPrefixed })\n  // console.debug('[postProcessor:try-prefixed-namespaces-first]', { resolved, resolvedPrefixed, keys, namespaces, namespacesToCheck, namespacesPrefixed, result })\n\n  // return \"new\" result if not a key (not found) otherwise return default value\n  return !keys.includes(result) ? result : value\n}\n\n// NOTE: that translator.exists() will NOT work as it ignores namespaces\n\n// --------------------------------------------------------------------------\n\n// configure i18next\ni18n\n  // react integration\n  .use(initReactI18next)\n  // translation lookup with prefix\n  .use({\n    type: 'postProcessor',\n    name: 'try-prefixed-namespaces-first',\n    process: postProcessTryPrefixedNamespacesFirst,\n  })\n  // dynamic resource loading\n  .use(\n    resourcesToBackend((language: string, namespace: string) => {\n      // console.debug('[resourcesToBackend] Trying to load resources', { language, namespace })\n      const resources = import(`@/locales/${language}/${namespace}.json`)\n      // console.debug('[resourcesToBackend] Got resources', resources)\n      return resources\n    })\n  )\n  // initialization\n  .init({\n    lng: LANGUAGE,\n    fallbackLng: 'en', // TODO: this should always be \"en\" or a language with most translations!\n    supportedLngs: LANGUAGES,\n\n    // i18n all namespaces to load\n    ns: I18N_NS_ALL,\n    // i18n namespaces check for keys\n    defaultNS: I18N_NS_ALL_BASE,\n    fallbackNS: I18N_NS_ALL_BASE,\n\n    debug: import.meta.env.DEV,\n    // saveMissing: true,\n    // returnDetails: true,\n\n    interpolation: {\n      escapeValue: false,\n    },\n    // allow null to \"skip\" certain translations\n    // returnNull: true,\n\n    // TODO: for query suggestions?\n    // returnObjects: true,\n\n    postProcess: ['try-prefixed-namespaces-first'],\n\n    resources,\n    partialBundledLanguages: true,\n\n    react: {\n      // useTranslation() is able to to multiple namespaces!\n      nsMode: 'fallback',\n\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p', 'em', 'kbd', 'code'],\n    },\n  })\n\n// DEBUG\nObject.assign(window, { i18n })\n\nexport default i18n\n","import { useEffect } from 'react'\n\n// from: https://stackoverflow.com/a/34425083/9360161\n\nfunction addScriptActions(url: string): [() => void, () => void] {\n  let script: HTMLScriptElement | null = null\n  const container = document.body\n\n  function addScript() {\n    script = document.createElement('script')\n\n    script.src = url\n    script.async = true\n\n    container.appendChild(script)\n  }\n\n  function removeScript() {\n    if (script === null) return\n\n    container.removeChild(script)\n  }\n\n  return [addScript, removeScript]\n}\n\nexport default function useScript(\n  url: string | null | undefined,\n  { delay = undefined }: { delay?: number } = {}\n) {\n  useEffect(() => {\n    if (!url) return\n\n    const [addScript, removeScript] = addScriptActions(url)\n\n    let timeoutId: NodeJS.Timeout | undefined = undefined\n    if (delay !== undefined && delay > 0) {\n      timeoutId = setTimeout(() => {\n        addScript()\n      }, delay)\n    } else {\n      addScript()\n    }\n\n    return () => {\n      if (timeoutId !== undefined) clearTimeout(timeoutId)\n      removeScript()\n    }\n  }, [url, delay])\n}\n","// https://github.com/bryc/code/blob/master/jshash/experimental/cyrb53.js\n\n/*\n    cyrb53 (c) 2018 bryc (github.com/bryc)\n    License: Public domain (or MIT if needed). Attribution appreciated.\n    A fast and simple 53-bit string hash function with decent collision resistance.\n    Largely inspired by MurmurHash2/3, but with a focus on speed/simplicity.\n*/\nexport default function cyrb53(str: string, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed\n  let h2 = 0x41c6ce57 ^ seed\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i)\n    h1 = Math.imul(h1 ^ ch, 2654435761)\n    h2 = Math.imul(h2 ^ ch, 1597334677)\n  }\n  h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507)\n  h1 ^= Math.imul(h2 ^ (h2 >>> 13), 3266489909)\n  h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507)\n  h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909)\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0)\n}\n\n/*\n    cyrb53a beta (c) 2023 bryc (github.com/bryc)\n    License: Public domain (or MIT if needed). Attribution appreciated.\n    This is a work-in-progress, and changes to the algorithm are expected.\n    The original cyrb53 has a slight mixing bias in the low bits of h1.\n    This doesn't affect collision rate, but I want to try to improve it.\n    This new version has preliminary improvements in avalanche behavior.\n*/\nexport function cyrb53a_beta(str: string, seed = 0) {\n  let h1 = 0xdeadbeef ^ seed\n  let h2 = 0x41c6ce57 ^ seed\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i)\n    h1 = Math.imul(h1 ^ ch, 0x85ebca77)\n    h2 = Math.imul(h2 ^ ch, 0xc2b2ae3d)\n  }\n  h1 ^= Math.imul(h1 ^ (h2 >>> 15), 0x735a2d97)\n  h2 ^= Math.imul(h2 ^ (h1 >>> 15), 0xcaf649a9)\n  h1 ^= h2 >>> 16\n  h2 ^= h1 >>> 16\n  return 2097152 * (h2 >>> 0) + (h1 >>> 11)\n}\n","import cyrb53 from '@/utils/cyrb53'\n\n// --------------------------------------------------------------------------\n\n// declare global {\n//   interface Window {\n//     _paq: { push: (params: unknown[]) => void }\n//   }\n// }\n\ndeclare const window: Window &\n  typeof globalThis & {\n    _paq: unknown[] | { push: (params: unknown[]) => void }\n  }\n\nexport interface SetupParams {\n  siteId: number\n  trackerUrl: string\n  enableLinkTracking?: boolean\n  domains?: string[]\n  userId?: string\n}\n\ninterface InstallScriptParams {\n  srcUrl: string\n}\n\ninterface OptOutScriptParams {\n  indexUrl?: string\n}\n\nexport type SetupAndInstallScriptParams = SetupParams & InstallScriptParams & OptOutScriptParams\n\n// --------------------------------------------------------------------------\n\nwindow._paq = window['_paq'] || []\n\n// --------------------------------------------------------------------------\n\nexport function setup({\n  siteId,\n  trackerUrl,\n  enableLinkTracking = true,\n  domains = [],\n  userId = undefined,\n}: SetupParams) {\n  window._paq.push(['setTrackerUrl', trackerUrl])\n  window._paq.push(['setSiteId', siteId])\n\n  if (userId) {\n    // should optimally a hashed ID\n    window._paq.push(['setUserId', userId])\n  }\n\n  if (Array.isArray(domains) && domains.length > 0) {\n    window._paq.push(['setDomains', domains])\n  }\n\n  if (enableLinkTracking) {\n    window._paq.push(['enableLinkTracking'])\n    // https://developer.matomo.org/guides/tracking-javascript-guide#changing-the-pause-timer\n    window._paq.push(['setLinkTrackingTimer', 250]) // 250 milliseconds\n  }\n}\n\nexport function installScript({ srcUrl }: InstallScriptParams) {\n  // https://developer.matomo.org/guides/tracking-javascript-guide\n  const script = document.createElement('script')\n  const scripts = document.getElementsByTagName('script')[0]\n\n  script.type = 'text/javascript'\n  script.async = true\n  script.defer = true\n  script.src = srcUrl\n\n  if (scripts && scripts.parentNode) {\n    scripts.parentNode.insertBefore(script, scripts)\n  }\n}\n\nexport function getConfig(configString: string | SetupAndInstallScriptParams | null | undefined) {\n  if (!configString) return null\n\n  let params: SetupAndInstallScriptParams | null = null\n  if (typeof configString === 'string') {\n    try {\n      params = JSON.parse(configString)\n      console.debug('tracking params', params)\n    } catch (error) {\n      console.error('Error trying to parse tracking params!', error)\n      return null\n    }\n  } else if (typeof configString === 'object') {\n    params = configString\n    console.debug('tracking params (object)', params)\n  }\n\n  if (params) {\n    if (!Object.hasOwn(params, 'indexUrl') && Object.hasOwn(params, 'srcUrl')) {\n      const srcUrl = params['srcUrl']\n      const baseUrl = srcUrl.split('/').slice(0, -1).join('/')\n      const indexUrl = `${baseUrl}/index.php`\n      console.debug('Computed matomo indexUrl=', indexUrl, ' from srcUrl=', srcUrl)\n      params['indexUrl'] = indexUrl\n    }\n  }\n\n  return params\n}\n\nexport function setupAndInstallFromConfigString(\n  configString?: string | SetupAndInstallScriptParams | null\n) {\n  const params = getConfig(configString)\n  if (params === null) return false\n\n  const siteId = params['siteId']\n  const trackerUrl = params['trackerUrl']\n  const srcUrl = params['srcUrl']\n  const domains = params['domains'] // can be undefined or empty array\n  const userId = params['userId']?.toString()\n\n  if (srcUrl === undefined) {\n    console.warn('No \"srcUrl\" configuration set for tracking!')\n    return false\n  }\n  if (trackerUrl === undefined) {\n    console.warn('No \"trackerUrl\" configuration set for tracking!')\n    return false\n  }\n  if (siteId === undefined || !Number.isInteger(siteId)) {\n    console.warn('No \"siteId\" configuration set for tracking!')\n    return false\n  }\n\n  const setupParams = { siteId, trackerUrl, domains } as SetupParams\n  if (userId) setupParams['userId'] = cyrb53(userId).toString()\n  const installParams = { srcUrl }\n\n  setup(setupParams)\n  trackPageView(document.location.href || window.location.href, document.title)\n  installScript(installParams)\n\n  return true // should be successful\n}\n\n// --------------------------------------------------------------------------\n\nexport function trackPageView(url: string, title?: string, referrerUrl?: string) {\n  window._paq.push(['setDocumentTitle', title ?? document.title])\n  window._paq.push(['setCustomUrl', url])\n  if (referrerUrl !== undefined) window._paq.push(['setReferrerUrl', referrerUrl])\n  window._paq.push(['trackPageView'])\n}\n\nexport function trackSiteSearch(\n  query: string,\n  category: string | boolean = false,\n  count: number | boolean = false\n) {\n  // TODO: category for \"search\"/\"search-more\" vs. cql/fcs/lex/...?\n  // TODO: custom dimension for search params (queryType, numberOfResults, resourceIDs)\n  window._paq.push(['trackSiteSearch', query, category, count])\n}\n\nexport function trackSiteSearchWithDimensions(\n  query: string,\n  category: string | boolean = false,\n  count: number | boolean = false,\n  dimensions: { [key: string]: unknown }\n) {\n  window._paq.push(['trackSiteSearch', query, category, count, dimensions])\n}\n\n// --------------------------------------------------------------------------\n","export interface Technology {\n  id: string\n  name: string\n  url?: string\n  license?: string\n  licenseUrl?: string\n  usage?: string\n  hide?: boolean\n}\n\n// --------------------------------------------------------------------------\n\n// TODO: add affiliations?\nexport const people = [\n  'Emanuel Dima',\n  'Erik Körner',\n  'Leif-Jöran Olsson',\n  'Yana Panchenko',\n  'Oliver Schonefeld',\n  'Dieter Van Uytvanck',\n]\n\nexport const technologiesBackend: readonly Technology[] = [\n  {\n    id: 'dropwizard',\n    name: 'Dropwizard',\n    url: 'https://www.dropwizard.io/',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/dropwizard/dropwizard/blob/release/3.0.x/LICENSE',\n    usage: 'web server',\n  },\n  {\n    id: 'de.mpg.mpgaai:mpgaai-shhaa',\n    name: 'MPG-AAI - simple http header authn/z',\n    url: 'https://github.com/clarin-eric/mpgaai', // TODO: ...\n    license: 'Apache License 2.0',\n    licenseUrl: 'http://www.apache.org/licenses/LICENSE-2.0.txt',\n    usage: 'AAI / Shibboleth support',\n  },\n  {\n    id: 'io.swagger.core.v3',\n    name: 'Swagger Core',\n    url: 'https://github.com/swagger-api/swagger-core',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/swagger-api/swagger-core/blob/master/LICENSE',\n    usage: 'REST API documentation',\n  },\n  {\n    id: 'org.glassfish.jersey',\n    name: 'Eclipse Jersey',\n    url: 'https://eclipse-ee4j.github.io/jersey/',\n    license: 'Eclipse Public License 2.0',\n    licenseUrl: 'https://github.com/eclipse-ee4j/jersey/blob/2.x/LICENSE.md',\n    usage: 'RESTful web services',\n  },\n  {\n    id: 'org.slf4j',\n    name: 'Simple Logging Facade for Java (SLF4J)',\n    url: 'https://www.slf4j.org/',\n    license: 'MIT License',\n    licenseUrl: 'https://www.slf4j.org/license.html',\n    usage: 'logging',\n  },\n  {\n    id: 'org.junit',\n    name: 'JUnit 5',\n    url: 'https://junit.org/',\n    license: 'Eclipse Public License 2.0',\n    licenseUrl: 'https://github.com/junit-team/junit-framework/blob/main/LICENSE.md',\n    usage: 'testing',\n  },\n  {\n    id: 'optimaize/language-detector',\n    name: 'Optimaize Language Detector',\n    url: 'https://github.com/optimaize/language-detector',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/optimaize/language-detector/blob/master/LICENSE',\n    usage: 'language detection of results',\n  },\n  {\n    id: 'org.apache.commons:commons-text',\n    name: 'Apache Commons Text',\n    url: 'https://commons.apache.org/proper/commons-text/',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/apache/commons-text/blob/master/LICENSE.txt',\n    usage: 'export format',\n  },\n  {\n    id: 'com.sun.xml.bind',\n    name: 'JAXB Reference Implementation',\n    url: 'https://eclipse-ee4j.github.io/jaxb-ri/',\n    license: 'Common Development and Distribution License (CCDL) 1.1',\n    licenseUrl: 'https://github.com/javaee/jaxb-v2/blob/2.3.0.1/jaxb-ri/License.txt',\n    usage: 'XML support',\n    hide: true,\n  },\n  {\n    id: 'eu.clarin.weblicht:wlfxb',\n    name: 'Weblicht wlfxb',\n    url: 'https://weblicht.sfs.uni-tuebingen.de',\n    license: 'GNU Lesser General Public License v3.0',\n    licenseUrl: 'https://github.com/weblicht/wlfxb/blob/master/LICENSE.txt',\n    usage: 'export format',\n  },\n  {\n    id: 'org.apache.poi:poi-ooxml',\n    name: 'Apache POI', // API Based On OPC and OOXML Schemas\n    url: 'https://poi.apache.org/',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/apache/poi/blob/trunk/legal/LICENSE',\n    usage: 'export format',\n  },\n  {\n    id: 'org.jopendocument:jOpenDocument',\n    name: 'jOpenDocument',\n    url: 'https://www.jopendocument.org/',\n    license: 'GNU Lesser General Public License v3.0',\n    licenseUrl: 'https://www.jopendocument.org/support.html',\n    usage: 'export format',\n  },\n  {\n    id: 'eu.clarin.sru:sru-client',\n    name: 'CLARIN SRU/CQL Client',\n    license: 'GNU General Public License v3.0',\n    licenseUrl: 'https://github.com/clarin-eric/fcs-sru-client/blob/main/LICENSE.txt',\n    usage: 'SRU / CQL client framework',\n    hide: true,\n  },\n  {\n    id: 'eu.clarin.sru.fcs:fcs-simple-client',\n    name: 'CLARIN-FCS Client',\n    license: 'GNU General Public License v3.0',\n    licenseUrl: 'https://github.com/clarin-eric/fcs-simple-client/blob/main/LICENSE.txt',\n    usage: 'FCS client framework',\n    hide: true,\n  },\n]\n\nexport const technologiesFrontEnd: readonly Technology[] = [\n  {\n    id: 'react',\n    name: 'React',\n    url: 'https://react.dev/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/facebook/react/blob/main/LICENSE',\n  },\n  {\n    id: 'react-dom',\n    name: 'ReactDOM',\n    url: 'https://react.dev/reference/react-dom',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/facebook/react/blob/main/LICENSE',\n    hide: true,\n  },\n  {\n    id: 'react-router',\n    name: 'React Router',\n    url: 'https://reactrouter.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/remix-run/react-router/blob/main/LICENSE.md',\n    usage: 'single page application routing',\n  },\n  {\n    id: 'react-bootstrap',\n    name: 'React Bootstrap',\n    url: 'https://react-bootstrap.netlify.app/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/react-bootstrap/react-bootstrap/blob/master/LICENSE',\n    usage: 'react bindings for bootstrap',\n  },\n  {\n    id: 'bootstrap',\n    name: 'Bootstrap',\n    url: 'https://getbootstrap.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/twbs/bootstrap/blob/main/LICENSE',\n    usage: 'UI framework',\n  },\n  {\n    id: 'bootstrap-icons',\n    name: 'Bootstrap Icons',\n    url: 'https://icons.getbootstrap.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/twbs/icons/blob/main/LICENSE',\n  },\n  {\n    id: '@tanstack/react-query',\n    name: 'TanStack Query',\n    url: 'https://tanstack.com/query',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/TanStack/query/blob/main/LICENSE',\n    usage: 'data loading via REST APIs',\n  },\n  {\n    id: 'axios',\n    name: 'Axios',\n    url: 'https://axios-http.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/axios/axios/blob/v1.x/LICENSE',\n    usage: 'cross-browser support for REST API requests',\n  },\n  {\n    id: 'antlr4ng',\n    name: 'Next Generation TypeScript runtime for ANTLR4',\n    url: 'https://github.com/mike-lischke/antlr4ng',\n    license: 'The \"BSD license\"',\n    licenseUrl: 'https://github.com/mike-lischke/antlr4ng/blob/main/LICENSE.txt',\n    usage: 'query parser',\n  },\n  {\n    id: 'i18next',\n    name: 'i18next',\n    url: 'https://www.i18next.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/i18next/i18next/blob/master/LICENSE',\n    usage: 'translations',\n  },\n  {\n    id: 'react-i18next',\n    name: 'react-i18next',\n    url: 'https://react.i18next.com/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/i18next/react-i18next/blob/master/LICENSE',\n    usage: 'translations',\n    hide: true,\n  },\n  {\n    id: 'i18next-resources-to-backend',\n    name: 'i18next-resources-to-backend',\n    url: 'https://github.com/i18next/i18next-resources-to-backend',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/i18next/i18next-resources-to-backend/blob/main/licence',\n    usage: 'translation resource loading',\n    hide: true,\n  },\n  {\n    id: 'zustand',\n    name: 'Zustand',\n    url: 'https://zustand-demo.pmnd.rs/',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/pmndrs/zustand/blob/main/LICENSE',\n    usage: 'state management',\n  },\n  {\n    id: '@nozbe/microfuzz',\n    name: 'microfuzz',\n    url: 'https://github.com/Nozbe/microfuzz',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/Nozbe/microfuzz/blob/main/LICENSE',\n    usage: 'fuzzy search',\n  },\n  {\n    id: 'react-helmet-async',\n    name: 'React Helmet (async fork)',\n    url: 'https://github.com/staylor/react-helmet-async',\n    license: 'Apache License 2.0',\n    licenseUrl: 'https://github.com/staylor/react-helmet-async/blob/main/LICENSE',\n    usage: 'HTML head modifications',\n  },\n  {\n    id: 'react-slugify',\n    name: 'react-slugify',\n    url: 'https://github.com/martpie/react-slugify',\n    license: 'MIT License',\n    licenseUrl: 'https://github.com/martpie/react-slugify/blob/master/LICENSE',\n    usage: 'jump id fragment generation',\n  },\n]\n","import Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport { Helmet } from 'react-helmet-async'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router'\n\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\nimport useScript from '@/hooks/useScript'\nimport AppStore from '@/stores/app'\nimport { useLocaleStore } from '@/stores/locale'\nimport { getConfig } from '@/utils/matomo'\nimport { people, technologiesBackend, technologiesFrontEnd, type Technology } from './data'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n\nfunction About() {\n  const { t } = useTranslation()\n\n  const userLocale = useLocaleStore((state) => state.locale)\n\n  const i18nKeyTerms = 'urls.termsUseAndDisclaimer'\n  const urlTerms = t(i18nKeyTerms, { ns: 'common' })\n\n  const hasTerms = urlTerms !== i18nKeyTerms\n  const hasMatomo = AppStore.getState().matomoTrackingEnabled\n  const matomoIndexUrl = getConfig(AppStore.getState().matomoTrackingParams)?.['indexUrl']\n  const matomoOptOutScript = matomoIndexUrl\n    ? `${matomoIndexUrl}?module=CoreAdminHome&action=optOutJS&language=auto&div=matomo-opt-out`\n    : null\n\n  // need to add script like this to work (add a bit of delay in case rending might take a bit)\n  useScript(matomoOptOutScript, { delay: 300 })\n\n  const appTitleHead = AppStore.getState().appTitleHead\n\n  const [linkSearch] = useKeepSearchParams()\n\n  const hasApplicationVersionInfo =\n    import.meta.env.VITE_GIT_APP_INFO_TAG ||\n    import.meta.env.VITE_GIT_APP_INFO_TAG ||\n    import.meta.env.VITE_GIT_APP_INFO_REF ||\n    import.meta.env.GIT_APP_INFO_DATE\n\n  // whether to show two column info with backend and frontend (or just the frontend)\n  const showBackendInfos = hasApplicationVersionInfo\n\n  // ------------------------------------------------------------------------\n\n  function renderTechnologiesList(technologies: readonly Technology[]) {\n    return (\n      <ul>\n        {technologies\n          .filter((technology) => technology.hide !== true)\n          .map((technology) => (\n            <li key={technology.id}>\n              {technology.url ? (\n                <a href={technology.url}>{technology.name}</a>\n              ) : (\n                <span>{technology.name}</span>\n              )}\n              {technology.license && (\n                <>\n                  {' '}\n                  (\n                  {technology.licenseUrl ? (\n                    <a href={technology.licenseUrl}>{technology.license}</a>\n                  ) : (\n                    <span>{technology.license}</span>\n                  )}\n                  )\n                </>\n              )}\n            </li>\n          ))}\n      </ul>\n    )\n  }\n\n  function renderDateTime(datetime: string) {\n    const date = Date.parse(datetime)\n    return Intl.DateTimeFormat(userLocale, { dateStyle: 'medium', timeStyle: 'long' }).format(date)\n  }\n\n  // ------------------------------------------------------------------------\n\n  return (\n    <>\n      <Helmet>\n        <title>{appTitleHead} – About</title>\n      </Helmet>\n      <Container className=\"py-4\">\n        <h1 className=\"h1 mb-4\">{t('about.title')}</h1>\n\n        {/* TODO: short intro describing the FCS Aggregator */}\n\n        <div>\n          <h2 className=\"h2\">{t('about.people.title')}</h2>\n          <p>{t('about.people.developedBy')}</p>\n          <ul>\n            {people.map((person) => (\n              <li key={person}>{person}</li>\n            ))}\n          </ul>\n        </div>\n\n        <div>\n          <h2 className=\"h2\">{t('about.statistics.title')}</h2>\n          <p>\n            <Trans\n              i18nKey=\"about.statistics.text\"\n              components={[\n                <Link to={{ pathname: '/stats', search: linkSearch }}>endpoint statistics</Link>,\n              ]}\n            />\n          </p>\n        </div>\n\n        {(hasTerms || hasMatomo) && (\n          <div>\n            <h2 className=\"h2\">{t('about.privacyPolicy.title')}</h2>\n            {hasTerms && (\n              <p>\n                <Trans\n                  i18nKey=\"about.privacyPolicy.termsInfo\"\n                  components={[<a href={urlTerms}>clarin.eu</a>]}\n                />\n              </p>\n            )}\n            {hasMatomo && (\n              <>\n                <p>\n                  <Trans\n                    i18nKey=\"about.privacyPolicy.matomoInfo\"\n                    components={[<a href=\"https://matomo.org/\">Matomo</a>]}\n                  />\n                  {/* TODO: [text] You can explicitely opt-out by using the following form ... */}\n                </p>\n\n                {matomoOptOutScript && (\n                  <Card className=\"mb-3\" id=\"matomo-opt-out-container\">\n                    <Card.Body id=\"matomo-opt-out\" />\n                  </Card>\n                )}\n              </>\n            )}\n          </div>\n        )}\n\n        <div>\n          <h2 className=\"h2\">{t('about.sourceCode.title')}</h2>\n          <p>\n            <Trans\n              i18nKey=\"about.sourceCode.sourceInfo.text\"\n              components={[\n                <a href={t('about.sourceCode.sourceInfo.repoUrl')}>GitHub</a>,\n                <a href={t('about.sourceCode.sourceInfo.licenseUrl')}>GPL 3.0 license</a>,\n              ]}\n            />\n          </p>\n          <p>{t('about.sourceCode.licenseInfo')}</p>\n        </div>\n\n        <div>\n          <h2 className=\"h2\">{t('about.versions.title')}</h2>\n          <Row>\n            {showBackendInfos && hasApplicationVersionInfo && (\n              <Col md={12} lg={6}>\n                <p>{t('about.versions.backend.text')}</p>\n                <dl className=\"ms-4\">\n                  <dt>{t('about.versions.backend.lblVersion')}</dt>\n                  <dd>\n                    <code>{import.meta.env.APPLICATION_VERSION}</code>\n                  </dd>\n                  {import.meta.env.GIT_APP_INFO_SHA && (\n                    <>\n                      <dt>{t('about.versions.backend.lblSHA')}</dt>\n                      <dd>\n                        <code>{import.meta.env.GIT_APP_INFO_SHA}</code>\n                      </dd>\n                    </>\n                  )}\n                  {import.meta.env.VITE_GIT_APP_INFO_TAG && (\n                    <>\n                      <dt>{t('about.versions.backend.lblTag')}</dt>\n                      <dd>\n                        <code>{import.meta.env.VITE_GIT_APP_INFO_TAG}</code>\n                      </dd>\n                    </>\n                  )}\n                  {import.meta.env.VITE_GIT_APP_INFO_REF && (\n                    <>\n                      <dt>{t('about.versions.backend.lblRef')}</dt>\n                      <dd>\n                        <code>{import.meta.env.VITE_GIT_APP_INFO_REF}</code>\n                      </dd>\n                    </>\n                  )}\n                  {import.meta.env.GIT_APP_INFO_DATE && (\n                    <>\n                      <dt>{t('about.versions.backend.lblDate')}</dt>\n                      <dd>{renderDateTime(import.meta.env.GIT_APP_INFO_DATE)}</dd>\n                    </>\n                  )}\n                </dl>\n              </Col>\n            )}\n            <Col md={12} lg={showBackendInfos && hasApplicationVersionInfo ? 6 : 12}>\n              {showBackendInfos && hasApplicationVersionInfo && (\n                <p>{t('about.versions.frontend.text')}</p>\n              )}\n              <dl className={hasApplicationVersionInfo ? 'ms-4' : ''}>\n                <dt>{t('about.versions.frontend.lblVersion')}</dt>\n                <dd>\n                  <code>{import.meta.env.UI_VERSION}</code>\n                </dd>\n                <dt>{t('about.versions.frontend.lblSHA')}</dt>\n                <dd>\n                  <code>{import.meta.env.GIT_UI_INFO_SHA}</code>\n                </dd>\n                {import.meta.env.GIT_UI_INFO_REF &&\n                  import.meta.env.GIT_UI_INFO_REF !== import.meta.env.GIT_UI_INFO_SHA && (\n                    <>\n                      <dt>{t('about.versions.frontend.lblRef')}</dt>\n                      <dd>\n                        <code>{import.meta.env.GIT_UI_INFO_REF}</code>\n                      </dd>\n                    </>\n                  )}\n                <dt>{t('about.versions.frontend.lblDate')}</dt>\n                <dd>{renderDateTime(import.meta.env.GIT_UI_INFO_DATE)}</dd>\n              </dl>\n            </Col>\n          </Row>\n        </div>\n\n        <div>\n          <h2 className=\"h2\">{t('about.technology.title')}</h2>\n          <Row>\n            {showBackendInfos && (\n              <Col md={12} lg={6}>\n                <p>{t('about.technology.backendUses')}</p>\n                {renderTechnologiesList(technologiesBackend)}\n              </Col>\n            )}\n            <Col md={12} lg={showBackendInfos ? 6 : 12}>\n              <p>{t('about.technology.frontendUses')}</p>\n              {renderTechnologiesList(technologiesFrontEnd)}\n            </Col>\n          </Row>\n          {/* TODO: [text] fancy FCS logo by ... */}\n          <p>\n            <Trans\n              i18nKey=\"about.technology.iconLicenseInfo\"\n              components={[\n                <a href=\"http://www.freepik.com/\">Freepik</a>,\n                <a href=\"www.flaticon.com\">www.flaticon.com</a>,\n                <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC BY 3.0</a>,\n              ]}\n            />\n          </p>\n        </div>\n\n        {/* <div>\n          <h2 className=\"h2\">{t('about.funding.title')}</h2>\n        </div> */}\n      </Container>\n    </>\n  )\n}\n\nexport default About\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-eye-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0\\\"/>\\n  <path d=\\\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8m8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-magic\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M9.5 2.672a.5.5 0 1 0 1 0V.843a.5.5 0 0 0-1 0zm4.5.035A.5.5 0 0 0 13.293 2L12 3.293a.5.5 0 1 0 .707.707zM7.293 4A.5.5 0 1 0 8 3.293L6.707 2A.5.5 0 0 0 6 2.707zm-.621 2.5a.5.5 0 1 0 0-1H4.843a.5.5 0 1 0 0 1zm8.485 0a.5.5 0 1 0 0-1h-1.829a.5.5 0 0 0 0 1zM13.293 10A.5.5 0 1 0 14 9.293L12.707 8a.5.5 0 1 0-.707.707zM9.5 11.157a.5.5 0 0 0 1 0V9.328a.5.5 0 0 0-1 0zm1.854-5.097a.5.5 0 0 0 0-.706l-.708-.708a.5.5 0 0 0-.707 0L8.646 5.94a.5.5 0 0 0 0 .707l.708.708a.5.5 0 0 0 .707 0l1.293-1.293Zm-3 3a.5.5 0 0 0 0-.706l-.708-.708a.5.5 0 0 0-.707 0L.646 13.94a.5.5 0 0 0 0 .707l.708.708a.5.5 0 0 0 .707 0z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-clockwise\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path fill-rule=\\\"evenodd\\\" d=\\\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z\\\"/>\\n  <path d=\\\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-balloon\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path fill-rule=\\\"evenodd\\\" d=\\\"M8 9.984C10.403 9.506 12 7.48 12 5a4 4 0 0 0-8 0c0 2.48 1.597 4.506 4 4.984M13 5c0 2.837-1.789 5.227-4.52 5.901l.244.487a.25.25 0 1 1-.448.224l-.008-.017c.008.11.02.202.037.29.054.27.161.488.419 1.003.288.578.235 1.15.076 1.629-.157.469-.422.867-.588 1.115l-.004.007a.25.25 0 1 1-.416-.278c.168-.252.4-.6.533-1.003.133-.396.163-.824-.049-1.246l-.013-.028c-.24-.48-.38-.758-.448-1.102a3 3 0 0 1-.052-.45l-.04.08a.25.25 0 1 1-.447-.224l.244-.487C4.789 10.227 3 7.837 3 5a5 5 0 0 1 10 0m-6.938-.495a2 2 0 0 1 1.443-1.443C7.773 2.994 8 2.776 8 2.5s-.226-.504-.498-.459a3 3 0 0 0-2.46 2.461c-.046.272.182.498.458.498s.494-.227.562-.495\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-bank\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"m8 0 6.61 3h.89a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H15v7a.5.5 0 0 1 .485.38l.5 2a.498.498 0 0 1-.485.62H.5a.498.498 0 0 1-.485-.62l.5-2A.5.5 0 0 1 1 13V6H.5a.5.5 0 0 1-.5-.5v-2A.5.5 0 0 1 .5 3h.89zM3.777 3h8.447L8 1zM2 6v7h1V6zm2 0v7h2.5V6zm3.5 0v7h1V6zm2 0v7H12V6zM13 6v7h1V6zm2-1V4H1v1zm-.39 9H1.39l-.25 1h13.72z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-braces\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-download\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5\\\"/>\\n  <path d=\\\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-envelope-arrow-up\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4.5a.5.5 0 0 1-1 0V5.383l-7 4.2-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h5.5a.5.5 0 0 1 0 1H2a2 2 0 0 1-2-1.99zm1 7.105 4.708-2.897L1 5.383zM1 4v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1\\\"/>\\n  <path d=\\\"M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.354-5.354 1.25 1.25a.5.5 0 0 1-.708.708L13 12.207V14a.5.5 0 0 1-1 0v-1.717l-.28.305a.5.5 0 0 1-.737-.676l1.149-1.25a.5.5 0 0 1 .722-.016\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-exclamation-triangle\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z\\\"/>\\n  <path d=\\\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-eye\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13 13 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5s3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5s-3.879-1.168-5.168-2.457A13 13 0 0 1 1.172 8z\\\"/>\\n  <path d=\\\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-gear-fill\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-highlights\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0m-8 5v1H4.5a.5.5 0 0 0-.093.009A7 7 0 0 1 3.1 13zm0-1H2.255a7 7 0 0 1-.581-1H8zm-6.71-2a7 7 0 0 1-.22-1H8v1zM1 8q0-.51.07-1H8v1zm.29-2q.155-.519.384-1H8v1zm.965-2q.377-.54.846-1H8v1zm2.137-2A6.97 6.97 0 0 1 8 1v1z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-house-door\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293zM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-info-circle\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\\\"/>\\n  <path d=\\\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-link-45deg\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1 1 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4 4 0 0 1-.128-1.287z\\\"/>\\n  <path d=\\\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-plus-circle\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\\\"/>\\n  <path d=\\\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-repeat\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M11 5.466V4H5a4 4 0 0 0-3.584 5.777.5.5 0 1 1-.896.446A5 5 0 0 1 5 3h6V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192m3.81.086a.5.5 0 0 1 .67.225A5 5 0 0 1 11 13H5v1.466a.25.25 0 0 1-.41.192l-2.36-1.966a.25.25 0 0 1 0-.384l2.36-1.966a.25.25 0 0 1 .41.192V12h6a4 4 0 0 0 3.585-5.777.5.5 0 0 1 .225-.67Z\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-search\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-shield-check\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M5.338 1.59a61 61 0 0 0-2.837.856.48.48 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.7 10.7 0 0 0 2.287 2.233c.346.244.652.42.893.533q.18.085.293.118a1 1 0 0 0 .101.025 1 1 0 0 0 .1-.025q.114-.034.294-.118c.24-.113.547-.29.893-.533a10.7 10.7 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.8 11.8 0 0 1-2.517 2.453 7 7 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7 7 0 0 1-1.048-.625 11.8 11.8 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 63 63 0 0 1 5.072.56\\\"/>\\n  <path d=\\\"M10.854 5.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 7.793l2.646-2.647a.5.5 0 0 1 .708 0\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-shield-lock\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M5.338 1.59a61 61 0 0 0-2.837.856.48.48 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.7 10.7 0 0 0 2.287 2.233c.346.244.652.42.893.533q.18.085.293.118a1 1 0 0 0 .101.025 1 1 0 0 0 .1-.025q.114-.034.294-.118c.24-.113.547-.29.893-.533a10.7 10.7 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.8 11.8 0 0 1-2.517 2.453 7 7 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7 7 0 0 1-1.048-.625 11.8 11.8 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 63 63 0 0 1 5.072.56\\\"/>\\n  <path d=\\\"M9.5 6.5a1.5 1.5 0 0 1-1 1.415l.385 1.99a.5.5 0 0 1-.491.595h-.788a.5.5 0 0 1-.49-.595l.384-1.99a1.5 1.5 0 1 1 2-1.415\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-three-dots\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3\\\"/>\\n</svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\" fill=\\\"currentColor\\\" class=\\\"bi bi-x-circle\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path d=\\\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16\\\"/>\\n  <path d=\\\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\\\"/>\\n</svg>\"","import Badge from 'react-bootstrap/Badge'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport { Helmet } from 'react-helmet-async'\nimport { Trans, useTranslation } from 'react-i18next'\n\nimport AppStore from '@/stores/app'\n\nimport eyeFillIcon from 'bootstrap-icons/icons/eye-fill.svg?raw'\nimport magicIcon from 'bootstrap-icons/icons/magic.svg?raw'\n\nimport arrowClockwiseIcon from 'bootstrap-icons/icons/arrow-clockwise.svg?raw'\nimport balloonIcon from 'bootstrap-icons/icons/balloon.svg?raw'\nimport bankIcon from 'bootstrap-icons/icons/bank.svg?raw'\nimport bracesIcon from 'bootstrap-icons/icons/braces.svg?raw'\nimport downloadIcon from 'bootstrap-icons/icons/download.svg?raw'\nimport envelopeArrowUpIcon from 'bootstrap-icons/icons/envelope-arrow-up.svg?raw'\nimport exclamationTriangleIcon from 'bootstrap-icons/icons/exclamation-triangle.svg?raw'\nimport eyeIcon from 'bootstrap-icons/icons/eye.svg?raw'\nimport gearIcon from 'bootstrap-icons/icons/gear-fill.svg?raw'\nimport highlightsIcon from 'bootstrap-icons/icons/highlights.svg?raw'\nimport houseDoorIcon from 'bootstrap-icons/icons/house-door.svg?raw'\nimport infoCircleIcon from 'bootstrap-icons/icons/info-circle.svg?raw'\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\nimport personIcon from 'bootstrap-icons/icons/person.svg?raw'\nimport plusCircleIcon from 'bootstrap-icons/icons/plus-circle.svg?raw'\nimport repeatIcon from 'bootstrap-icons/icons/repeat.svg?raw'\nimport searchIcon from 'bootstrap-icons/icons/search.svg?raw'\nimport shieldCheckIcon from 'bootstrap-icons/icons/shield-check.svg?raw'\nimport shieldLockIcon from 'bootstrap-icons/icons/shield-lock.svg?raw'\nimport threeDotsIcon from 'bootstrap-icons/icons/three-dots.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\nimport xCircleIcon from 'bootstrap-icons/icons/x-circle.svg?raw'\n\n// a mapping of all icons used\nconst iconMap: { [iconKey: string]: string } = {\n  'arrow-clockwise': arrowClockwiseIcon,\n  'envelope-arrow-up': envelopeArrowUpIcon,\n  'exclamation-triangle': exclamationTriangleIcon,\n  'eye-fill': eyeFillIcon,\n  'gear-fill': gearIcon,\n  'house-door': houseDoorIcon,\n  'info-circle': infoCircleIcon,\n  'link-45deg': link45degIcon,\n  'three-dots': threeDotsIcon,\n  balloon: balloonIcon,\n  bank: bankIcon,\n  download: downloadIcon,\n  eye: eyeIcon,\n  highlights: highlightsIcon,\n  // TODO: adjust help texts to support no-querybuilder distributions\n  magic: magicIcon,\n  search: searchIcon,\n  translate: translateIcon,\n}\n// optional icons based on build\nif (import.meta.env.FEATURE_QUERY_BUILDER) {\n  Object.assign(iconMap, {\n    'plus-circle': plusCircleIcon,\n    'x-circle': xCircleIcon,\n    braces: bracesIcon,\n    magic: magicIcon,\n    repeat: repeatIcon,\n  } as { [iconKey: string]: string })\n}\nif (import.meta.env.FEATURE_AUTHENTICATION) {\n  Object.assign(iconMap, {\n    'shield-check': shieldCheckIcon,\n    'shield-lock': shieldLockIcon,\n    person: personIcon,\n  } as { [iconKey: string]: string })\n}\n\ninterface I18NIconsLegendInfo {\n  label: string\n  description: string\n  context?: string[]\n}\ninterface I18NIconsLegendInfoList {\n  [key: string]: I18NIconsLegendInfo\n}\n\nfunction Help() {\n  const { t } = useTranslation()\n  const appTitleHead = AppStore.getState().appTitleHead\n\n  function renderIconsLegend() {\n    const icons = t('icons', { ns: 'common', returnObjects: true }) as I18NIconsLegendInfoList\n    const iconKeys = Object.getOwnPropertyNames(icons)\n      .filter((iconKey) => Object.getOwnPropertyNames(iconMap).includes(iconKey))\n      .toSorted((a, b) => {\n        const idA = icons[a]\n        const idB = icons[b]\n        // no context at front\n        if (!idA.context || idA.context.length === 0) return -1\n        if (!idB.context || idB.context.length === 0) return +1\n        // statistics at end\n        if (idA.context.includes('statistics')) return +1\n        if (idB.context.includes('statistics')) return -1\n        // querybuilder before\n        if (idA.context.includes('querybuilder')) return +1\n        if (idB.context.includes('querybuilder')) return -1\n        // otherwise alphabetical\n        return idA.context[0].localeCompare(idB.context[0])\n      })\n\n    return (\n      // <Container fluid>\n      <Row xs={1} md={2} xl={3}>\n        {iconKeys.map((iconKey) => {\n          const context = t(`icons.${iconKey}.context`, {\n            ns: 'common',\n            returnObjects: true,\n            defaultValue: [],\n          }) as string[] | string\n          return (\n            <Col key={iconKey}>\n              <Card className=\"border-0\">\n                <Card.Body>\n                  <Card.Title>\n                    <i\n                      dangerouslySetInnerHTML={{ __html: iconMap[iconKey] }}\n                      aria-hidden=\"true\"\n                      className=\"rounded border px-2 pb-1\"\n                    />{' '}\n                    {t(`icons.${iconKey}.label`, { ns: 'common' })}\n                  </Card.Title>\n                  <Card.Text className=\"mb-0\">\n                    {t(`icons.${iconKey}.description`, { ns: 'common' })}\n                  </Card.Text>\n                  {context.length > 0 && (\n                    <Card.Text className=\"mt-1\">\n                      {(context as string[]).map((c) => (\n                        <Badge key={c}>{c}</Badge>\n                      ))}\n                    </Card.Text>\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          )\n        })}\n      </Row>\n      // </Container>\n    )\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{appTitleHead} – Help</title>\n      </Helmet>\n      <Container className=\"my-4\">\n        <h1 className=\"h1\">{t('help.title')}</h1>\n        <h2 className=\"h2\" id=\"performing-a-fcs-search-in-resources\">\n          {t('help.performSearch.title')}\n        </h2>\n        <p>\n          <Trans i18nKey=\"help.performSearch.textBasicSearch\" />\n        </p>\n        <p>\n          <Trans\n            i18nKey=\"help.performSearch.textAdvancedSearch\"\n            components={{\n              iconMagicWand: (\n                <i dangerouslySetInnerHTML={{ __html: magicIcon }} aria-hidden=\"true\" />\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <Trans\n            i18nKey=\"help.performSearch.textLexicalSearch\"\n            components={{\n              iconMagicWand: (\n                <i dangerouslySetInnerHTML={{ __html: magicIcon }} aria-hidden=\"true\" />\n              ),\n            }}\n          />\n        </p>\n        <p>\n          <Trans i18nKey=\"help.performSearch.textSearchProgress\" />\n        </p>\n        <p>\n          <Trans\n            i18nKey=\"help.performSearch.textViewResource\"\n            components={{\n              iconEye: <i dangerouslySetInnerHTML={{ __html: eyeFillIcon }} aria-hidden=\"true\" />,\n            }}\n          />\n        </p>\n        <h2 className=\"h2\" id=\"adjusting-search-criteria\">\n          {t('help.adjustSearchCriteria.title')}\n        </h2>\n        <p>\n          <Trans i18nKey=\"help.adjustSearchCriteria.text\" />\n        </p>\n        <p>\n          <Trans i18nKey=\"help.adjustSearchCriteria.textOtherSearchTypes\" />\n        </p>\n        <h2 className=\"h2\" id=\"more-help\">\n          {t('help.moreHelp.title')}\n        </h2>\n        <p>\n          <Trans\n            i18nKey=\"help.moreHelp.text\"\n            components={[\n              <a href=\"https://www.clarin.eu/content/content-search-tutorial\">\n                Content Search: Tutorial at CLARIN.eu\n              </a>,\n              <a title={t('help.contactTitle')} href={t('urls.contact', { ns: 'common' })}>\n                CLARIN FCS Helpdesk\n              </a>,\n            ]}\n          />\n        </p>\n        <h2 className=\"h2\" id=\"more-help\">\n          {t('help.icons.title')}\n        </h2>\n        {renderIconsLegend()}\n      </Container>\n    </>\n  )\n}\n\nexport default Help\n","import { createContext, type ReactNode, useContext } from 'react'\n\nimport { type Resource } from '@/utils/api'\nimport { type LanguageCode2NameMap } from '@/utils/search'\n\n// --------------------------------------------------------------------------\n\ninterface AggregatorData {\n  resources: Resource[]\n  languages: LanguageCode2NameMap\n  weblichtLanguages: string[]\n}\n\ntype AggregatorDataProviderProps = AggregatorData & {\n  children: ReactNode\n}\n\n// --------------------------------------------------------------------------\n\nconst AggregatorDataContext = createContext<AggregatorData>({\n  resources: [],\n  languages: {},\n  weblichtLanguages: [],\n})\nAggregatorDataContext.displayName = 'AggregatorDataContext'\n\n// --------------------------------------------------------------------------\n\nfunction AggregatorDataProvider({\n  resources,\n  languages,\n  weblichtLanguages,\n  children,\n}: AggregatorDataProviderProps) {\n  const data = { resources, languages, weblichtLanguages }\n  return <AggregatorDataContext.Provider value={data}>{children}</AggregatorDataContext.Provider>\n}\n\n// --------------------------------------------------------------------------\n\nfunction useAggregatorData() {\n  return useContext(AggregatorDataContext)\n}\n\n// --------------------------------------------------------------------------\n\n// eslint-disable-next-line react-refresh/only-export-components\nexport { AggregatorDataContext, AggregatorDataProvider, useAggregatorData }\n","import { type AxiosInstance } from 'axios'\nimport { createContext, type ReactNode, useContext } from 'react'\n\n// --------------------------------------------------------------------------\n\nconst AxiosContext = createContext<AxiosInstance | undefined>(undefined)\nAxiosContext.displayName = 'AxiosContext'\n\n// --------------------------------------------------------------------------\n\nfunction useAxios() {\n  const axios = useContext(AxiosContext)\n\n  if (!axios) throw new Error('No \"axios\" instance set, use AxiosProvider to set one')\n\n  return axios\n}\n\n// --------------------------------------------------------------------------\n\ninterface AxiosProviderProps {\n  axios: AxiosInstance\n  children?: ReactNode\n}\n\nfunction AxiosProvider({ axios, children }: AxiosProviderProps) {\n  return <AxiosContext.Provider value={axios}>{children}</AxiosContext.Provider>\n}\n\n// --------------------------------------------------------------------------\n\n// eslint-disable-next-line react-refresh/only-export-components\nexport { AxiosContext, AxiosProvider, useAxios }\n","import { createContext, type ReactNode, useContext } from 'react'\n\nimport { type NumberOfResults, type QueryTypeID } from '@/utils/constants'\nimport { type LanguageFilterOptions } from '@/utils/search'\n\n// --------------------------------------------------------------------------\n\ninterface SearchParams {\n  language: string\n  languageFilter: LanguageFilterOptions\n  queryType: QueryTypeID\n  query: string\n  resourceIDs: string[]\n  numberOfResults: NumberOfResults\n}\n\n// --------------------------------------------------------------------------\n\nconst SearchParamsContext = createContext<SearchParams | undefined>(undefined)\nSearchParamsContext.displayName = 'SearchParamsContext'\n\n// --------------------------------------------------------------------------\n\nfunction useSearchParams() {\n  const params = useContext(SearchParamsContext)\n\n  if (!params) throw new Error('No \"params\" data set, use SearchParamsProvider to set one')\n\n  return params\n}\n\n// --------------------------------------------------------------------------\n\ntype SearchParamsProviderProps = SearchParams & {\n  children?: ReactNode\n}\n\nfunction SearchParamsProvider({\n  language,\n  languageFilter,\n  queryType,\n  query,\n  resourceIDs,\n  numberOfResults,\n  children,\n}: SearchParamsProviderProps) {\n  const params = { language, languageFilter, queryType, query, resourceIDs, numberOfResults }\n\n  return <SearchParamsContext.Provider value={params}>{children}</SearchParamsContext.Provider>\n}\n\n// --------------------------------------------------------------------------\n\n// eslint-disable-next-line react-refresh/only-export-components\nexport { SearchParamsContext, SearchParamsProvider, useSearchParams }\n","export interface LanguageCode2NameMap {\n  [code: string]: string\n}\n\nexport type LanguageFilterOptions = 'byMeta' | 'byGuess' | 'byMetaAndGuess'\nexport type ResourceSelectionModalViewOptionVisibility = 'all' | 'selected'\nexport type ResourceSelectionModalViewOptionGrouping = 'resource' | 'institution' | 'language'\nexport type ResourceSelectionModalViewOptionSorting =\n  | 'title-up'\n  | 'title-down'\n  | 'institution-up'\n  | 'institution-down'\n\n// --------------------------------------------------------------------------\n\nexport const DEFAULT_SEARCH_LANGUAGE_FILTER: LanguageFilterOptions = 'byMeta'\nexport const DEFAULT_RESOURCE_VIEW_VISIBILITY: ResourceSelectionModalViewOptionVisibility = 'all'\nexport const DEFAULT_RESOURCE_VIEW_GROUPING: ResourceSelectionModalViewOptionGrouping = 'resource'\nexport const DEFAULT_RESOURCE_VIEW_SORTING: ResourceSelectionModalViewOptionSorting = 'title-up'\n\nexport const MULTIPLE_LANGUAGE_CODE = 'mul' // see ISO-693-3\n\n// --------------------------------------------------------------------------\n\nexport function languageCodeToName(\n  code: string,\n  codeToLanguageMapping: LanguageCode2NameMap = undefined as unknown as LanguageCode2NameMap,\n  options: { defaultAnyLanguage?: string; defaultUnknownLanguage?: string } = {}\n) {\n  if (code === MULTIPLE_LANGUAGE_CODE) return options?.defaultAnyLanguage ?? 'Any Language'\n  return codeToLanguageMapping?.[code] || (options?.defaultUnknownLanguage ?? 'Unknown Language')\n}\n","import LocaleStore from '@/stores/locale'\nimport { type Resource } from '@/utils/api'\nimport { QueryTypeID } from '@/utils/constants'\nimport {\n  MULTIPLE_LANGUAGE_CODE,\n  type ResourceSelectionModalViewOptionSorting,\n} from '@/utils/search'\n\n// --------------------------------------------------------------------------\n\nexport function fromApi(resources: Resource[]) {\n  const locale = LocaleStore.getState().locale\n\n  const prepareFn = (resource: Resource, rootResource: Resource | null = null): Resource => {\n    return {\n      // copy original\n      ...resource,\n      // override and apply to sub-resources\n      subResources: resource.subResources.map((subResource) =>\n        prepareFn(subResource, rootResource ?? resource)\n      ),\n      // apply a rootResourceId (pointing to the root element of any nested child)\n      rootResourceId: rootResource?.id ?? null,\n    }\n  }\n  const convertedResources = resources.map((resource) => prepareFn(resource, null))\n\n  const sortFn = function (x: Resource, y: Resource) {\n    const xInstitution = getBestFromMultilingualValuesTryByLanguage(x.institution, locale) ?? ''\n    const yInstitution = getBestFromMultilingualValuesTryByLanguage(y.institution, locale) ?? ''\n    const r = xInstitution.localeCompare(yInstitution)\n    if (r !== 0) {\n      return r\n    }\n\n    const xTitle = getBestFromMultilingualValuesTryByLanguage(x.title, locale) ?? ''\n    const yTitle = getBestFromMultilingualValuesTryByLanguage(y.title, locale) ?? ''\n    return xTitle.toLowerCase().localeCompare(yTitle.toLowerCase())\n  }\n  recurseResources(convertedResources, (resource: Resource) => {\n    resource.subResources.sort(sortFn)\n  })\n  convertedResources.sort(sortFn)\n\n  return convertedResources\n}\n\nexport function evaluateAggregationContext(\n  resources: Resource[],\n  endpoints2handles: { [key: string]: string[] }\n) {\n  const selectedResourceIDs: string[] = []\n  const handlesNotFound: string[] = []\n  const resourcesToSelect: Resource[] = []\n\n  Object.entries(endpoints2handles).forEach(([endpoint, handles]) => {\n    console.debug('evaluateAggregationContext:', { endpoint, handles })\n    handles.forEach((handle: string) => {\n      let found = false\n      recurseResources(resources, (resource: Resource) => {\n        if (resource.handle === handle) {\n          found = true\n          resourcesToSelect.push(resource)\n        }\n      })\n      if (!found) {\n        console.warn('Handle not found in resources', handle)\n        handlesNotFound.push(handle)\n      }\n    })\n  })\n\n  recurseResources(resourcesToSelect, (resource: Resource) => {\n    selectedResourceIDs.push(resource.id)\n  })\n\n  return { selected: selectedResourceIDs, unavailable: handlesNotFound }\n}\n\n// --------------------------------------------------------------------------\n\nexport function recurseResources(\n  resources: Resource[],\n  fn:\n    | ((resource: Resource, index: number) => boolean | void)\n    | ((resource: Resource) => boolean | void)\n) {\n  const recfn = (resource: Resource, index: number) => {\n    if (false === fn(resource, index)) {\n      // no recursion\n    } else {\n      resource.subResources.forEach(recfn)\n    }\n  }\n  resources.forEach(recfn)\n}\n\nexport function recurseResource(resource: Resource, fn: (resource: Resource) => boolean | void) {\n  if (false === fn(resource)) {\n    // no recursion\n  } else {\n    recurseResources(resource.subResources, fn)\n  }\n}\n\nexport function findResourceByFilter(\n  resources: Resource[],\n  filter: (resource: Resource) => boolean\n): Resource | undefined {\n  let found: Resource | undefined = undefined\n\n  // NOTE: we use find to abort search if we have found anything\n  const findRecFn = (resource: Resource) => {\n    if (found !== undefined) return true\n\n    if (filter(resource)) {\n      found = resource\n      return true\n    }\n\n    return resource.subResources.find(findRecFn) !== undefined\n  }\n  resources.find(findRecFn)\n\n  return found\n}\n\nexport function getResourceIDs(resources: Resource[]) {\n  const resourceIDs: string[] = []\n  recurseResources(resources, (resource: Resource) => {\n    resourceIDs.push(resource.id)\n  })\n  return resourceIDs\n}\n\nexport function getResourceIDsBySplit<T extends string | number | symbol | boolean>(\n  resources: Resource[],\n  filter: (resource: Resource) => T\n): Map<T, string[]> {\n  const resourceIDsMap: Map<T, string[]> = new Map()\n  recurseResources(resources, (resource: Resource) => {\n    const category: T = filter(resource)\n    if (!resourceIDsMap.has(category)) resourceIDsMap.set(category, [])\n    resourceIDsMap.get(category)!.push(resource.id)\n  })\n  return resourceIDsMap\n}\n\nexport function getAvailableResourceIDs(\n  resources: Resource[],\n  queryTypeId: QueryTypeID,\n  languageCode: string\n) {\n  const resourceIDs: string[] = []\n  const checkFn = (resource: Resource) =>\n    isResourceAvailableDueToSubResource(resource, checkFn) ||\n    isResourceAvailable(resource, queryTypeId, languageCode)\n\n  recurseResources(resources, (resource: Resource) => {\n    if (checkFn(resource)) {\n      resourceIDs.push(resource.id)\n    }\n  })\n  return resourceIDs\n}\n\nexport function getInstitutions(resources: Resource[], resourceIDs: string[]) {\n  const locale = LocaleStore.getState().locale\n  const institutions = new Set<string>()\n\n  recurseResources(resources, (resource: Resource) => {\n    if (resourceIDs.includes(resource.id)) {\n      const institution =\n        getBestFromMultilingualValuesTryByLanguage(resource.institution, locale) ?? ''\n      institutions.add(institution)\n      // return false // top-most resource in tree, don't delve deeper\n    }\n    return true\n  })\n\n  // console.debug('institutions: ', institutions.size, { institutions: institutions })\n  return Array.from(institutions)\n}\n\nexport function getResourceParentIDs(\n  resources: Resource[],\n  filter: (resource: Resource) => boolean\n) {\n  const parentIDs: string[] = []\n\n  const recursivelyFind = (resource: Resource): boolean => {\n    // check recursively for all children\n    const anyChild = resource.subResources.map(recursivelyFind)\n    // if for any it is true\n    if (anyChild.some(Boolean)) {\n      // then add current resource ID as parent for some nested children\n      parentIDs.push(resource.id)\n      // and return true to get parents of current resource, too\n      return true\n    }\n    // if self is true, then parent should add its ID\n    return filter(resource) === true\n  }\n  resources.forEach(recursivelyFind)\n\n  return parentIDs\n}\n\nexport function flattenResources(resources: Resource[]) {\n  const flattenFn = (resource: Resource): Resource[] => [\n    resource,\n    ...resource.subResources.map(flattenFn).flat(),\n  ]\n  return resources.map(flattenFn).flat()\n}\n\n// --------------------------------------------------------------------------\n\nexport const MULTILINGUAL_VALUE_CHECK_LANGUAGES = ['en', 'eng', 'de', 'deu'] as const\n\nexport function getBestFromMultilingualValues(\n  values: null | string | { [language: string]: string }\n) {\n  // checks: if null, return\n  if (values === null) {\n    return null\n  }\n  // if not a mapping, then we only have one choice\n  if (typeof values === 'string') {\n    return values\n  }\n\n  // check from list of languages\n  for (const language of MULTILINGUAL_VALUE_CHECK_LANGUAGES) {\n    if (Object.hasOwn(values, language)) {\n      return values[language]\n    }\n  }\n\n  // otherwise try to use first\n  const ownLanguages = Object.getOwnPropertyNames(values)\n  if (ownLanguages.length > 0) {\n    return values[ownLanguages[0]]\n  }\n\n  // if not, it is empty? then null\n  return null\n}\n\nexport function getFromMultilingualValuesByLanguage(\n  values: null | string | { [language: string]: string },\n  language?: string\n) {\n  // checks: if null, return\n  if (values === null) {\n    return null\n  }\n  // if not a mapping, then we only have one choice\n  if (typeof values === 'string') {\n    return values\n  }\n\n  // otherwise, try to find value for language\n  if (language && Object.hasOwn(values, language)) {\n    return values[language]\n  }\n\n  // if not, return null\n  return null\n}\n\nexport function getBestFromMultilingualValuesTryByLanguage(\n  values: null | string | { [language: string]: string },\n  language?: string\n) {\n  // try to guess browser/user language (if not provided)\n  if (language === undefined) {\n    language = LocaleStore.getState().locale\n  }\n\n  const valueByLanguage = getFromMultilingualValuesByLanguage(values, language)\n  if (valueByLanguage !== null) return valueByLanguage\n\n  // if not found by language, then try to guess something\n  return getBestFromMultilingualValues(values)\n}\n\n/** Compute the language that would be used to retrieve a multi-lingual resource information value. */\nexport function getBestLanguageFromMultilingualValuesTryByLanguage(\n  values: null | string | { [language: string]: string },\n  language?: string\n) {\n  // if null, then we have nothing\n  if (values === null) return undefined\n  // if not a mapping, then we only have one choice\n  if (typeof values === 'string') return undefined\n\n  // try to guess browser/user language (if not provided)\n  if (language === undefined) {\n    language = LocaleStore.getState().locale\n  }\n\n  // getFromMultilingualValuesByLanguage(values, language)\n  // try to find value for language\n  if (language && Object.hasOwn(values, language)) return language\n\n  // getBestFromMultilingualValues(values)\n  // check from list of languages\n  for (const language of MULTILINGUAL_VALUE_CHECK_LANGUAGES) {\n    if (Object.hasOwn(values, language)) return language\n  }\n  // otherwise try to use first\n  const ownLanguages = Object.getOwnPropertyNames(values)\n  if (ownLanguages.length > 0) return ownLanguages[0]\n  // if not, it is empty? then null (this should not be possible)\n  return undefined\n}\n\n/**\n * Get languages/locales used in resource meta information.\n * @param resource Resource with meta information (title, description, institution, ...)\n * @param defaultLanguage fallback language if not multilingual information set\n * @returns unique list of languages found for title/description/institution or fallback if no multilingual options\n */\nexport function getLanguagesFromResourceInfo(resource: Resource, defaultLanguage = 'en') {\n  const languagesForTitle =\n    typeof resource.title === 'string' || resource.title === null\n      ? [defaultLanguage]\n      : Object.getOwnPropertyNames(resource.title)\n  const languagesForDescription =\n    typeof resource.description === 'string' || resource.description === null\n      ? [defaultLanguage]\n      : Object.getOwnPropertyNames(resource.description)\n  const languagesForInstitution =\n    typeof resource.institution === 'string' || resource.institution === null\n      ? [defaultLanguage]\n      : Object.getOwnPropertyNames(resource.institution)\n\n  // TODO: only collect languages if values differ, else fallback to default?\n\n  const languageForResource = [\n    ...languagesForTitle,\n    ...languagesForDescription,\n    ...languagesForInstitution,\n  ]\n\n  // TODO: order by count?\n  const languageForResourceUniq = Array.from(new Set(languageForResource))\n\n  return languageForResourceUniq\n}\n\n// --------------------------------------------------------------------------\n\nexport function isResourceAvailableForQueryType(resource: Resource, queryTypeId: QueryTypeID) {\n  // check search capabilities (ignore version, just check caps)\n  if (queryTypeId === 'fcs' && !resource.endpoint.searchCapabilities.includes('ADVANCED_SEARCH')) {\n    // want 'fcs' but does not have 'ADVANCED_SEARCH' capability\n    return false\n  }\n  if (queryTypeId === 'lex' && !resource.endpoint.searchCapabilities.includes('LEX_SEARCH')) {\n    // want 'lex' but does not have 'LEX_SEARCH' capability\n    return false\n  }\n  // 'cql' is required default, so no check\n  return true\n}\n\nexport function isResourceAvailableForLanguage(resource: Resource, languageCode: string) {\n  // yes for any language\n  if (languageCode === MULTIPLE_LANGUAGE_CODE) {\n    return true\n  }\n\n  // yes if the resource is in only that language\n  if (\n    resource.languages &&\n    resource.languages.length === 1 &&\n    resource.languages[0] === languageCode\n  ) {\n    return true\n  }\n\n  // ? yes if the resource also contains that language\n  if (resource.languages && resource.languages.indexOf(languageCode) >= 0) {\n    return true\n  }\n\n  // ? yes if the resource has no language\n  // if (!resource.languages || resource.languages.length === 0) {\n  // \t return true\n  // }\n\n  return false\n}\n\nexport function isResourceAvailableDueToSubResource(\n  resource: Resource,\n  checkFn: (resource: Resource) => boolean\n) {\n  // if no subresources, then it's not a requirement\n  if (!resource.subResources || resource.subResources.length === 0) {\n    return false\n  }\n\n  // recursively check\n  let shouldBeAvailable = false // default false if no descendant says yes\n  const recursivelyCheck = (resource: Resource) => {\n    if (checkFn?.(resource) === true) {\n      shouldBeAvailable = true\n      return\n    }\n    resource.subResources.forEach(recursivelyCheck)\n  }\n  resource.subResources.forEach(recursivelyCheck)\n\n  return shouldBeAvailable\n}\n\nexport function isResourceAvailable(\n  resource: Resource,\n  queryTypeId: QueryTypeID,\n  languageCode: string\n): boolean {\n  if (!isResourceAvailableForQueryType(resource, queryTypeId)) return false\n  if (!isResourceAvailableForLanguage(resource, languageCode)) return false\n  return true\n}\n\n// --------------------------------------------------------------------------\n\nexport const SORT_FNS: {\n  [key in ResourceSelectionModalViewOptionSorting]: (a: Resource, b: Resource) => number\n} = {\n  'title-up': (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const aTitle = getBestFromMultilingualValuesTryByLanguage(a.title, locale) ?? ''\n    const bTitle = getBestFromMultilingualValuesTryByLanguage(b.title, locale) ?? ''\n\n    return aTitle.localeCompare(bTitle)\n  },\n  'title-down': (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const aTitle = getBestFromMultilingualValuesTryByLanguage(a.title, locale) ?? ''\n    const bTitle = getBestFromMultilingualValuesTryByLanguage(b.title, locale) ?? ''\n\n    return -aTitle.localeCompare(bTitle)\n  },\n  'institution-up': (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const aInstitution = getBestFromMultilingualValuesTryByLanguage(a.institution, locale) ?? ''\n    const bInstitution = getBestFromMultilingualValuesTryByLanguage(b.institution, locale) ?? ''\n    const aTitle = getBestFromMultilingualValuesTryByLanguage(a.title, locale) ?? ''\n    const bTitle = getBestFromMultilingualValuesTryByLanguage(b.title, locale) ?? ''\n\n    const ret = aInstitution.localeCompare(bInstitution)\n    return ret !== 0 ? ret : aTitle.localeCompare(bTitle)\n  },\n  'institution-down': (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const aInstitution = getBestFromMultilingualValuesTryByLanguage(a.institution, locale) ?? ''\n    const bInstitution = getBestFromMultilingualValuesTryByLanguage(b.institution, locale) ?? ''\n    const aTitle = getBestFromMultilingualValuesTryByLanguage(a.title, locale) ?? ''\n    const bTitle = getBestFromMultilingualValuesTryByLanguage(b.title, locale) ?? ''\n\n    const ret = -aInstitution.localeCompare(bInstitution)\n    return ret !== 0 ? ret : aTitle.localeCompare(bTitle)\n  },\n}\n\n// export function isResourceSelectable(resource: Resource) { return true }\n// export function isResourceAvailable(resource: Resource) { return true }\n// export function isResourceVisible(resource: Resource) { return true }\n// export function selectResource(resource: Resource, selected: boolean, propagate: boolean = true) {}\n// export function sortResources(resources: Resource[], criteria: string)\n","import { useEffect, useState } from 'react'\n\n// from: https://stackoverflow.com/a/77124113/9360161\n// also: https://www.dhiwise.com/post/ultimate-guide-to-implementing-react-debounce-effectively\n\n// value should be a state\nexport default function useDebounce<T>(value: T, delay?: number): T {\n  const [debounceValue, setDebounceValue] = useState(value)\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebounceValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n  return debounceValue\n}\n","function getTextCursorOffset(\n  container: Node,\n  node: Node,\n  offset: number = 0,\n  selectionNode: Node = node\n) {\n  // TODO: or is this only for the container element?\n  if (\n    node === container &&\n    node === selectionNode &&\n    node.nodeType === Node.ELEMENT_NODE &&\n    offset === 1\n  ) {\n    console.debug('offset=1 on node', {\n      container,\n      node,\n      nodeType: node.nodeType,\n      offset,\n      length: node.textContent?.length,\n    })\n    return node.textContent?.length || 0\n  }\n\n  // no nested children\n  if (node === container || container === null) return offset\n\n  // go through parent and children until have our offset in the container\n  const parent = node.parentNode\n  // if parent is null then we can't do anything, offset should be correct?\n  if (parent === null) return offset\n  // otherwise find previous children\n  let lengthBefore = 0\n  const children = parent.childNodes\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n    if (child === node) break\n\n    // store text length before\n    if (child.nodeType === Node.TEXT_NODE) {\n      lengthBefore += child.textContent?.length || 0\n    } else if (child.nodeType === Node.ELEMENT_NODE) {\n      // NOTE: innerText for visible text required?\n      // see: https://stackoverflow.com/a/35213639/9360161\n      lengthBefore += child.textContent?.length || 0\n    } else {\n      console.warn('unknown node type', { container, node, offset, parent, i, child })\n    }\n  }\n\n  // recurse up, until we have found our container\n  // console.debug('[getTextCursorOffset]#recurse', { container, selectionNode, node, parent, lengthBefore, offset })\n  return getTextCursorOffset(container, parent, lengthBefore + offset, selectionNode)\n}\n\nfunction getRangeContainerWithOffsetFromTextOffset(container: Node, offset: number) {\n  // TODO: may be enough if at start ...?\n  // if (offset === 0) {\n  //   return { node: container, offset: offset }\n  // }\n\n  // check if possible (e.g., container has enough text to contain the offset)\n  const containerLength = container.textContent?.length || 0\n  if (containerLength < offset) return null\n\n  // go through children and find where offset could be\n  let lengthBefore = 0\n  const children = container.childNodes\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]\n\n    let childLength = 0\n    if (child.nodeType === Node.TEXT_NODE) {\n      childLength = child.textContent?.length || 0\n    } else if (child.nodeType === Node.ELEMENT_NODE) {\n      // NOTE: innerText for visible text required?\n      // see: https://stackoverflow.com/a/35213639/9360161\n      childLength = child.textContent?.length || 0\n    } else {\n      console.warn('unknown node type, skip', { container, offset, child })\n    }\n    // skip if empty child, but do not skip if only child\n    if (childLength === 0 && children.length !== 1) continue\n\n    // check if with this child content, the offset is included\n    lengthBefore += childLength\n    if (lengthBefore >= offset) {\n      // found, now only need to check if we need to go deeper\n      const newOffset = offset - (lengthBefore - childLength)\n      if (child.nodeType === Node.ELEMENT_NODE) {\n        // we need to check deeper\n        return getRangeContainerWithOffsetFromTextOffset(child, newOffset)\n      } else {\n        // otherwise this is it\n        return { node: child, offset: newOffset }\n      }\n    }\n  }\n  console.debug('we should have found the offset ...', {\n    container,\n    containerLength,\n    children,\n    childrenCount: children.length,\n    offset,\n  })\n  return null\n}\n\n// --------------------------------------------------------------------------\n\nexport function getAbsoluteTextCursorOffsets(container: Node, range: Range) {\n  if (!range) return null\n\n  const start = getTextCursorOffset(container, range.startContainer, range.startOffset)\n\n  // optimization if same node\n  if (\n    range.startContainer.nodeType === Node.TEXT_NODE &&\n    range.endContainer === range.startContainer\n  ) {\n    return [start, start + (range.endOffset - range.startOffset)] as const\n  }\n\n  const end = getTextCursorOffset(container, range.endContainer, range.endOffset)\n\n  // console.debug('[getAbsoluteTextCursorOffsets]', {\n  //   container,\n  //   range,\n  //   startContainer: range.startContainer,\n  //   startOffset: range.startOffset,\n  //   endContainer: range.endContainer,\n  //   endOffset: range.endOffset,\n  //   start,\n  //   end,\n  // })\n\n  return [start, end] as const\n}\n\nexport function setCursorPosition(container: Node, offset: number) {\n  // console.debug('[setCursorPosition]', offset)\n  const isTargetFocused = document.activeElement === container\n  if (!isTargetFocused) return null\n\n  const selection = window.getSelection()\n  if (!selection) return null\n\n  const range = document.createRange()\n  const startRange = getRangeContainerWithOffsetFromTextOffset(container, offset)\n  if (startRange) {\n    try {\n      range.setStart(startRange.node, startRange.offset)\n      range.collapse(true)\n      selection.removeAllRanges()\n      selection.addRange(range)\n    } catch (error) {\n      console.error('Error trying to set cursor!', error, { container, offset, startRange })\n    }\n  }\n}\n\nexport function getCursorPosition(container: Node) {\n  const isTargetFocused = document.activeElement === container\n  if (!isTargetFocused) return null\n\n  const selection = window.getSelection()\n  if (!selection) return null\n  if (selection.rangeCount === 0) return null\n\n  // only look at first range if multiple\n  const range = selection.getRangeAt(0)\n  const idxRange = getAbsoluteTextCursorOffsets(container, range)\n  if (!idxRange) return null\n  // only look at start of range\n  return idxRange[0]\n}\n","import Prism from '@vendor/prismjs'\n\nexport function queryTypeToPrismLanguage(queryType?: string) {\n  if (queryType === 'cql') return 'fcs-cql'\n  if (queryType === 'fcs') return 'fcs-fcsql'\n  if (queryType === 'lex') return 'fcs-lexcql'\n  return 'plain'\n}\n\nexport function highlightSyntax(value: string, queryType?: string) {\n  // console.debug('do syntax highlighting ...', { value, queryType })\n\n  // value = JSON.stringify(Object.keys(Prism.languages))\n  const language = queryTypeToPrismLanguage(queryType)\n  const pluginClasses = 'match-braces rainbow-braces'\n\n  let prismValue = value\n  try {\n    prismValue = Prism.highlight(value, language)\n  } catch (error) {\n    console.warn('Error trying to highlight value', { value, error, language })\n  }\n  const html = `<pre><code class=\"language-${language} ${pluginClasses}\">${prismValue}</code></pre>`\n\n  return html\n}\n","import React, { useEffect, useImperativeHandle, useLayoutEffect, useRef, useState } from 'react'\n\nimport useDebounce from '@/hooks/useDebounce'\nimport { type QueryTypeID } from '@/utils/constants'\nimport { getAbsoluteTextCursorOffsets, getCursorPosition, setCursorPosition } from '@/utils/cursor'\nimport { highlightSyntax } from '@/utils/prism'\n\nimport '@vendor/prismjs/themes/prism-vs.css'\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\ndeclare const window: Window &\n  typeof globalThis & {\n    clipboardData: DataTransfer\n  }\n\n// see helpers.d.ts from react-bootstrap\ntype Omit<T, U> = Pick<T, Exclude<keyof T, keyof U>>\n\ninterface NonUsableProps {\n  contentEditable: never\n  dangerouslySetInnerHTML: never\n  onInput: never\n  onPaste: never\n  onKeyDown: never\n  onKeyUp: never\n  onClick: never\n}\n\nexport interface ContentEditableProps {\n  value?: string\n  disabled?: boolean\n  isInvalid?: boolean\n  placeholder?: string\n  queryType?: QueryTypeID\n  delay?: number\n  onChange?: (value: string) => void\n  onValidationChange?: (isValid: boolean) => void\n  onCursorChange?: (startPos: number | null, endPos?: number) => void\n}\n\nexport type Props = Omit<React.ComponentProps<'div'>, NonUsableProps> & ContentEditableProps\n\n// --------------------------------------------------------------------------\n\nfunction sanitizeValue(value?: string | null) {\n  if (!value) return ''\n\n  // illegal whitespace\n  value = value.replace(/[\\n\\t]/g, ' ')\n  value = value.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ')\n\n  // NOTE: not required for for pre/code\n  // HTML escape, entities\n  // value = value.replace(/&/g, '&amp;')\n  // HTML\n  // value = value.replace(/</g, '&lt;')\n  // value = value.replace(/>/g, '&gt;')\n  return value\n}\n\n// --------------------------------------------------------------------------\n// component\n\nconst ContentEditable = React.forwardRef<HTMLDivElement, Props>(\n  (\n    { value, onChange, onCursorChange, disabled, placeholder, queryType, delay = 200, ...props },\n    ref\n  ) => {\n    // ref to hidden input element (for form stuffs)\n    const inputRef = useRef<HTMLInputElement>(null)\n    // ref to our contentEditable input\n    const mRef = useRef<HTMLDivElement>(null)\n    // allow forwardRefs but use our local one since we need access\n    // see: https://stackoverflow.com/a/76739143/9360161\n    useImperativeHandle(ref, () => mRef.current as HTMLDivElement)\n\n    const [sanitizedValue, setSanitizedValue] = useState(sanitizeValue(value))\n    const [cursorPos, setCursorPos] = useState<number | null>(null)\n\n    // debounce to avoid unnecessary repeated calls to highlighter if value stays the same\n    const deboundedSanitizedValue = useDebounce(sanitizedValue, delay)\n    const [htmlValue, setHtmlValue] = useState(deboundedSanitizedValue)\n    useEffect(() => {\n      const valueWithStyle = highlightSyntax(deboundedSanitizedValue, queryType)\n      setHtmlValue(valueWithStyle)\n\n      if (mRef.current) {\n        const pos = getCursorPosition(mRef.current)\n        setCursorPos(pos)\n      }\n    }, [deboundedSanitizedValue, queryType])\n\n    // set visible value\n    useEffect(() => {\n      // if (disabled) return\n\n      const newValue = sanitizeValue(value)\n\n      // detection if already styled and we do not need to restyle again\n      if (deboundedSanitizedValue === newValue) return\n\n      setSanitizedValue(newValue)\n      // we still need to set the value (without styling) to show the current value to the user\n      setHtmlValue(highlightSyntax(newValue))\n\n      if (mRef.current) {\n        const pos = getCursorPosition(mRef.current)\n        setCursorPos(pos)\n      }\n    }, [value, deboundedSanitizedValue])\n\n    // set cursor position\n    useLayoutEffect(() => {\n      if (mRef.current && cursorPos !== null) {\n        // only if we have a valid cursor, otherwise let default behaviour do the work\n        // console.debug('[useLayoutEffect#setCursorPosition]', cursorPos)\n        setCursorPosition(mRef.current, cursorPos)\n      }\n    })\n\n    // ------------------------------------------------------------------------\n    // event handlers\n\n    function handleInput(event: React.ChangeEvent<HTMLDivElement>) {\n      const value = event.target.innerText\n      // console.debug('[handleInput]', value)\n\n      if (inputRef.current) {\n        inputRef.current.value = value\n      }\n\n      // TODO: might be required?\n      setSanitizedValue(value)\n\n      onChange?.(value)\n    }\n\n    function handlePaste(event: React.ClipboardEvent<HTMLDivElement>) {\n      // console.debug('[handlePaste]', event)\n\n      event.stopPropagation()\n      event.preventDefault()\n\n      // see: https://stackoverflow.com/a/6804718/9360161\n      // Get pasted data via clipboard API\n      const clipboardData = event.clipboardData || window.clipboardData\n      const pastedData = clipboardData.getData('text')\n\n      handleInsert(pastedData)\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent<HTMLDivElement>) {\n      // console.debug('[handleKeyDown]', event.key, event)\n\n      // TODO: handle Ctrl-Z?\n      // NOTE: Ctrl-X / cut is handled\n      // NOTE: (Shift-)Tab is handled\n\n      // TODO: handle Ctrl-A Delete/Backspace\n      // TODO: handle Home/End <any-input>\n\n      if (event.key === 'Enter') {\n        // console.debug('[handleKeyDown:Enter]')\n\n        event.stopPropagation()\n        event.preventDefault()\n\n        if (inputRef.current) {\n          // dispatching ENTER keydown events will not work because of trust issues\n\n          // request submit directly via enclosing form\n          // NOTE: will ignore disabled status of submit button...\n          inputRef.current.form?.requestSubmit()\n        }\n      } else if (event.key === 'Backspace') {\n        // console.debug('[handleKeyDown#Backspace]')\n\n        event.stopPropagation()\n        event.preventDefault()\n\n        // custom backspace deletion handling since backspace on formatted text\n        // will jump the cursor to the left more than expected???\n        handleBackspace()\n      } else if (event.key === 'Delete') {\n        // console.debug('[handleKeyDown#Delete]')\n\n        event.stopPropagation()\n        event.preventDefault()\n\n        handleDelete()\n      } else if (event.ctrlKey && event.key === 'a') {\n        // TODO: required?\n        // if (mRef.current) {\n        //   const selection = window.getSelection()\n        //   if (selection) {\n        //     const range = document.createRange()\n        //     range.selectNodeContents(mRef.current)\n        //     selection.removeAllRanges()\n        //     selection.addRange(range)\n        //     event.stopPropagation()\n        //     event.preventDefault()\n        //   }\n        // }\n      } else {\n        // default, do not attempt to set cursor\n        setCursorPos(null)\n      }\n    }\n\n    function handlePossibleCursorChange(isClick: boolean = false) {\n      // if no element or no event handler, then skip everything\n      if (!mRef.current) return\n      if (!onCursorChange) return\n\n      const container = mRef.current\n      const isTargetFocused = document.activeElement === container\n      if (!isTargetFocused) return\n\n      const selection = window.getSelection()\n      if (!selection) return\n      if (selection.rangeCount === 0) return\n\n      const selectionIndices: Array<readonly [number, number]> = []\n      for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i)\n        const idxRange = getAbsoluteTextCursorOffsets(container, range)\n        if (idxRange) selectionIndices.push(idxRange)\n      }\n      if (selectionIndices.length === 0) return\n\n      // use last selection as most current one\n      const [start, end] = selectionIndices.pop()!\n\n      // only trigger if selection is a single cursor, not for ranges\n      if (isClick) {\n        if (start === end) {\n          setCursorPos(start)\n          onCursorChange?.(start)\n          // } else {\n          // NOTE: this does not work, maybe due to re-rendering\n          // onCursorChange?.(start, end)\n        }\n      } else {\n        onCursorChange?.(start, start !== end ? end : undefined)\n      }\n    }\n\n    // ------------------------------------------------------------------------\n\n    function doRemove(mode: 'delete' | 'backspace' | 'paste') {\n      if (!mRef.current) return null\n\n      const container = mRef.current\n      const isTargetFocused = document.activeElement === container\n      if (!isTargetFocused) return null\n\n      const selection = window.getSelection()\n      if (!selection) return null\n      if (selection.rangeCount === 0) return null\n\n      const selectionIndices: Array<readonly [number, number]> = []\n      for (let i = 0; i < selection.rangeCount; i++) {\n        const range = selection.getRangeAt(i)\n        const idxRange = getAbsoluteTextCursorOffsets(container, range)\n        if (idxRange) selectionIndices.push(idxRange)\n      }\n\n      // nothing to do\n      if (selectionIndices.length === 0) return null\n\n      // sort, so we can delete correctly (from the back to keep indices valid)\n      selectionIndices.sort()\n\n      // how many chars will deleted\n      const numDeleted = selectionIndices\n        .map(([start, end]) => end - start)\n        .reduce((acc, cur) => acc + cur, 0)\n\n      const oldValue = container.innerText // TODO: use container.textContent?\n      const newValueSpansRemoved = selectionIndices\n        .toReversed()\n        .reduce((text, [start, end]) => text.slice(0, start) + text.slice(end), oldValue)\n\n      // console.debug('deleting', { mode, oldValue, length: oldValue.length, newValueSpansRemoved, numDeleted, selectionIndices })\n\n      if (mode === 'backspace') {\n        if (numDeleted === 0) {\n          // then perform normal backspace operation\n          const lastPos = selectionIndices\n            .filter(([start, end]) => start === end)\n            .map(([, end]) => end)\n            .pop()\n\n          // did delete nothing and am at start\n          if (lastPos === 0) return null\n\n          if (lastPos !== undefined) {\n            // should only be a single cursor! (multiple cursors are not supported by default in browsers?)\n            const newValue =\n              newValueSpansRemoved.slice(0, lastPos - 1) + newValueSpansRemoved.slice(lastPos)\n\n            return { value: newValue, offset: lastPos - 1 }\n          }\n        } else {\n          // from end of last selection minus deleted chars will be new pos\n          // collapse multiple ranges into one for simplicity\n          const lastPos = selectionIndices.map(([, end]) => end).pop()\n\n          if (lastPos !== undefined) {\n            return { value: newValueSpansRemoved, offset: lastPos - numDeleted }\n          }\n        }\n\n        console.warn('invalid \"backspace\" process, abort', {\n          container,\n          selectionIndices,\n          oldValue,\n          newValueSpansRemoved,\n          numDeleted,\n        })\n        return null\n      } else if (mode === 'delete') {\n        if (numDeleted === 0) {\n          // then perform normal backspace operation\n          const lastPos = selectionIndices\n            .filter(([start, end]) => start === end)\n            .map(([, end]) => end)\n            .pop()\n\n          if (lastPos !== undefined) {\n            // should only be a single cursor! (multiple cursors are not supported by default in browsers?)\n            const newValue =\n              newValueSpansRemoved.slice(0, lastPos) + newValueSpansRemoved.slice(lastPos + 1)\n\n            return { value: newValue, offset: lastPos }\n          }\n        } else {\n          // from end of last selection minus deleted chars will be new pos\n          // collapse multiple ranges into one for simplicity\n          const lastPos = selectionIndices.map(([, end]) => end).pop()\n\n          if (lastPos !== undefined) {\n            return { value: newValueSpansRemoved, offset: lastPos - numDeleted }\n          }\n        }\n\n        console.warn('invalid \"delete\" process, abort', {\n          container,\n          selectionIndices,\n          oldValue,\n          newValueSpansRemoved,\n          numDeleted,\n        })\n        return null\n      } else if (mode === 'paste') {\n        if (numDeleted === 0) {\n          // just find first position\n          const firstPos = selectionIndices\n            .filter(([start, end]) => start === end)\n            .map(([start]) => start)\n            .shift()\n\n          if (firstPos !== undefined) {\n            return { value: newValueSpansRemoved, offset: firstPos }\n          }\n        } else {\n          const firstPos = selectionIndices.map(([start]) => start).shift()\n\n          if (firstPos !== undefined) {\n            return { value: newValueSpansRemoved, offset: firstPos }\n          }\n        }\n\n        console.warn('invalid \"paste\" process, abort', {\n          container,\n          selectionIndices,\n          oldValue,\n          newValueSpansRemoved,\n          numDeleted,\n        })\n        return null\n      }\n    }\n\n    function handleInsert(value: string) {\n      const result = doRemove('paste')\n      if (!result) return\n\n      const valueToInsertSanitized = sanitizeValue(value)\n\n      const { value: newValue, offset: insertPos } = result\n      const newValueWithInsert =\n        newValue.slice(0, insertPos) + valueToInsertSanitized + newValue.slice(insertPos)\n      const newCursorPos = insertPos + value.length\n\n      setSanitizedValue(newValueWithInsert)\n      setCursorPos(newCursorPos)\n\n      if (inputRef.current) {\n        inputRef.current.value = newValueWithInsert\n      }\n      onChange?.(newValueWithInsert)\n      onCursorChange?.(newCursorPos)\n    }\n\n    function handleBackspace() {\n      const result = doRemove('backspace')\n      if (!result) return\n\n      const { value: newValue, offset: newCursorPos } = result\n\n      const sanitizedValue = sanitizeValue(newValue)\n\n      setSanitizedValue(sanitizedValue)\n      setCursorPos(newCursorPos)\n\n      if (inputRef.current) {\n        inputRef.current.value = sanitizedValue\n      }\n      // if (mRef.current) {\n      //   mRef.current.innerHTML = fancifyValue(sanitizedValue)\n      // }\n      onChange?.(sanitizedValue)\n      onCursorChange?.(newCursorPos)\n    }\n\n    function handleDelete() {\n      const result = doRemove('delete')\n      if (!result) return\n\n      const { value: newValue, offset: newCursorPos } = result\n\n      const sanitizedValue = sanitizeValue(newValue)\n\n      setSanitizedValue(sanitizedValue)\n      setCursorPos(newCursorPos)\n\n      if (inputRef.current) {\n        inputRef.current.value = sanitizedValue\n      }\n      onChange?.(sanitizedValue)\n      onCursorChange?.(newCursorPos)\n    }\n\n    // ------------------------------------------------------------------------\n    // UI\n\n    return (\n      <>\n        <div\n          role=\"input\"\n          // @ts-expect-error: expected, we want to set it for styling\n          disabled={disabled}\n          placeholder={placeholder}\n          spellCheck={false} // can be overwritten\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          {...props}\n          onInput={handleInput}\n          onPaste={handlePaste}\n          onKeyDown={handleKeyDown}\n          onKeyUp={() => handlePossibleCursorChange()}\n          onClick={() => handlePossibleCursorChange(true)}\n          tabIndex={disabled ? -1 : props.tabIndex}\n          contentEditable // plaintext-only?\n          dangerouslySetInnerHTML={{ __html: htmlValue }}\n          ref={mRef}\n        />\n        {placeholder && value === '' && (\n          <span className=\"input-placeholder-simulacrum\">{placeholder}</span>\n        )}\n        {/* required for form submission */}\n        <input type=\"hidden\" ref={inputRef} />\n      </>\n    )\n  }\n)\n\n// to make it show up in the dev tools\nContentEditable.displayName = 'ContentEditable'\n\nexport default ContentEditable\n","import type { FuzzyMatches } from '@nozbe/microfuzz'\nimport { Highlight, useFuzzySearchList } from '@nozbe/microfuzz/react'\nimport { useMemo, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport { useTranslation } from 'react-i18next'\n\nimport { type Resource } from '@/utils/api'\nimport {\n  DEFAULT_SEARCH_LANGUAGE_FILTER,\n  MULTIPLE_LANGUAGE_CODE,\n  type LanguageCode2NameMap,\n  type LanguageFilterOptions,\n} from '@/utils/search'\n\n// --------------------------------------------------------------------------\n// types\n\nexport type LanguageModelCloseActions = 'close' | 'confirm' | 'abort'\n\ninterface LanguageModalProps {\n  show: boolean\n  languages?: LanguageCode2NameMap\n  resources?: Resource[]\n  searchLanguage?: string\n  searchLanguageFilter?: LanguageFilterOptions\n  showResourceCounts?: boolean\n  showLanguageFilterOptions?: boolean\n  onModalClose: (result: {\n    language: string\n    filter: LanguageFilterOptions\n    action: LanguageModelCloseActions\n  }) => void\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction LanguageModal({\n  show,\n  languages,\n  resources,\n  searchLanguage,\n  searchLanguageFilter,\n  showResourceCounts: paramShowResourceCounts,\n  showLanguageFilterOptions = true,\n  onModalClose,\n}: LanguageModalProps) {\n  const { t } = useTranslation()\n\n  //  = { languages: {}, searchLanguage: MULTIPLE_LANGUAGE_CODE, searchLanguageFilter: DEFAULT_SEARCH_LANGUAGE_FILTER }\n  const [selectedLanguage, setSelectedLanguage] = useState(searchLanguage || MULTIPLE_LANGUAGE_CODE)\n  const [selectedFilterOption, setSelectedFilterOption] = useState(\n    searchLanguageFilter || DEFAULT_SEARCH_LANGUAGE_FILTER\n  )\n  const [languageFilter, setLanguageFilter] = useState('')\n  const [showResourceCounts, setShowResourceCounts] = useState(paramShowResourceCounts ?? false)\n\n  const languageToNumberOfResources = useMemo(() => {\n    const counts = new Map<string, number>()\n\n    if (resources) {\n      resources.forEach((resource) =>\n        resource.languages.forEach((language) =>\n          counts.set(language, (counts.get(language) ?? 0) + 1)\n        )\n      )\n      counts.set(MULTIPLE_LANGUAGE_CODE, resources.length)\n    }\n\n    return counts\n  }, [resources])\n\n  const filteredLanguages = useFuzzySearchList({\n    list: Object.entries(languages ?? {}).toSorted(),\n    // If `queryText` is blank, `list` is returned in whole\n    queryText: languageFilter,\n    getText: (item) => [item[0], item[1]],\n    mapResultItem: ({ item, score, matches }) => ({ item, matches, score }),\n  })\n\n  if (!languages) return null\n\n  const oneThird = Math.floor((filteredLanguages.length + 2) / 3)\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleClose(action: LanguageModelCloseActions) {\n    onModalClose({\n      language: selectedLanguage,\n      filter: selectedFilterOption,\n      action: action,\n    })\n  }\n\n  function handleReset() {\n    setSelectedLanguage(searchLanguage || MULTIPLE_LANGUAGE_CODE)\n    setSelectedFilterOption(searchLanguageFilter || DEFAULT_SEARCH_LANGUAGE_FILTER)\n  }\n\n  function handleToggleShowResourceCountsChange() {\n    setShowResourceCounts((show) => !show)\n  }\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  function renderLanguageOption(\n    code: string,\n    language: string,\n    highlights?: FuzzyMatches,\n    score?: number\n  ) {\n    const isSelected = selectedLanguage === code\n    let className = 'd-block py-0 my-1 border-0'\n    if (isSelected) className += ' fw-semibold selected'\n\n    if (highlights === undefined) highlights = [null, null]\n\n    return (\n      <Button\n        size=\"sm\"\n        // variant=\"outline-dark\"\n        className={className}\n        style={{\n          color: `var(${isSelected ? '--bs-green' : '--bs-body-colors'})`,\n          backgroundColor: 'var(--bs-body-bg)',\n        }}\n        onClick={() => setSelectedLanguage(code)}\n        data-filter-score={score}\n        key={code}\n      >\n        {isSelected && <span className=\"selected-marker me-1\">✓</span>}\n        <Highlight ranges={highlights[1]} text={language} />{' '}\n        <sup>\n          <Highlight ranges={highlights[0]} text={code} />\n        </sup>\n        {showResourceCounts && languageToNumberOfResources.has(code) && (\n          <> ({languageToNumberOfResources.get(code)})</>\n        )}\n      </Button>\n    )\n  }\n\n  return (\n    <Modal show={show} onHide={() => handleClose('close')} size=\"xl\" fullscreen=\"lg-down\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>{t('search.languagesModal.title')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-0\">\n        <Container\n          className={['px-4']\n            .concat(showLanguageFilterOptions ? ['pb-3 border-bottom'] : [])\n            .join(' ')}\n        >\n          <Row>\n            <Col sm></Col>\n            <Col sm className=\"mb-3 mb-sm-2 align-content-end\">\n              {renderLanguageOption(\n                MULTIPLE_LANGUAGE_CODE,\n                t('languageCodeToName.any', { ns: 'common' })\n              )}\n            </Col>\n            <Col sm>\n              <Form.Control\n                size=\"sm\"\n                placeholder={t('search.languagesModal.filterInputPlaceholder')}\n                name=\"languages-filter\"\n                value={languageFilter}\n                onChange={(event) => setLanguageFilter(event.target.value)}\n              />\n              {resources && (\n                <Form.Check\n                  name=\"languages-show-count\"\n                  id=\"languages-show-count\"\n                  checked={showResourceCounts}\n                  onChange={handleToggleShowResourceCountsChange}\n                  type=\"checkbox\"\n                  label={t('search.languagesModal.checkboxShowNumberOfResources')}\n                  className=\"mt-1\"\n                />\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col sm>\n              {filteredLanguages\n                .slice(0, oneThird)\n                .map(({ item: [code, language], matches, score }) =>\n                  renderLanguageOption(code, language, matches, score)\n                )}\n            </Col>\n            <Col sm>\n              {filteredLanguages\n                .slice(oneThird, 2 * oneThird)\n                .map(({ item: [code, language], matches, score }) =>\n                  renderLanguageOption(code, language, matches, score)\n                )}\n            </Col>\n            <Col sm>\n              {filteredLanguages\n                .slice(2 * oneThird)\n                .map(({ item: [code, language], matches, score }) =>\n                  renderLanguageOption(code, language, matches, score)\n                )}\n            </Col>\n          </Row>\n        </Container>\n        {showLanguageFilterOptions && (\n          <Form>\n            <Container className=\"px-4 pt-3\">\n              {(['byMeta', 'byGuess', 'byMetaAndGuess'] as LanguageFilterOptions[]).map((type) => (\n                <Form.Check\n                  key={type}\n                  type=\"radio\"\n                  name=\"filterOpts\"\n                  value={type}\n                  id={`filterOpts-${type}`}\n                  checked={selectedFilterOption === type}\n                  onChange={() => setSelectedFilterOption(type)}\n                  label={t(`search.languagesModal.optionLanguage${type}`)}\n                />\n              ))}\n            </Container>\n          </Form>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleReset}>\n          {t('search.languagesModal.buttonReset')}\n        </Button>\n        <Button variant=\"secondary\" onClick={() => handleClose('abort')}>\n          {t('search.languagesModal.buttonAbort')}\n        </Button>\n        <Button variant=\"primary\" onClick={() => handleClose('confirm')}>\n          {t('search.languagesModal.buttonConfirm')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default LanguageModal\n","export type QueryTypeID = (typeof QUERY_TYPES)[number]['id']\nexport type QueryTypeIDForQueryBuilder = (typeof QUERY_TYPES_WITH_BUILDER_SUPPORT)[number]\nexport type DownloadFormats = (typeof DOWNLOAD_FORMATS)[number]['id']\nexport type NumberOfResults = (typeof NUMBER_OF_RESULTS)[number]\n\n// --------------------------------------------------------------------------\n\nexport const QUERY_TYPES = [\n  {\n    id: 'cql',\n    name: 'Text layer Contextual Query Language (CQL)',\n    searchLabel: 'Full-text search',\n    color: '#29a900',\n    searchPlaceholder: 'Elephant',\n  },\n  {\n    id: 'fcs',\n    name: 'Multi-layer Federated Content Search Query Language (FCS-QL)',\n    searchLabel: 'Multi-layer annotation search',\n    color: '#00a8cc',\n    searchPlaceholder: \"[word = 'annotation'][word = 'focused']\",\n  },\n  {\n    id: 'lex',\n    name: 'Lexical Resources Contextual Query Language (LexCQL)',\n    searchLabel: 'Lexical resource search',\n    color: '#e77e00',\n    searchPlaceholder: 'banana',\n  },\n] as const\n\nexport const QUERY_TYPE_MAP = Object.fromEntries(\n  ['cql', 'fcs', 'lex'].map((id) => [id, QUERY_TYPES.find((qt) => qt.id === id)])\n)\n\nexport const QUERY_TYPES_WITH_BUILDER_SUPPORT = ['fcs', 'lex'] as const\n\nexport const DOWNLOAD_FORMATS = [\n  { id: 'text', label: 'Plain Text' },\n  { id: 'csv', label: 'CSV' },\n  { id: 'tcf', label: 'TCF' },\n  { id: 'ods', label: 'ODS' },\n  { id: 'excel', label: 'Excel' },\n] as const\n\nexport const DEFAULT_QUERY_TYPE: QueryTypeID = 'cql'\n\nexport const NUMBER_OF_RESULTS = [10, 20, 50, 100, 200, 250] as const\n\nexport const NO_MORE_RECORDS_DIAGNOSTIC_URI = 'info:srw/diagnostic/1/61'\n","import { QueryTypeID } from '@/utils/constants'\n\ninterface Example {\n  id: string\n  queryType: QueryTypeID\n  query: string\n  description: string\n}\n\nexport default [\n  {\n    id: 'cql-single-term',\n    queryType: 'cql',\n    query: 'Elephant',\n    description: 'Query with single term',\n  },\n  {\n    id: 'cql-with-boolean',\n    queryType: 'cql',\n    query: 'cat AND dog',\n    description: 'Query with boolean',\n  },\n  {\n    id: 'cql-with-phrase',\n    queryType: 'cql',\n    query: '\"exciting news\"',\n    description: 'Query with phrase (quoting because of whitespaces)',\n  },\n\n  {\n    id: 'fcs-three-tokens-artznei',\n    queryType: 'fcs',\n    query: '[ word = \"her.*\" ] [ lemma = \"Artznei\" ] [ pos = \"VERB\" ]',\n    description:\n      'Phrase with three tokens: a word starting with \"her\", a lemmatized word, and a verb',\n  },\n\n  {\n    id: 'lex-plain-string',\n    queryType: 'lex',\n    query: 'apple',\n    description: 'Search for plain string',\n  },\n  {\n    id: 'lex-lemma-with-language',\n    queryType: 'lex',\n    query: 'lemma =/lang=deu \"Apfel\"',\n    description: 'Search for German lemma \"Apfel\"',\n  },\n] as Example[]\n","import { Fragment } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport { useTranslation } from 'react-i18next'\n\nimport { QUERY_TYPE_MAP, QueryTypeID } from '@/utils/constants'\nimport { highlightSyntax } from '@/utils/prism'\nimport exampleQueries from './examples'\n\n// --------------------------------------------------------------------------\n// types\n\ninterface QuerySuggestionsModal {\n  show: boolean\n  queryTypes?: QueryTypeID[]\n  onModalClose: (result: { query?: string; queryType?: QueryTypeID; action: string }) => void\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction QuerySuggestionsModal({\n  show,\n  queryTypes: queryTypesProp,\n  onModalClose,\n}: QuerySuggestionsModal) {\n  const { t } = useTranslation()\n\n  const queryTypes: readonly QueryTypeID[] =\n    queryTypesProp && queryTypesProp.length > 0 ? queryTypesProp : ['cql', 'fcs', 'lex']\n  const requestedExamples = exampleQueries.filter((example) =>\n    queryTypes.includes(example.queryType)\n  )\n\n  // if there are no examples queries for this set of queryTypes, then do not show anything\n  if (requestedExamples.length === 0) {\n    handleClose('abort')\n    return null\n  }\n\n  // --------------------------------------------------------------\n  // event handlers\n\n  function handleClose(action: string) {\n    onModalClose({ query: undefined, queryType: undefined, action: action })\n  }\n\n  function handleUseQueryClose(query: string, queryType: QueryTypeID) {\n    // TODO: better action name? \"use\"\n    onModalClose({ query: query, queryType: queryType, action: 'confirm' })\n  }\n\n  // --------------------------------------------------------------\n  // rendering\n\n  function renderExample(query: string, queryType: QueryTypeID, description?: string, nr?: number) {\n    // TODO: get description from translation resource?\n    return (\n      <Row key={query}>\n        <Col md={'auto'} className=\"d-none d-md-block\">\n          {nr && `${nr}.`}\n        </Col>\n        <Col className=\"d-flex flex-column\">\n          {description !== undefined && <div>{description}</div>}\n          <div dangerouslySetInnerHTML={{ __html: highlightSyntax(query, queryType) }} />\n        </Col>\n        <Col md={'auto'} className=\"d-flex justify-content-end align-items-baseline\">\n          <Button size=\"sm\" onClick={() => handleUseQueryClose(query, queryType)}>\n            {t('search.suggestionsModal.buttonUseQuery')}\n          </Button>\n        </Col>\n      </Row>\n    )\n  }\n\n  return (\n    <Modal\n      id=\"search-query-suggestions-modal\"\n      show={show}\n      onHide={() => handleClose('close')}\n      size=\"xl\"\n      fullscreen=\"xl-down\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{t('search.suggestionsModal.title')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-0\">\n        {/* grouped by querytype or other category; each item with label/description, query, button to use */}\n        {/* TODO: should use table instead? */}\n        <Container fluid>\n          {queryTypes.map((queryType) => {\n            const examples = requestedExamples.filter((example) => example.queryType === queryType)\n\n            // skip if no examples for this queryType\n            if (examples.length === 0) return null\n\n            return (\n              <Fragment key={queryType}>\n                <Row>\n                  <Col>\n                    <h4 className=\"border-bottom pb-2\">\n                      {t(`queryTypes.${queryType}.nameLong`, {\n                        ns: 'common',\n                        defaultValue: QUERY_TYPE_MAP[queryType]?.name ?? queryType.toUpperCase(),\n                      })}\n                    </h4>\n                  </Col>\n                </Row>\n                {examples.map((example, index) =>\n                  renderExample(example.query, example.queryType, example.description, index + 1)\n                )}\n              </Fragment>\n            )\n          })}\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => handleClose('close')}>\n          {t('search.suggestionsModal.buttonClose')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default QuerySuggestionsModal\n","import { useEffect, useState } from 'react'\nimport Form from 'react-bootstrap/Form'\n\nimport useDebounce from '@/hooks/useDebounce'\n\n// --------------------------------------------------------------------------\n\nfunction DebouncedFuzzySearchInput({\n  disabled,\n  value,\n  onChange,\n  delay = 300,\n}: {\n  disabled?: boolean\n  value?: string\n  onChange: (filter: string) => void\n  delay?: number\n}) {\n  const [filter, setFilter] = useState(value ?? '')\n  const deboundedFilter = useDebounce(filter, delay)\n\n  useEffect(() => {\n    onChange(deboundedFilter)\n  }, [onChange, deboundedFilter])\n\n  return (\n    <Form.Control\n      type=\"search\"\n      placeholder=\"Search for ...\"\n      value={filter}\n      onChange={(event) => setFilter(event.target.value)}\n      disabled={disabled}\n    />\n  )\n}\n\nexport default DebouncedFuzzySearchInput\n","import { type HighlightRanges } from '@nozbe/microfuzz'\nimport { useFuzzySearchList } from '@nozbe/microfuzz/react'\n\nimport { type Resource } from '@/utils/api'\nimport { flattenResources, getBestFromMultilingualValuesTryByLanguage } from '@/utils/resources'\n\nexport type ResourceSearchFields = 'title' | 'institution' | 'description'\nexport type FuzzyMatchesByField = Map<ResourceSearchFields, HighlightRanges | null>\n\nexport default function useFuzzySearchListWithHierarchy(\n  filter: string,\n  resources: Resource[],\n  locale: string,\n  fields?: ResourceSearchFields[]\n) {\n  // flatten nested list to allow fuzzy search everywhere\n  const flattenedResources = flattenResources(resources)\n\n  fields ??= ['title', 'institution', 'description']\n\n  // fuzzy reduce search results\n  const filteredResources = useFuzzySearchList({\n    list: flattenedResources,\n    // TODO: only search in \"resource\" mode for now\n    // queryText: viewResourcesGrouping === 'resource' ? filter : '',\n    queryText: filter,\n    getText: (item) => {\n      const strings = []\n      if (fields.includes('title')) {\n        strings.push(getBestFromMultilingualValuesTryByLanguage(item.title, locale))\n      }\n      if (fields.includes('institution')) {\n        strings.push(getBestFromMultilingualValuesTryByLanguage(item.institution, locale))\n      }\n      if (fields.includes('description')) {\n        strings.push(getBestFromMultilingualValuesTryByLanguage(item.description, locale))\n      }\n      return strings\n    },\n    // structure matches for better access?\n    mapResultItem: ({ item, score, matches }) => {\n      // map array to map\n      const matchesByField = new Map<ResourceSearchFields, HighlightRanges | null>()\n      let fieldIdx = 0\n      if (fields.includes('title')) matchesByField.set('title', matches[fieldIdx++])\n      if (fields.includes('institution')) matchesByField.set('institution', matches[fieldIdx++])\n      if (fields.includes('description')) matchesByField.set('description', matches[fieldIdx++])\n\n      return { resource: item, matches: matchesByField, score }\n    },\n  })\n  // console.debug('filtered resources', filter, filteredResources)\n\n  // TODO: does this improve anything (since we debounce the input?)\n  // if (filter === '') {\n  //   return {\n  //     resources: resources,\n  //     matches: undefined,\n  //     scores: undefined,\n  //   }\n  // }\n\n  // all matches for highlighting\n  const filteredResourcesHighlights: Map<string, FuzzyMatchesByField> = filteredResources.reduce(\n    (map, { resource, matches }) => (map.set(resource.id, matches), map),\n    new Map()\n  )\n  // all scores (to be augmented with missing parents for nested children)\n  const filteredResourcesScores: Map<string, number> = filteredResources.reduce(\n    (map, { resource, score }) => map.set(resource.id, score),\n    new Map()\n  )\n\n  // find parents that are filtered out by useFuzzySearchList to get back the hierarchy\n  const resourceIDsOfParentsToAdd = new Set()\n\n  // children (nested), we need to generate the missing parents\n  filteredResources\n    .filter(({ resource }) => resource.rootResourceId !== null)\n    .forEach(({ resource, score }) => {\n      const rootScore = filteredResourcesScores.get(resource.rootResourceId!)\n      if (rootScore === undefined) {\n        // if unknown, add score and add parent to to-be-added list\n        resourceIDsOfParentsToAdd.add(resource.rootResourceId)\n        filteredResourcesScores.set(resource.rootResourceId!, score)\n      } else if (score < rootScore) {\n        // if known but with smaller score, update score to rank higher\n        filteredResourcesScores.set(resource.rootResourceId!, score)\n      }\n    })\n\n  // to-be-added parents for children with results\n  const filteredResourcesParents = resources\n    .filter((resource) => resourceIDsOfParentsToAdd.has(resource.id))\n    .map((resource) => ({ resource, score: filteredResourcesScores.get(resource.id) }))\n\n  // default results (not nested/children)\n  const filteredResourcesRoots = filteredResources.filter(\n    ({ resource }) => !resource.rootResourceId\n  )\n\n  // combined list of results; minus highlighted children; plus roots of highlighted children\n  const mergedFilteredResources = [...filteredResourcesRoots, ...filteredResourcesParents]\n    .toSorted(({ score: aScore }, { score: bScore }) =>\n      aScore === bScore ? 0 : aScore === undefined ? 1 : bScore === undefined ? -1 : aScore - bScore\n    )\n    .map(({ resource }) => resource)\n\n  return {\n    resources: mergedFilteredResources,\n    matches: filteredResourcesHighlights,\n    scores: filteredResourcesScores,\n  }\n}\n","import { Highlight } from '@nozbe/microfuzz/react'\nimport { useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport { useTranslation } from 'react-i18next'\n\nimport { type FuzzyMatchesByField } from '@/hooks/useFuzzySearchListWithHierarchy'\nimport appStore from '@/stores/app'\nimport { useLocaleStore } from '@/stores/locale'\nimport { type Resource } from '@/utils/api'\nimport {\n  getBestFromMultilingualValuesTryByLanguage,\n  getLanguagesFromResourceInfo,\n} from '@/utils/resources'\n\nimport bankIcon from 'bootstrap-icons/icons/bank.svg?raw'\nimport houseDoorIcon from 'bootstrap-icons/icons/house-door.svg?raw'\nimport shieldCheckIcon from 'bootstrap-icons/icons/shield-check.svg?raw'\nimport shieldLockIcon from 'bootstrap-icons/icons/shield-lock.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n\nfunction ResourceSelector({\n  resource,\n  selectedResourceIDs,\n  highlighting,\n  highlightings,\n  shouldBeShown,\n  localeForInfos,\n  onSelectClick,\n  languageCodeToName,\n}: {\n  resource: Resource\n  selectedResourceIDs: string[]\n  highlighting?: FuzzyMatchesByField\n  highlightings?: Map<string, FuzzyMatchesByField>\n  shouldBeShown: ((resource: Resource) => boolean) | boolean\n  localeForInfos?: string | null\n  onSelectClick: (resource: Resource, selected: boolean) => void\n  languageCodeToName: (code: string) => string\n}) {\n  const { t } = useTranslation()\n\n  const isAuthenticated = appStore.getState().isAuthenticated\n\n  const [expanded, setExpanded] = useState(false)\n  const [showSubResources, setShowSubResources] = useState(false)\n\n  highlighting ??= highlightings?.get(resource.id) ?? new Map()\n\n  const isSelected = selectedResourceIDs.includes(resource.id)\n\n  // --------------------------------------------------------------\n\n  const languageForResource = getLanguagesFromResourceInfo(resource)\n\n  const userLocale = useLocaleStore((state) => state.locale)\n\n  const [locale, setLocale] = useState(userLocale)\n  // update from outside\n  useEffect(() => {\n    if (userLocale) setLocale(userLocale)\n  }, [userLocale])\n  useEffect(() => {\n    if (localeForInfos) setLocale(localeForInfos)\n  }, [localeForInfos])\n\n  // --------------------------------------------------------------\n\n  // check if resource should even be rendered\n  if (typeof shouldBeShown === 'function' && !shouldBeShown(resource)) {\n    return null\n  } else if (shouldBeShown === false) {\n    return null\n  }\n\n  // whether the expand/collapse button should be shown\n  // also, whether the sub-resources div should be shown\n  const shouldExpandToggleBeShown =\n    typeof shouldBeShown === 'function'\n      ? resource.subResources.some((subresource) => shouldBeShown(subresource))\n      : true\n\n  // --------------------------------------------------------------\n\n  function handleToggleExpansionClick() {\n    // stop de-expansion toggle if user is selecting\n    // see: https://stackoverflow.com/a/78044274/9360161\n    if (expanded && document.getSelection()?.type === 'Range') return\n    setExpanded((isExpanded) => !isExpanded)\n  }\n\n  function handleToggleSelectionClick() {\n    onSelectClick(resource, !isSelected)\n  }\n\n  function handleToggleShowSubResourcesClick() {\n    setShowSubResources((doShow) => !doShow)\n  }\n\n  // --------------------------------------------------------------\n\n  function renderResourceAvailabilityRestriction() {\n    // TODO: do we always want to render this, regardless of whether we enable authentication?\n    if (!import.meta.env.FEATURE_AUTHENTICATION) return null\n\n    if (resource.availabilityRestriction !== 'NONE') {\n      // TODO: add tooltips/aria-labels to describe access status\n      return (\n        <>\n          <i\n            dangerouslySetInnerHTML={{ __html: isAuthenticated ? shieldCheckIcon : shieldLockIcon }}\n          />{' '}\n        </>\n      )\n    }\n  }\n\n  // --------------------------------------------------------------\n\n  return (\n    <>\n      <Row className={`p-2 m-1 ${expanded && 'border-bottom'}`}>\n        <Col md=\"auto\" sm={1} onClick={handleToggleSelectionClick}>\n          <Form.Check\n            id={`resource-selection-${resource.id}`}\n            aria-label={t('search.results.resourceInfo.checkboxResourceAriaLabel', {\n              title: resource.title,\n            })}\n          >\n            <Form.Check.Input\n              checked={isSelected}\n              onChange={() => {}} // to silence react warning, use handler from parent's parent\n            />\n          </Form.Check>\n        </Col>\n        <Col\n          md={8}\n          sm={11}\n          className={`mb-sm-2 ${expanded ? '' : 'text-truncate'}`}\n          // TODO: only if we want to have a larger clickable area for the selection checkbox, not so nice when we have sub-resources ...\n          onClick={handleToggleExpansionClick}\n        >\n          <h4 className={`h5 ${expanded ? '' : 'text-truncate'}`}>\n            {renderResourceAvailabilityRestriction()}\n            <Highlight\n              text={getBestFromMultilingualValuesTryByLanguage(resource.title, locale) ?? ''}\n              ranges={highlighting.get('title') ?? null}\n            />{' '}\n            {resource.landingPage && (\n              <small>\n                <a href={resource.landingPage} className=\"matomo_link\" target=\"_blank\">\n                  {t('search.resourcesModal.resource.moreInformation')}{' '}\n                  <i dangerouslySetInnerHTML={{ __html: houseDoorIcon }} />\n                </a>\n              </small>\n            )}\n          </h4>\n          <p className={`mb-0 ${expanded ? '' : 'text-truncate'}`}>\n            {getBestFromMultilingualValuesTryByLanguage(resource.description, locale) && (\n              <Highlight\n                text={\n                  getBestFromMultilingualValuesTryByLanguage(resource.description, locale) ?? ''\n                }\n                ranges={highlighting.get('description') ?? null}\n              />\n            )}\n          </p>\n        </Col>\n        <Col\n          md={{ span: 3, offset: 0 }}\n          sm={{ span: 11, offset: 1 }}\n          className={`${expanded ? '' : ' text-truncate'}`}\n          onClick={handleToggleExpansionClick}\n        >\n          <i dangerouslySetInnerHTML={{ __html: bankIcon }} />{' '}\n          <Highlight\n            text={getBestFromMultilingualValuesTryByLanguage(resource.institution, locale) ?? ''}\n            ranges={highlighting.get('institution') ?? null}\n          />\n          <br />\n          <i dangerouslySetInnerHTML={{ __html: translateIcon }} />{' '}\n          {resource.languages.map(languageCodeToName).sort().join(', ')}\n          {expanded && languageForResource.length > 1 && (\n            <>\n              <br />\n              <ToggleButtonGroup\n                type=\"radio\"\n                name={`resources-${resource.id}-info-languages`}\n                defaultValue={locale}\n                onChange={(language) => setLocale(language)}\n                onClick={(e) => e.stopPropagation()}\n                className=\"mt-2\"\n              >\n                {languageForResource.toSorted().map((language) => (\n                  <ToggleButton\n                    variant=\"outline-secondary\"\n                    size=\"sm\"\n                    key={language}\n                    id={`resources-${resource.id}-info-languages-${language}`}\n                    value={language}\n                    type=\"radio\"\n                  >\n                    {language}\n                  </ToggleButton>\n                ))}\n              </ToggleButtonGroup>\n            </>\n          )}\n        </Col>\n        {/* sub resources view button */}\n        {shouldExpandToggleBeShown && resource.subResources.length > 0 && (\n          <>\n            <div className=\"w-100\"></div>\n            <Col md=\"auto\" sm={1} style={{ width: '2.8rem' }}></Col>\n            <Col md={{ span: 8, offset: 0 }} sm={{ span: 11, offset: 1 }}>\n              <Button\n                variant=\"link\"\n                size=\"sm\"\n                className=\"ps-0\"\n                onClick={handleToggleShowSubResourcesClick}\n              >\n                {/* TODO: hint if view-selected-only and no children are selected --> empty */}\n                {t('search.resourcesModal.resource.toggleExpand', {\n                  context: showSubResources ? 'collapse' : 'expand',\n                  count: resource.subResources.length,\n                })}\n              </Button>\n            </Col>\n          </>\n        )}\n      </Row>\n      {/* sub resources */}\n      {shouldExpandToggleBeShown && showSubResources && (\n        <Card className=\"ms-md-5 ms-sm-2 border-end-0 border-top-0 rounded-end-0 rounded-top-0\">\n          {resource.subResources.map((subResource: Resource) => (\n            <ResourceSelector\n              resource={subResource}\n              highlightings={highlightings}\n              selectedResourceIDs={selectedResourceIDs}\n              shouldBeShown={shouldBeShown}\n              onSelectClick={onSelectClick}\n              languageCodeToName={languageCodeToName}\n              key={subResource.id}\n            />\n          ))}\n        </Card>\n      )}\n    </>\n  )\n}\n\nexport default ResourceSelector\n","import { useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport { useTranslation } from 'react-i18next'\n\nimport { type FuzzyMatchesByField } from '@/hooks/useFuzzySearchListWithHierarchy'\nimport { type Resource } from '@/utils/api'\nimport { getResourceIDs } from '@/utils/resources'\nimport ResourceSelector from './ResourceSelector'\n\n// --------------------------------------------------------------------------\n\nfunction GroupedResources({\n  title,\n  resources,\n  selectedResourceIDs,\n  resourceScores,\n  highlightings,\n  expanded: expandedProp,\n  shouldBeShown,\n  localeForInfos,\n  onSelectClick,\n  onExpandToggleClick,\n  onSelectAllClick,\n  onDeselectAllClick,\n  languageCodeToName,\n}: {\n  title: React.ReactNode\n  resources: Resource[]\n  selectedResourceIDs: string[]\n  resourceScores?: Map<string, number>\n  highlightings?: Map<string, FuzzyMatchesByField>\n  expanded: boolean\n  shouldBeShown: ((resource: Resource) => boolean) | boolean\n  localeForInfos?: string | null\n  onSelectClick: (resource: Resource, selected: boolean) => void\n  onExpandToggleClick: (expanded: boolean) => void\n  onSelectAllClick: (resources: Resource[]) => void\n  onDeselectAllClick: (resources: Resource[]) => void\n  languageCodeToName: (code: string) => string\n}) {\n  const { t } = useTranslation()\n  const [expanded, setExpanded] = useState(expandedProp)\n\n  useEffect(() => {\n    // console.log('resource.selected', resource.selected, resource.id)\n    setExpanded(expandedProp)\n  }, [expandedProp])\n\n  // resources we show\n  // NOTE: buttons to \"(de)select all\" will affect all resources regardless of visibility\n  const visibleResources =\n    resourceScores !== undefined\n      ? resources\n          .filter((resource) => resourceScores.has(resource.id))\n          .toSorted((a, b) => {\n            const aScore = resourceScores.get(a.id)\n            const bScore = resourceScores.get(b.id)\n            if (aScore === bScore) return 0\n            if (aScore === undefined) return 1\n            if (bScore === undefined) return -1\n            return aScore - bScore\n          })\n      : resources\n\n  // hide if no visible resources?\n  if (visibleResources.length === 0) return null\n\n  // --------------------------------------------------------------\n  // event handlers\n\n  function handleToggleExpandButton() {\n    setExpanded((isExpanded) => !isExpanded)\n    onExpandToggleClick(!expanded) // TODO: how fast is this update above?\n  }\n\n  // --------------------------------------------------------------\n  // rendering\n\n  function renderResourceCounts() {\n    const rootResources = resources.filter((resource) => !resource.rootResourceId)\n    const numResources = getResourceIDs(rootResources).length\n    const numResourcesRoot = rootResources.length\n    const numResourcesSelected = getResourceIDs(rootResources).filter((rid) =>\n      selectedResourceIDs.includes(rid)\n    ).length\n\n    return (\n      t('search.resourcesModal.grouped.msgResources', {\n        count: numResourcesRoot,\n        nested: numResources - numResourcesRoot,\n        context: numResources - numResourcesRoot ? 'nested' : null,\n      }) +\n      (numResourcesSelected !== numResources\n        ? t('search.resourcesModal.grouped.msgResourcesSelected', { count: numResourcesSelected })\n        : '')\n    )\n  }\n\n  return (\n    <Container className=\"border-bottom pb-2 mb-4 px-0\">\n      <Row className=\"px-3\">\n        <Col md={9} sm={12}>\n          <h3>{title}</h3>\n        </Col>\n        <Col\n          md={3}\n          sm={12}\n          className=\"gap-1 d-inline-flex column-gap-2 justify-content-evenly\"\n          style={{ height: 'fit-content' }}\n        >\n          <Button\n            size=\"sm\"\n            variant=\"secondary\"\n            onClick={handleToggleExpandButton}\n            aria-expanded={expanded}\n          >\n            {t('search.resourcesModal.grouped.buttonExpand', {\n              context: expanded ? 'hide' : 'show',\n            })}\n          </Button>\n          <Button size=\"sm\" onClick={() => onSelectAllClick(resources)}>\n            {t('search.resourcesModal.grouped.buttonSelectAll')}\n          </Button>\n          <Button size=\"sm\" onClick={() => onDeselectAllClick(resources)}>\n            {t('search.resourcesModal.grouped.buttonDeselectAll')}\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"px-3\">\n        <Col>{renderResourceCounts()}</Col>\n      </Row>\n      <Collapse in={expanded}>\n        <Container>\n          {visibleResources.map((resource: Resource) => (\n            <ResourceSelector\n              resource={resource}\n              highlightings={highlightings}\n              selectedResourceIDs={selectedResourceIDs}\n              shouldBeShown={shouldBeShown}\n              onSelectClick={onSelectClick}\n              languageCodeToName={languageCodeToName}\n              localeForInfos={localeForInfos}\n              key={resource.id}\n            />\n          ))}\n        </Container>\n      </Collapse>\n    </Container>\n  )\n}\n\nexport default GroupedResources\n","import { useEffect, useMemo, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport { useTranslation } from 'react-i18next'\n\nimport DebouncedFuzzySearchInput from '@/components/DebouncedFuzzySearchInput'\nimport useFuzzySearchListWithHierarchy from '@/hooks/useFuzzySearchListWithHierarchy'\nimport { useLocaleStore } from '@/stores/locale'\nimport { type Resource } from '@/utils/api'\nimport {\n  getBestFromMultilingualValuesTryByLanguage,\n  getLanguagesFromResourceInfo,\n  getResourceIDs,\n  isResourceAvailableDueToSubResource,\n  SORT_FNS,\n} from '@/utils/resources'\nimport {\n  DEFAULT_RESOURCE_VIEW_GROUPING,\n  DEFAULT_RESOURCE_VIEW_SORTING,\n  DEFAULT_RESOURCE_VIEW_VISIBILITY,\n  languageCodeToName as languageCodeToNameHelper,\n  type LanguageCode2NameMap,\n  type ResourceSelectionModalViewOptionGrouping,\n  type ResourceSelectionModalViewOptionSorting,\n  type ResourceSelectionModalViewOptionVisibility,\n} from '@/utils/search'\nimport GroupedResources from './GroupedResources'\nimport ResourceSelector from './ResourceSelector'\n\nimport bankIcon from 'bootstrap-icons/icons/bank.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\ninterface ResourcesGroupedByKeyMap {\n  [key: string]: {\n    expanded: boolean\n    resources: Resource[]\n  }\n}\n\ninterface ResourceSelectionModalProps {\n  show: boolean\n  showGrouping?: ResourceSelectionModalViewOptionGrouping\n  resources: Resource[]\n  languages?: LanguageCode2NameMap\n  availableResources: string[]\n  selectedResources: string[]\n  onModalClose: (result: { resourceIDs: string[]; action: string }) => void\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ResourceSelectionModal({\n  show,\n  showGrouping,\n  resources,\n  languages,\n  availableResources,\n  selectedResources,\n  onModalClose,\n}: ResourceSelectionModalProps) {\n  const { t } = useTranslation()\n  // locale/language information\n  const userLocale = useLocaleStore((state) => state.locale)\n  const [locale, setLocale] = useState(userLocale)\n  useEffect(() => {\n    if (userLocale) setLocale(userLocale)\n  }, [userLocale])\n\n  const langNames = new Intl.DisplayNames([userLocale, 'en'], { type: 'language' })\n\n  // resources\n  const [selectedResourceIDs, setSelectedResourceIDs] = useState(\n    selectedResources || availableResources\n  )\n\n  // view options\n  const [viewResourcesVisibility, setViewResourcesVisibility] =\n    useState<ResourceSelectionModalViewOptionVisibility>(DEFAULT_RESOURCE_VIEW_VISIBILITY)\n  const [viewResourcesGrouping, setViewResourcesGrouping] =\n    useState<ResourceSelectionModalViewOptionGrouping>(DEFAULT_RESOURCE_VIEW_GROUPING)\n  const [viewResourcesSorting, setViewResourcesSorting] =\n    useState<ResourceSelectionModalViewOptionSorting>(DEFAULT_RESOURCE_VIEW_SORTING)\n\n  // fuzzy filter\n  const [filter, setFilter] = useState('')\n\n  // TODO: grouping\n  const [resourcesGroupedByInstitute, setResourcesGroupedByInstitute] =\n    useState<ResourcesGroupedByKeyMap>({})\n  const [resourcesGroupedByLanguage, setResourcesGroupedByLanguage] =\n    useState<ResourcesGroupedByKeyMap>({})\n\n  useEffect(() => {\n    if (showGrouping) setViewResourcesGrouping(showGrouping)\n    // NOTE: remove `show` dependency to let modal keep last state when re-opened with same arguments\n  }, [show, showGrouping])\n\n  // to update modal on open\n  useEffect(() => setSelectedResourceIDs(selectedResources), [selectedResources])\n\n  // sort resources\n  const sortedResources = resources\n    .filter((resource) => availableResources.includes(resource.id))\n    .toSorted(SORT_FNS[viewResourcesSorting])\n\n  // languages for resource infos (title/description/institution)\n  const resourceInfoLanguages = sortedResources\n    .map((resource) => getLanguagesFromResourceInfo(resource))\n    .flat()\n  const resourceInfoLanguagesGrouped = resourceInfoLanguages.reduce(\n    (acc, cur) => acc.set(cur, (acc.get(cur) ?? 0) + 1),\n    new Map()\n  )\n\n  const {\n    resources: filteredResources,\n    matches: filteredResourcesHighlights,\n    scores: filteredResourceScores,\n  } = useFuzzySearchListWithHierarchy(filter, sortedResources, locale)\n\n  // TODO: memo required or simply compute as is?\n  // compute sorting of groups\n  const groupScore = useMemo(() => {\n    const groupScore: Map<string, number> = new Map()\n    if (viewResourcesGrouping === 'institution') {\n      Object.entries(resourcesGroupedByInstitute).forEach(([institute, resources]) => {\n        groupScore.set(\n          institute,\n          resources.resources.reduce((score, resource) => {\n            const rScore = filteredResourceScores.get(resource.id)\n            if (rScore === undefined) return score\n            if (score === undefined) return rScore\n            return score < rScore ? score : rScore\n          }, undefined as unknown as number)\n        )\n      })\n    } else if (viewResourcesGrouping === 'language') {\n      Object.entries(resourcesGroupedByLanguage).forEach(([institute, resources]) => {\n        groupScore.set(\n          institute,\n          resources.resources.reduce((score, resource) => {\n            const rScore = filteredResourceScores.get(resource.id)\n            if (rScore === undefined) return score\n            if (score === undefined) return rScore\n            return score < rScore ? score : rScore\n          }, undefined as unknown as number)\n        )\n      })\n    }\n    return groupScore\n  }, [\n    viewResourcesGrouping,\n    filteredResourceScores,\n    resourcesGroupedByInstitute,\n    resourcesGroupedByLanguage,\n  ])\n\n  // TODO: memo with state required?\n  useMemo(() => {\n    console.debug('recompute groupings')\n\n    const instituteToResourcesMap: ResourcesGroupedByKeyMap = {}\n    const instituteToLanguagesMap: ResourcesGroupedByKeyMap = {}\n    // resources.recurse((resource: Resource) => {}) // TODO: subresources with different grouping-key than parent?\n    resources.forEach((resource: Resource) => {\n      const institution =\n        getBestFromMultilingualValuesTryByLanguage(resource.institution, locale) ?? ''\n      if (!Object.getOwnPropertyNames(instituteToResourcesMap).includes(institution)) {\n        instituteToResourcesMap[institution] = {\n          // expanded: resourcesGroupedByInstitute?.[institution]?.expanded ?? true,\n          expanded: true,\n          resources: [],\n        }\n      }\n      instituteToResourcesMap[institution].resources.push(resource)\n\n      resource.languages.forEach((language: string) => {\n        if (!Object.getOwnPropertyNames(instituteToLanguagesMap).includes(language)) {\n          instituteToLanguagesMap[language] = {\n            // expanded: resourcesGroupedByLanguage?.[language]?.expanded ?? true,\n            expanded: true,\n            resources: [],\n          }\n        }\n        instituteToLanguagesMap[language].resources.push(resource)\n\n        // TODO: handle children with different language than parent?\n      })\n    })\n\n    setResourcesGroupedByInstitute(instituteToResourcesMap)\n    setResourcesGroupedByLanguage(instituteToLanguagesMap)\n  }, [resources, locale])\n\n  // --------------------------------------------------------------\n\n  if (!resources) return null\n\n  // --------------------------------------------------------------\n\n  const resourcesInfo = {\n    total: getResourceIDs(resources).length, // how many resources from API\n    totalRoot: resources.length, // how many resources from API (root only)\n    available: availableResources.length, // how many selectable due to other filters\n    selected: selectedResourceIDs.length, // how many selected\n    visible: getResourceIDs(filteredResources.map((resource) => resource)).length, // how many visible (due to fuzzy filtering)\n    visibleRoot: filteredResources.length, // how many visible (due to fuzzy filtering), root only\n  }\n\n  // --------------------------------------------------------------\n  // helper\n\n  function languageCodeToName(code: string) {\n    return languageCodeToNameHelper(code, languages, {\n      defaultAnyLanguage: t('languageCodeToName.any', { ns: 'common' }),\n      defaultUnknownLanguage: t('languageCodeToName.unknown', { ns: 'common' }),\n    })\n  }\n\n  function changeSelectedResourceIDs(resourceIDs: string[], isSelected: boolean) {\n    const nextResourceIDs = selectedResourceIDs.filter((rid) => !resourceIDs.includes(rid))\n    if (isSelected) {\n      setSelectedResourceIDs([...nextResourceIDs, ...resourceIDs])\n    } else {\n      setSelectedResourceIDs(nextResourceIDs)\n    }\n  }\n\n  // --------------------------------------------------------------\n  // event handlers\n\n  function handleClose(action: string) {\n    onModalClose({\n      resourceIDs: selectedResourceIDs,\n      action: action,\n    })\n  }\n\n  function handleViewOptionsVisibilityChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    // console.debug('visibility#onchange', viewResourcesVisibility, '=>', event.target.value)\n    setViewResourcesVisibility(event.target.value as ResourceSelectionModalViewOptionVisibility)\n  }\n\n  function handleViewOptionsGroupingChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    // console.debug('grouping#onchange', viewResourcesGrouping, '=>', event.target.value)\n    setViewResourcesGrouping(event.target.value as ResourceSelectionModalViewOptionGrouping)\n  }\n\n  function handleViewOptionsSortingChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    // console.debug('sorting#onchange', viewResourcesSorting, '=>', event.target.value)\n    setViewResourcesSorting(event.target.value as ResourceSelectionModalViewOptionSorting)\n  }\n\n  function handleSelectAllClick() {\n    // select all available resources\n    setSelectedResourceIDs(availableResources)\n  }\n\n  function handleDeselectAllClick() {\n    // deselect all resources\n    setSelectedResourceIDs([])\n  }\n\n  function handleSelectVisibleClick() {\n    // select only visible resources (i.e. resources left after fuzzy filtering)\n    setSelectedResourceIDs(filteredResources.map((resource) => resource.id))\n  }\n\n  function handleResourceOnSelectClick(resource: Resource, selected: boolean) {\n    changeSelectedResourceIDs(getResourceIDs([resource]), selected)\n  }\n\n  function handleGroupedResourcesOnSelectAllClick(resourcesInGroup: Resource[]) {\n    changeSelectedResourceIDs(getResourceIDs(resourcesInGroup), true)\n  }\n\n  function handleGroupedResourcesOnDeselectAllClick(resourcesInGroup: Resource[]) {\n    changeSelectedResourceIDs(getResourceIDs(resourcesInGroup), false)\n  }\n\n  // --------------------------------------------------------------\n  // rendering\n\n  function shouldResourceBeShown(resource: Resource) {\n    // invisibile resources should not be shown\n    if (!availableResources.includes(resource.id)) return false\n\n    // check view mode\n    if (viewResourcesVisibility === 'selected') {\n      // hide all not-selected resources\n      if (\n        // resource self is not selected\n        !selectedResourceIDs.includes(resource.id) &&\n        // AND none of its children are selected\n        !isResourceAvailableDueToSubResource(resource, (subResource: Resource) =>\n          selectedResourceIDs.includes(subResource.id)\n        )\n      ) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  function renderResources() {\n    if (viewResourcesGrouping === 'institution') {\n      return Object.entries(resourcesGroupedByInstitute)\n        .toSorted(([a], [b]) => {\n          const aScore = groupScore.get(a)\n          const bScore = groupScore.get(b)\n          if (aScore === bScore) return 0\n          if (aScore === undefined) return 1\n          if (bScore === undefined) return -1\n          return aScore - bScore\n        })\n        .map(\n          ([institution, { expanded, resources }]: [\n            string,\n            { expanded: boolean; resources: Resource[] }\n          ]) => (\n            <GroupedResources\n              title={\n                <>\n                  <i dangerouslySetInnerHTML={{ __html: bankIcon }} /> {institution}\n                </>\n              }\n              resources={resources}\n              selectedResourceIDs={selectedResourceIDs}\n              resourceScores={filteredResourceScores}\n              highlightings={filteredResourcesHighlights}\n              expanded={expanded}\n              shouldBeShown={shouldResourceBeShown}\n              onSelectAllClick={handleGroupedResourcesOnSelectAllClick}\n              onExpandToggleClick={(expanded) => {\n                console.debug('expanded', expanded, institution)\n                setResourcesGroupedByInstitute({\n                  ...resourcesGroupedByInstitute,\n                  [institution]: {\n                    ...resourcesGroupedByInstitute[institution],\n                    expanded: expanded,\n                  },\n                })\n              }}\n              onDeselectAllClick={handleGroupedResourcesOnDeselectAllClick}\n              onSelectClick={handleResourceOnSelectClick}\n              languageCodeToName={languageCodeToName}\n              localeForInfos={locale}\n              key={institution}\n            />\n          )\n        )\n    }\n    if (viewResourcesGrouping === 'language') {\n      return Object.entries(resourcesGroupedByLanguage)\n        .toSorted(([a], [b]) => {\n          const aScore = groupScore.get(a)\n          const bScore = groupScore.get(b)\n          if (aScore === bScore) return 0\n          if (aScore === undefined) return 1\n          if (bScore === undefined) return -1\n          return aScore - bScore\n        })\n        .map(\n          ([language, { expanded, resources }]: [\n            string,\n            { expanded: boolean; resources: Resource[] }\n          ]) => (\n            <GroupedResources\n              title={\n                <>\n                  <i dangerouslySetInnerHTML={{ __html: translateIcon }} />{' '}\n                  {languageCodeToName(language)} [{language}]\n                </>\n              }\n              resources={resources}\n              selectedResourceIDs={selectedResourceIDs}\n              resourceScores={filteredResourceScores}\n              highlightings={filteredResourcesHighlights}\n              expanded={expanded}\n              shouldBeShown={shouldResourceBeShown}\n              onSelectAllClick={handleGroupedResourcesOnSelectAllClick}\n              onExpandToggleClick={(expanded) =>\n                (resourcesGroupedByLanguage[language].expanded = expanded)\n              }\n              onDeselectAllClick={handleGroupedResourcesOnDeselectAllClick}\n              onSelectClick={handleResourceOnSelectClick}\n              languageCodeToName={languageCodeToName}\n              localeForInfos={locale}\n              key={language}\n            />\n          )\n        )\n    }\n    return filteredResources\n      .filter((resource) => !resource.rootResourceId)\n      .map((resource) => (\n        <ResourceSelector\n          resource={resource}\n          selectedResourceIDs={selectedResourceIDs}\n          highlighting={filteredResourcesHighlights.get(resource.id)}\n          highlightings={filteredResourcesHighlights}\n          shouldBeShown={shouldResourceBeShown}\n          onSelectClick={handleResourceOnSelectClick}\n          languageCodeToName={languageCodeToName}\n          localeForInfos={locale}\n          key={resource.id}\n        />\n      ))\n  }\n\n  return (\n    <Modal\n      id=\"resource-selection-modal\"\n      show={show}\n      onHide={() => handleClose('close')}\n      size=\"xl\"\n      fullscreen=\"xl-down\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{t('search.resourcesModal.title')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"px-0\">\n        {/* resource viewing options */}\n        <Form className=\"px-3 pb-3 border-bottom\" onSubmit={(event) => event.preventDefault()}>\n          <Container>\n            <Row className=\"d-sm-flex row-gap-2 justify-content-around\">\n              <Col md={2} sm={6}>\n                <FloatingLabel label=\"View\" controlId=\"resource-view-options-visibility\">\n                  <Form.Select\n                    value={viewResourcesVisibility}\n                    onChange={handleViewOptionsVisibilityChange}\n                  >\n                    <option value=\"all\">All</option>\n                    <option value=\"selected\">Selected only</option>\n                  </Form.Select>\n                </FloatingLabel>\n              </Col>\n              <Col md={2} sm={6}>\n                <FloatingLabel label=\"Group by\" controlId=\"resource-view-options-grouping\">\n                  <Form.Select\n                    value={viewResourcesGrouping}\n                    onChange={handleViewOptionsGroupingChange}\n                  >\n                    <option value=\"resource\">(Resource)</option>\n                    <option value=\"institution\">Institution</option>\n                    <option value=\"language\">Language</option>\n                  </Form.Select>\n                </FloatingLabel>\n              </Col>\n              <Col md={2} sm={6}>\n                <FloatingLabel label=\"Sort by\" controlId=\"resource-view-options-sorting\">\n                  <Form.Select\n                    value={viewResourcesSorting}\n                    onChange={handleViewOptionsSortingChange}\n                    disabled={viewResourcesGrouping !== 'resource' || filter.trim() !== ''}\n                  >\n                    <option value=\"title-up\">Title (up)</option>\n                    <option value=\"title-down\">Title (down)</option>\n                    <option value=\"institution-up\">Institution (up)</option>\n                    <option value=\"institution-down\">Institution (down)</option>\n                  </Form.Select>\n                </FloatingLabel>\n              </Col>\n              <Col md={3} sm={12}>\n                <FloatingLabel\n                  label=\"Resource filter query\"\n                  controlId=\"resource-view-options-filter\"\n                >\n                  <DebouncedFuzzySearchInput\n                    value={filter}\n                    onChange={(value) => setFilter(value)}\n                  />\n                </FloatingLabel>\n              </Col>\n              <Col\n                md={3}\n                sm={12}\n                className=\"gap-1 d-inline-flex column-gap-2 justify-content-evenly\"\n              >\n                <Button onClick={handleSelectAllClick}>Select all</Button>\n                <Button\n                  onClick={handleSelectVisibleClick}\n                  disabled={viewResourcesVisibility !== 'all' || filter.trim() === ''}\n                >\n                  Select visible\n                </Button>\n                <Button onClick={handleDeselectAllClick}>Deselect all</Button>\n              </Col>\n            </Row>\n            {resourceInfoLanguagesGrouped.size > 1 && (\n              <Form.Group as={Row} controlId=\"resource-info-language\" className=\"mt-2\">\n                <Form.Label column sm=\"auto\" style={{ fontSize: '0.875rem' }}>\n                  {t('search.resourcesModal.labelChangeResourceInfoLanguage')}\n                </Form.Label>\n                <Col sm=\"auto\">\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name=\"resource-info-languages\"\n                    defaultValue={locale}\n                    onChange={(language) => setLocale(language)}\n                  >\n                    {Array.from(resourceInfoLanguagesGrouped.entries())\n                      .toSorted()\n                      .map(([language, amount]) => (\n                        <ToggleButton\n                          size=\"sm\"\n                          key={language}\n                          id={`resource-info-languages-${language}`}\n                          value={language}\n                          variant=\"secondary\"\n                          title={t('search.resourcesModal.buttonChangeResourceInfoLanguageTitle', {\n                            count: amount,\n                            language,\n                            languageName: langNames.of(language),\n                          })}\n                        >\n                          {langNames.of(language)} <sup>{language}</sup>\n                        </ToggleButton>\n                      ))}\n                  </ToggleButtonGroup>\n                </Col>\n              </Form.Group>\n            )}\n          </Container>\n        </Form>\n        {/* info */}\n        <p className=\"m-4 mb-0\">\n          {t('search.resourcesModal.msgResourcesSelected', {\n            count: resourcesInfo.selected,\n            total: resourcesInfo.visible,\n            available: resourcesInfo.available,\n            context: resourcesInfo.available !== resourcesInfo.visible ? 'available' : null,\n          })}\n        </p>\n        {/* resources */}\n        <Container className=\"px-3 pt-3\">{renderResources()}</Container>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => handleClose('confirm')}>\n          {t('search.resourcesModal.buttonConfirm')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ResourceSelectionModal\n","import { useState } from 'react'\n\n// export default function useToggleOnce<T>(\n//   value: T | (() => T)\n// ): [T, React.Dispatch<React.SetStateAction<T>>] {\n//   const [state, setState] = useState(value)\n\n//   const toggleOnce: React.Dispatch<React.SetStateAction<T>> = (value: React.SetStateAction<T>) => {\n//     // use state/ref to check if triggered / or even a local var?\n//     setState(value)\n//   }\n//   return [state, toggleOnce]\n// }\n\nexport default function useFlipOnceTrue(): [boolean, () => void] {\n  const [state, setState] = useState(false)\n\n  const flipOnce = () => {\n    if (state !== true) setState(true)\n  }\n  return [state, flipOnce]\n}\n","import { useCallback, useMemo } from 'react'\nimport {\n  createSearchParams,\n  useLocation,\n  useNavigate,\n  type SetURLSearchParams,\n  type URLSearchParamsInit,\n} from 'react-router'\n\nexport default function useSearchParamsFromHash(): [URLSearchParams, SetURLSearchParams] {\n  const routerNavigate = useNavigate()\n  const { hash } = useLocation()\n\n  const searchParams = useMemo(() => {\n    return new URLSearchParams(hash.substring(1))\n  }, [hash])\n\n  const setSearchParams = useCallback(\n    (nextInit?: URLSearchParamsInit | ((prev: URLSearchParams) => URLSearchParamsInit)) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === 'function' ? nextInit(new URLSearchParams(searchParams)) : nextInit\n      )\n      const newHash = !newSearchParams.entries().next().done ? `#${newSearchParams}` : ''\n\n      if (hash !== newHash) {\n        routerNavigate({ hash: newHash })\n      }\n    },\n    [searchParams, hash, routerNavigate]\n  )\n  return [searchParams, setSearchParams]\n}\n","import { type AxiosInstance } from 'axios'\nimport React, { lazy, Suspense, useCallback, useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useSearchParams } from 'react-router'\n\nimport ContentEditable from '@/components/ContentEditable'\nimport LanguageModal, { type LanguageModelCloseActions } from '@/components/LanguageModal'\nimport QuerySuggestionsModal from '@/components/QuerySuggestionsModal'\nimport ResourceSelectionModal from '@/components/ResourceSelectionModal'\nimport useFlipOnceTrue from '@/hooks/useFlipOnceTrue'\nimport useSearchParamsFromHash from '@/hooks/useSearchParamsFromHash'\nimport { type Resource } from '@/utils/api'\nimport {\n  DEFAULT_QUERY_TYPE,\n  NUMBER_OF_RESULTS,\n  QUERY_TYPE_MAP,\n  QUERY_TYPES,\n  QUERY_TYPES_WITH_BUILDER_SUPPORT,\n  type NumberOfResults,\n  type QueryTypeID,\n  type QueryTypeIDForQueryBuilder,\n} from '@/utils/constants'\nimport { getAvailableResourceIDs, getInstitutions } from '@/utils/resources'\nimport {\n  DEFAULT_RESOURCE_VIEW_GROUPING,\n  DEFAULT_SEARCH_LANGUAGE_FILTER,\n  languageCodeToName,\n  MULTIPLE_LANGUAGE_CODE,\n  type LanguageCode2NameMap,\n  type LanguageFilterOptions,\n  type ResourceSelectionModalViewOptionGrouping,\n} from '@/utils/search'\nimport { type ToastMessage } from './utils'\n\n// SVG, for inverted/specific colors: https://stackoverflow.com/a/52041765/9360161\nimport balloonIcon from 'bootstrap-icons/icons/balloon.svg?raw'\nimport gearIcon from 'bootstrap-icons/icons/gear-fill.svg?raw'\nimport highlightsIcon from 'bootstrap-icons/icons/highlights.svg?raw'\nimport magicIcon from 'bootstrap-icons/icons/magic.svg?raw'\nimport searchIcon from 'bootstrap-icons/icons/search.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// lazy components\n\nconst QueryBuilderModal = /*#__PURE__*/ lazy(() => import('@/components/QueryBuilder'))\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface SearchProps {\n  axios: AxiosInstance\n}\n\nexport interface SearchInputProps {\n  resources: Resource[]\n  availableResources: string[] | null\n  selectedResources: string[] | null\n  languages?: LanguageCode2NameMap\n  onSearch: (searchData: SearchData) => void\n  onShowToast?: (toast: ToastMessage) => void\n  hasSearch: boolean\n  disabled?: boolean\n}\n\nexport interface SearchData {\n  language: string\n  languageFilter: LanguageFilterOptions\n  queryType: QueryTypeID\n  query: string\n  resourceIDs: string[]\n  numberOfResults: NumberOfResults\n}\n\nexport interface queryError {\n  msg: string\n  details: unknown\n}\n\n// --------------------------------------------------------------------------\n\nfunction getQueryFromSearchParams(params: URLSearchParams, fallback: string = '') {\n  const newQuery = params.get('query')\n  if (newQuery) {\n    return newQuery\n  }\n  return fallback\n}\n\nfunction getQueryTypeFromSearchParams(params: URLSearchParams, fallback: QueryTypeID = 'cql') {\n  const newQueryType = params.get('queryType')\n  if (newQueryType) {\n    if (QUERY_TYPES.find((qt) => qt.id === newQueryType) !== undefined) {\n      return newQueryType as QueryTypeID\n    }\n    console.warn('Found unsupported queryType in search params', newQueryType)\n  }\n  return fallback\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction SearchInput({\n  resources,\n  languages,\n  onSearch,\n  onShowToast,\n  availableResources: availableResourcesProps = null,\n  selectedResources: selectedResourcesProps = null,\n  hasSearch = false,\n  disabled = false,\n}: SearchInputProps) {\n  const { t } = useTranslation()\n  const [searchParams, setSearchParams] = useSearchParams()\n  const [hashSearchParams, setHashSearchParams] = useSearchParamsFromHash()\n\n  // input modals (trigger)\n  const [showResourceSelectionModal, setShowResourceSelectionModal] = useState(false)\n  const [showResourceSelectionModalGrouping, setShowResourceSelectionModalGrouping] =\n    useState<ResourceSelectionModalViewOptionGrouping>(DEFAULT_RESOURCE_VIEW_GROUPING)\n  const [showLanguageSelectionModal, setShowLanguageSelectionModal] = useState(false)\n  const [showQuerySuggestionsModal, setShowQuerySuggestionsModal] = useState(false)\n  const [showQueryBuilderModal, setShowQueryBuilderModal] = useState(false)\n  const [isLoadQueryBuilderModalTriggered, triggerLoadQueryBuilderModal] = useFlipOnceTrue()\n\n  // user search input states\n  const [language, setLanguage] = useState(MULTIPLE_LANGUAGE_CODE)\n  const [languageFilter, setLanguageFilter] = useState<LanguageFilterOptions>(\n    DEFAULT_SEARCH_LANGUAGE_FILTER\n  )\n\n  const [queryType, setQueryType] = useState<QueryTypeID>(\n    getQueryTypeFromSearchParams(searchParams, DEFAULT_QUERY_TYPE)\n  )\n\n  // resource IDs the user can select (based on pre-filtering and search language selection)\n  const [validResourceIDs, setValidResourceIDs] = useState<string[]>(availableResourcesProps ?? [])\n  // selected resource IDs for search\n  const [selectedResourceIDs, setSelectedResourceIDs] = useState<string[]>(\n    selectedResourcesProps ?? []\n  )\n\n  const [numberOfResults, setNumberOfResults] = useState<NumberOfResults>(NUMBER_OF_RESULTS[0])\n\n  const [query, setQuery] = useState(getQueryFromSearchParams(searchParams, ''))\n  // query input validation\n  const [queryError] = useState<queryError | null>(null)\n\n  // query input syntax highlighting\n  const [queryInputEnhanced, setQueryInputEnhanced] = useState(false)\n\n  // ------------------------------------------------------------------------\n  // data updates/computation\n\n  // to update modal on open\n  useEffect(() => {\n    setSelectedResourceIDs(selectedResourcesProps ?? [])\n  }, [selectedResourcesProps])\n\n  const getAvailableResourceIDsCallback = useCallback(\n    (resources: Resource[]) => {\n      const availableResourceIDs = getAvailableResourceIDs(\n        resources,\n        queryType,\n        languageFilter === 'byGuess' ? MULTIPLE_LANGUAGE_CODE : language\n      )\n      if (availableResourcesProps && availableResourcesProps.length > 0) {\n        // if updated from outside via props (e.g. restriction)\n        // TODO: needs testing\n        return availableResourceIDs.filter((rid) => availableResourcesProps.includes(rid))\n      }\n      return availableResourceIDs\n    },\n    [queryType, language, languageFilter, availableResourcesProps]\n  )\n\n  useEffect(() => {\n    const availableResourceIDs = getAvailableResourceIDsCallback(resources)\n    console.debug(\n      'Update resource availability',\n      // { queryType, language, languageFilter },\n      availableResourceIDs\n    )\n    // TODO: evaluate xAggregationContext\n    setValidResourceIDs(availableResourceIDs)\n\n    // TODO: handle case where availableResourceIDs is empty on init? (maybe due to props usage)\n    // setSelectedResourceIDs((resourceIDs) =>\n    //   resourceIDs === null\n    //     ? // initialization, if `null` then check available resources\n    //       availableResourceIDs.length > 0\n    //       ? // only update when we have available resources\n    //         availableResourceIDs\n    //       : // otherwise keep `null` to \"delay\" init for full default selection\n    //         null\n    //     : // incremental update\n    //       resourceIDs.filter((id) => availableResourceIDs.includes(id))\n    // )\n    // we update from outside (Search.tsx#useEffect#data)\n    setSelectedResourceIDs((resourceIDs) =>\n      resourceIDs.filter((id) => availableResourceIDs.includes(id))\n    )\n  }, [resources, getAvailableResourceIDsCallback])\n\n  // ------------------------------------------------------------------------\n\n  const doSearch = useCallback(() => {\n    const searchParams = {\n      language: language,\n      languageFilter: languageFilter,\n      queryType: queryType,\n      query: query,\n      resourceIDs: selectedResourceIDs ?? [],\n      numberOfResults: numberOfResults,\n    }\n    console.debug('search for', searchParams)\n\n    // validate and cancel if necessary\n    if (searchParams.query === '') return\n    if (searchParams.resourceIDs.length === 0) return\n\n    // TODO: query validation\n    // setQueryError({ msg: 'something went wrong (sad face emoji)', details: {} })\n\n    onSearch(searchParams)\n  }, [language, languageFilter, numberOfResults, onSearch, query, queryType, selectedResourceIDs])\n\n  useEffect(() => {\n    console.debug('searchParams', searchParams)\n\n    if (searchParams) {\n      setQuery((query) => getQueryFromSearchParams(searchParams, query))\n      setQueryType((queryType) => getQueryTypeFromSearchParams(searchParams, queryType))\n\n      const aggregationContext = searchParams.get('x-aggregation-context')\n      if (!aggregationContext) {\n        // wait until the aggregation context parameter has been evaluated (in another/parent component) (and then removed to trigger a reevaluation here)\n        // and only then trigger possible automatic search if requested\n        // this will (hopefully delay long enough to pre-select resources first before starting a search)\n        const mode = searchParams.get('mode')\n        if (mode) {\n          if (mode === 'search') {\n            console.log('Trigger search due to URL parameter!')\n            doSearch()\n          }\n          // setSearchParams((params) => (params.delete('mode'), params))\n          searchParams.delete('mode')\n          setSearchParams(searchParams)\n        }\n      }\n    }\n  }, [searchParams, setSearchParams, doSearch])\n\n  // update URL with query params\n  useEffect(() => {\n    if (searchParams.get('query') === query) return\n    // setSearchParams((params) => (params.set('query', query), params))\n    searchParams.set('query', query)\n    setSearchParams(searchParams)\n  }, [query, searchParams, setSearchParams])\n  useEffect(() => {\n    if (searchParams.get('queryType') === queryType) return\n    // setSearchParams((params) => (params.set('queryType', queryType), params))\n    searchParams.set('queryType', queryType)\n    setSearchParams(searchParams)\n  }, [queryType, searchParams, setSearchParams])\n\n  // some triggers for UI elements\n  useEffect(() => {\n    console.debug('hashSearchParams', hashSearchParams)\n\n    if (import.meta.env.FEATURE_QUERY_BUILDER) {\n      if (hashSearchParams.has('openQueryBuilder')) {\n        console.debug(\"Trigger Query Builder open due to 'openQueryBuilder' search param\")\n        triggerLoadQueryBuilderModal()\n        setShowQueryBuilderModal(true)\n\n        hashSearchParams.delete('openQueryBuilder')\n        setHashSearchParams(hashSearchParams)\n      }\n    }\n  }, [hashSearchParams, setHashSearchParams, triggerLoadQueryBuilderModal])\n\n  // ------------------------------------------------------------------------\n\n  const numberOfSelectedInstitutions = getInstitutions(resources, selectedResourceIDs ?? []).length\n\n  const hasResourcesForQueryFCS =\n    resources.find((resource) =>\n      resource.searchCapabilitiesResolved.includes('ADVANCED_SEARCH')\n    ) !== undefined\n  const hasResourcesForQueryLex =\n    resources.find((resource) => resource.searchCapabilitiesResolved.includes('LEX_SEARCH')) !==\n    undefined\n\n  const showQueryBuilderButton = QUERY_TYPES_WITH_BUILDER_SUPPORT.includes(\n    queryType as QueryTypeIDForQueryBuilder\n  )\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleChangeQueryType(eventKey: string | null) {\n    if (!eventKey) return\n    setQueryType(eventKey as QueryTypeID)\n  }\n\n  function handleChangeNumberOfResults(event: React.ChangeEvent<HTMLSelectElement>) {\n    let value = Number.parseInt(event.target.value)\n    // input validation\n    if (value < 10) value = 10\n    if (value > 250) value = 250\n    if (!(NUMBER_OF_RESULTS as unknown as number[]).includes(value)) {\n      console.warn('Invalid number of results?!', { valid: NUMBER_OF_RESULTS, value })\n    }\n    setNumberOfResults(value as NumberOfResults)\n  }\n\n  function handleChangeLanguageSelection({\n    language,\n    filter,\n    action,\n  }: {\n    language: string\n    filter: LanguageFilterOptions\n    action: LanguageModelCloseActions\n  }) {\n    console.debug('onModalClose', { language, filter, action })\n    // first close the modal\n    setShowLanguageSelectionModal(false)\n    // if 'abort' do nothing\n    if (action === 'abort') return\n    // process user inputs\n    setLanguage(language)\n    setLanguageFilter(filter)\n  }\n\n  function handleChangeResourceSelection({\n    resourceIDs,\n    action,\n  }: {\n    resourceIDs: string[]\n    action: string\n  }) {\n    console.debug('onModalClose', { resourceIDs, action })\n    // first close the modal\n    setShowResourceSelectionModal(false)\n    // if 'abort' do nothing\n    if (action === 'abort') return\n    // process user inputs\n    setSelectedResourceIDs(resourceIDs)\n  }\n\n  function handleChangeQuerySuggestion({\n    query,\n    queryType,\n    action,\n  }: {\n    query?: string\n    queryType?: QueryTypeID\n    action: string\n  }) {\n    console.debug('onModalClose', { query, queryType, action })\n    // first close the modal\n    setShowQuerySuggestionsModal(false)\n    // if 'abort' do nothing\n    if (action === 'abort') return\n    // if 'close' (ESC / x button) then also do nothing\n    if (action === 'close') return\n    // if query/queryType is empty, do nothing\n    if (!query || !queryType) return\n    // process user inputs\n    setQueryType(queryType)\n    setQuery(query)\n  }\n\n  function handleChangeQueryBuilderQuery({\n    query,\n    validResources,\n    action,\n  }: {\n    query: string\n    validResources: string[]\n    action: string\n  }) {\n    console.debug('onModalClose', { query, validResources, action })\n    // first close the modal\n    setShowQueryBuilderModal(false)\n    // if 'abort' do nothing\n    if (action === 'abort') return\n    // if 'close' (ESC / x button) then also do nothing\n    if (action === 'close') return\n\n    // explicitely wait for confirm\n    // process user inputs\n    setQuery(query)\n\n    // show info to users\n    // TODO: make diff of selected queries?\n    // a bit basic but should be ok, resource selection is unlikely to increase\n    if (selectedResourceIDs.length !== validResources.length) {\n      onShowToast?.({\n        title: t('search.toasts.searchInput.title'),\n        body: (\n          <>\n            <p>{t('search.toasts.searchInput.msgResourcesChangedDueToQuery')}</p>\n            <p>\n              {t('search.toasts.searchInput.msgResourcesAmountChanged', {\n                before: selectedResourceIDs.length,\n                after: validResources.length,\n              })}\n            </p>\n            <hr />\n            <Button onClick={() => setSelectedResourceIDs(selectedResourceIDs)}>\n              {t('search.toasts.searchInput.buttonRevertSelection')}\n            </Button>\n          </>\n        ),\n        variant: 'info',\n        delay: 7_000,\n      })\n    }\n    // update selected queries\n    setSelectedResourceIDs(validResources)\n  }\n\n  function handleQueryChange(value: string) {\n    // TODO: maybe input validation / syntax highlighting etc.\n    setQuery(value)\n\n    // TODO: demo\n    // setQueryError(\n    //   value.length % 2 === 1\n    //     ? { msg: 'even number of characters', details: null }\n    //     : null\n    // )\n  }\n\n  function handleSearchSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    doSearch()\n  }\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  function renderSelectedResourcesMsg() {\n    const selected = (selectedResourceIDs ?? []).length\n    const context =\n      resources.length === selected || validResourceIDs.length === selected ? 'all' : null\n    return t('search.searchInput.buttonSelectedResources', { count: selected, context })\n  }\n\n  return (\n    <search id=\"fcs-query\">\n      {/* search input form */}\n      <Form noValidate onSubmit={handleSearchSubmit}>\n        <InputGroup size={!hasSearch ? 'lg' : undefined} hasValidation>\n          <Button\n            variant=\"outline-secondary\"\n            type=\"button\"\n            id=\"fcs-search-query-suggestions-button\"\n            aria-label={t('search.searchInput.buttonOpenQuerySuggestions')}\n            onClick={() => setShowQuerySuggestionsModal(true)}\n          >\n            <i dangerouslySetInnerHTML={{ __html: balloonIcon }} aria-hidden=\"true\" />\n          </Button>\n          {/* @ts-expect-error: typing does not work for onChange handler, is correct so */}\n          <Form.Control\n            placeholder=\"Elephant\"\n            aria-label={t('search.searchInput.inputQueryAriaLabel')}\n            aria-describedby=\"fcs-search-input-button\"\n            className=\"text-center search-query-input\"\n            disabled={disabled}\n            aria-disabled={disabled}\n            value={query}\n            isInvalid={!!queryError} // TODO: add syntax validation for more complex queries\n            {...(queryInputEnhanced\n              ? {\n                  as: ContentEditable,\n                  queryType: queryType,\n                  onChange: handleQueryChange,\n                }\n              : {\n                  onChange: (event) => handleQueryChange(event.target.value),\n                })}\n          />\n          {import.meta.env.FEATURE_QUERY_BUILDER && showQueryBuilderButton && (\n            <Button\n              id=\"fcs-search-input-query-builder-button\"\n              variant=\"outline-secondary\"\n              aria-label={t('search.searchInput.buttonOpenQueryBuilderAriaLabel')}\n              className=\"border-end-0 d-none d-md-block\"\n              onClick={() => {\n                triggerLoadQueryBuilderModal()\n                setShowQueryBuilderModal(true)\n              }}\n            >\n              <i dangerouslySetInnerHTML={{ __html: magicIcon }} aria-hidden=\"true\" />\n            </Button>\n          )}\n          <ToggleButton\n            id=\"fcs-search-input-enhanced-button\"\n            value=\"enhance-query\" // just a dummy value\n            type=\"checkbox\"\n            checked={queryInputEnhanced}\n            onChange={() => setQueryInputEnhanced((isChecked) => !isChecked)}\n            variant=\"outline-secondary\"\n            aria-label={t('search.searchInput.buttonEnhanceQueryAriaLabel', {\n              context: queryInputEnhanced ? 'enabled' : 'disabled',\n            })}\n            className=\"d-flex align-items-center border-end-0\"\n          >\n            <i dangerouslySetInnerHTML={{ __html: highlightsIcon }} aria-hidden=\"true\" />\n          </ToggleButton>\n          <Button\n            variant=\"outline-primary\"\n            type=\"submit\"\n            id=\"fcs-search-input-button\"\n            disabled={disabled || query.trim().length === 0}\n            aria-disabled={disabled}\n            aria-label={t('search.searchInput.buttonSearchAriaLabel')}\n          >\n            {/* TODO: visually-hidden span with description? */}\n            <i\n              dangerouslySetInnerHTML={{ __html: searchIcon }}\n              aria-hidden=\"true\"\n              className=\"d-inline d-md-none\"\n            />\n            <span className=\"d-none d-md-inline\">{t('search.searchInput.buttonSearch')}</span>\n          </Button>\n          <Form.Control.Feedback type=\"invalid\">{queryError?.msg}</Form.Control.Feedback>\n        </InputGroup>\n        <div id=\"fcs-query-filters\" className=\"mt-2 mb-3 lh-lg text-center\">\n          <Trans\n            i18nKey=\"search.searchInput.filtersSummary\"\n            components={[\n              <Dropdown\n                className=\"d-inline-block\"\n                onSelect={handleChangeQueryType}\n                aria-disabled={disabled}\n                aria-label={t('search.searchInput.dropdownQueryTypeAriaLabel')}\n              >\n                <Dropdown.Toggle\n                  size=\"sm\"\n                  variant=\"outline-dark\"\n                  className=\"mx-1 pe-2 no-arrow\"\n                  disabled={disabled}\n                  aria-disabled={disabled}\n                  style={\n                    QUERY_TYPE_MAP[queryType]\n                      ? {\n                          '--color': QUERY_TYPE_MAP[queryType].color,\n                        }\n                      : {}\n                  }\n                >\n                  {t(`queryTypes.${queryType}.nameShort`, {\n                    ns: 'common',\n                    defaultValue: QUERY_TYPE_MAP[queryType]?.searchLabel ?? queryType.toUpperCase(),\n                  })}{' '}\n                  <i dangerouslySetInnerHTML={{ __html: gearIcon }} aria-hidden=\"true\" />\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {QUERY_TYPES.filter(\n                    (info) =>\n                      info.id === 'cql' ||\n                      (info.id === 'fcs' && hasResourcesForQueryFCS) ||\n                      (info.id === 'lex' && hasResourcesForQueryLex)\n                  ).map((info) => (\n                    <Dropdown.Item\n                      as=\"button\"\n                      eventKey={info.id}\n                      key={info.id}\n                      onClick={(event) => event.preventDefault()}\n                      style={{\n                        '--color': info.color,\n                        background: 'color-mix(in srgb, var(--color) 50%, transparent)',\n                      }}\n                    >\n                      {t(`queryTypes.${info.id}.nameLong`, {\n                        ns: 'common',\n                        defaultValue: info.name,\n                      })}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>,\n              <Button\n                size=\"sm\"\n                variant=\"outline-dark\"\n                className=\"mx-1 pe-2\"\n                disabled={disabled}\n                aria-disabled={disabled}\n                onClick={() => {\n                  setShowResourceSelectionModalGrouping('resource')\n                  setShowResourceSelectionModal(true)\n                }}\n              >\n                {renderSelectedResourcesMsg()}{' '}\n                <i dangerouslySetInnerHTML={{ __html: gearIcon }} aria-hidden=\"true\" />\n              </Button>,\n              <Button\n                size=\"sm\"\n                variant=\"outline-dark\"\n                className=\"mx-1 pe-2\"\n                disabled={disabled}\n                aria-disabled={disabled}\n                onClick={() => {\n                  setShowResourceSelectionModalGrouping('institution')\n                  setShowResourceSelectionModal(true)\n                }}\n              >\n                {t('search.searchInput.buttonSelectedInstitutions', {\n                  count: numberOfSelectedInstitutions,\n                })}{' '}\n                <i dangerouslySetInnerHTML={{ __html: gearIcon }} aria-hidden=\"true\" />\n              </Button>,\n              <Button\n                size=\"sm\"\n                variant=\"outline-dark\"\n                className=\"mx-1 pe-2\"\n                onClick={() => setShowLanguageSelectionModal(true)}\n                disabled={disabled}\n                aria-disabled={disabled}\n              >\n                {languageCodeToName(language, languages ?? {}, {\n                  defaultAnyLanguage: t('languageCodeToName.any', { ns: 'common' }),\n                  defaultUnknownLanguage: t('languageCodeToName.unknown', { ns: 'common' }),\n                })}{' '}\n                <i dangerouslySetInnerHTML={{ __html: gearIcon }} aria-hidden=\"true\" />\n              </Button>,\n              <Form.Select\n                size=\"sm\"\n                className=\"d-inline-block w-auto mx-1\"\n                onChange={handleChangeNumberOfResults}\n                value={numberOfResults}\n                aria-label={t('search.searchInput.selectNumberOfSearchResultsAriaLabel')}\n                disabled={disabled}\n                aria-disabled={disabled}\n              >\n                {NUMBER_OF_RESULTS.map((value) => (\n                  <option value={value} key={value}>\n                    {value}\n                  </option>\n                ))}\n              </Form.Select>,\n            ]}\n          />\n        </div>\n      </Form>\n\n      {/* search input modals */}\n      <LanguageModal\n        languages={languages}\n        resources={resources}\n        searchLanguage={language}\n        show={showLanguageSelectionModal}\n        onModalClose={handleChangeLanguageSelection}\n      />\n      <ResourceSelectionModal\n        resources={resources}\n        languages={languages}\n        availableResources={validResourceIDs}\n        selectedResources={selectedResourceIDs ?? []}\n        show={showResourceSelectionModal}\n        showGrouping={showResourceSelectionModalGrouping}\n        onModalClose={handleChangeResourceSelection}\n      />\n      {/* query suggestions modal */}\n      <QuerySuggestionsModal\n        queryTypes={[queryType]} // TODO: or show all always?\n        show={showQuerySuggestionsModal}\n        onModalClose={handleChangeQuerySuggestion}\n      />\n      {/* query builder modal */}\n      {import.meta.env.FEATURE_QUERY_BUILDER &&\n        QUERY_TYPES_WITH_BUILDER_SUPPORT.includes(queryType as QueryTypeIDForQueryBuilder) &&\n        isLoadQueryBuilderModalTriggered && (\n          // TODO: some fallback handling\n          // NOTE: that translation rsources might also be loading ...\n          <Suspense\n            fallback={\n              <>\n                {t('loading', {\n                  ns: 'querybuilder',\n                  defaultValue: t('generic.loadingComponent', { ns: 'common' }),\n                })}\n              </>\n            }\n          >\n            <QueryBuilderModal\n              query={query}\n              queryType={queryType as QueryTypeIDForQueryBuilder}\n              resources={resources}\n              selectedResources={selectedResourceIDs}\n              show={showQueryBuilderModal}\n              onModalClose={handleChangeQueryBuilderQuery}\n            />\n          </Suspense>\n        )}\n    </search>\n  )\n}\n\nexport default SearchInput\n","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\nimport { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { useTranslation } from 'react-i18next'\n\nimport { useAxios } from '@/providers/AxiosContext'\n// import { useSearchParams } from '@/providers/SearchParamsContext'\nimport {\n  getSearchResultsMetaOnlyForResource,\n  postSearchMoreResults,\n  type ResourceSearchResultMetaOnly,\n} from '@/utils/api'\n// import { trackSiteSearch } from '@/utils/matomo'\n\nimport threeDotsIcon from 'bootstrap-icons/icons/three-dots.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface LoadMoreResultsButtonProps {\n  searchId: string\n  resourceId: string\n  numberOfResults: number\n  pollDelay?: number\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction LoadMoreResultsButton({\n  searchId,\n  resourceId,\n  numberOfResults,\n  pollDelay = 1500,\n}: LoadMoreResultsButtonProps) {\n  const { t } = useTranslation()\n  const axios = useAxios()\n  const queryClient = useQueryClient()\n\n  const [isPolling, setIsPolling] = useState(false)\n\n  // request more results for one resource\n  const {\n    isPending: isPendingRequesting,\n    mutate,\n    reset,\n  } = useMutation({\n    mutationFn: postSearchMoreResults.bind(null, axios, searchId, { resourceId, numberOfResults }),\n    mutationKey: ['search-result-load-more', searchId, resourceId],\n    onSuccess: async (data) => {\n      // console.debug('[onSuccess]', { searchId, resourceId }, { data, variables, context })\n\n      // console.debug('request more results', { isPolling, searchId, resourceId, searchIdNewButSame: data, isPendingRequesting, isErrorRequesting })\n      if (data !== undefined && searchId !== data) {\n        console.warn('SearchIDs should be the same?!', {\n          searchId,\n          searchIdNewButSame: data,\n          resourceId,\n        })\n      }\n\n      // polling (we do here ourselves)\n      // TODO: unsure about removeQueries / resetQueries, required to completely clear state\n      await queryClient.invalidateQueries({ queryKey: ['search-results', searchId, resourceId] })\n      setIsPolling(true)\n    },\n  })\n\n  // poll for data ready\n  pollDelay ??= 1500\n  const {\n    data: dataPolling,\n    isLoading: isLoadingPolling,\n    isFetching: isFetchingPolling,\n  } = useQuery<ResourceSearchResultMetaOnly>({\n    queryKey: ['search-results', searchId, resourceId],\n    queryFn: getSearchResultsMetaOnlyForResource.bind(null, axios, searchId, resourceId),\n    enabled: isPolling,\n    refetchInterval(query) {\n      // console.debug('[refetchInterval]', { searchId, resourceId, query })\n      if (query.state.data && query.state.data.inProgress) return pollDelay\n      return false\n    },\n  })\n  // console.debug('polling for more results finished?', { dataPolling, isLoadingPolling, isErrorPolling, searchId, resourceId })\n\n  const isLoading = isPendingRequesting || isLoadingPolling || isFetchingPolling\n  const isFinished = !!dataPolling && !dataPolling.inProgress\n  const showSpinner = isLoading || isPolling\n\n  // console.debug('before render', { isPolling, isLoading, isFinished, searchId, resourceId })\n  if (isPolling && isFinished) {\n    if (isPolling) {\n      // disable polling, wait for next user interaction\n      setIsPolling(false)\n    }\n\n    // matomo tracking stuff\n    // if (import.meta.env.FEATURE_TRACKING_MATOMO) {\n    //   /* eslint-disable react-hooks/rules-of-hooks */\n    //   const { query, queryType } = useSearchParams()  // really unsure about here, maybe more on top?\n    //   const numResultsTotal = dataPolling.numberOfRecordsLoaded // TODO: will only contain current search result count\n    //   trackSiteSearch(query, queryType, numResultsTotal) // TODO: dimension with resourceID?\n    // }\n\n    // console.debug('Invalidate data for refresh ...', { searchId, resourceId, queryKey: ['search-result-details', searchId, resourceId] })\n    // details\n    queryClient.invalidateQueries({ queryKey: ['search-result-details', searchId, resourceId] })\n  }\n\n  async function handleLoadMoreClick() {\n    // console.log('[handleLoadMoreClick]', { searchId, resourceId })\n    // reset prior state, then trigger web request\n    reset()\n    mutate()\n  }\n\n  return (\n    <Button className=\"more-results-button\" disabled={showSpinner} onClick={handleLoadMoreClick}>\n      {showSpinner ? (\n        <Spinner animation=\"border\" className=\"d-block\" />\n      ) : (\n        <>\n          <i dangerouslySetInnerHTML={{ __html: threeDotsIcon }} />{' '}\n          {t('search.results.buttonLoadMore')}\n        </>\n      )}\n    </Button>\n  )\n}\n\nexport default LoadMoreResultsButton\n","import { useRef } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Table from 'react-bootstrap/Table'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nimport {\n  type AvailableLayer,\n  type Resource,\n  type AdvancedLayer,\n  type ResourceSearchResult,\n} from '@/utils/api'\n\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ViewAdvancedTabularProps {\n  data: ResourceSearchResult\n  resource?: Resource\n}\n\n// --------------------------------------------------------------------------\n\nfunction computeShortLayerIds(layerIds: string[], collapePlaceholder: string = '..') {\n  // tokenize URI by \"/\"\n  const layerIdTokens = layerIds.map((l) => l.split('/'))\n\n  // match each URI's tokens to check which are same so that we can collapse them\n  const maxTokens = Math.max(...layerIdTokens.map((l) => l.length))\n  const layerIdTokensIdentity = Array.from(Array(maxTokens).keys()).map(\n    (i) => new Set(layerIdTokens.map((l) => (l.length > i ? l[i] : false))).size === 1\n  )\n\n  // mapping to build short layer id (by collapePlaceholder/\"..\" and token indices that differ between URIs)\n  const layerIdTokenPattern = layerIdTokensIdentity.reduce(\n    (acc, val, idx, _, plh = collapePlaceholder ?? '..') =>\n      val ? (acc && acc[acc.length - 1] !== plh ? acc.concat([plh]) : acc) : acc.concat([idx]),\n    [] as (string | number)[]\n  )\n\n  // mapping of layer id to short layer id\n  const layerIdShort = layerIds\n    .map((lId) => [lId, lId.split('/')])\n    .map(\n      ([lId, lParts]) =>\n        [\n          lId,\n          layerIdTokenPattern\n            .map((v) => (typeof v === 'number' ? lParts[v] : v))\n            .join('/')\n            .replace(/\\/+$/, ''),\n        ] as [string, string]\n    )\n    .reduce((map, [id, idShort]) => map.set(id, idShort), new Map<string, string>())\n\n  return layerIdShort\n}\n\nfunction filterMainLayerIds(layers: AdvancedLayer[], resourceLayers?: Map<string, AvailableLayer>) {\n  // check if spans match the text\n  // TODO: can there be issues for non-latin characters?\n  // TODO: can there be issues for inclusive vs. exclusive indexing -- inclusive\n  // TODO: can there be issues with zero-based vs. one-based indexing -- one based\n  const layersWithMatchingSpanRanges = layers.filter(\n    (layer) =>\n      // exclusive end index\n      layer.spans.every(\n        (span) => span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0)\n      ) ||\n      // inclusive end index\n      layer.spans.every(\n        (span) =>\n          span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0) + 1\n      )\n    // zero-based indices with exclusive end index?\n    // || layer.spans.every(\n    //   (span) =>\n    //     span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0) - 1\n    // )\n  )\n\n  // no resource information, then everything is ok and we also can't sort\n  if (!resourceLayers) return layersWithMatchingSpanRanges\n\n  const mainLayerIds = layersWithMatchingSpanRanges\n    // first for multiple layers based on layer type\n    .filter((layer) => {\n      // no information about this layer, it might be ok?\n      const layerInfo = resourceLayers.get(layer.id)\n      if (!layerInfo) return true\n\n      // can only be one of text (word) to be valid (probably)\n      if (!['text', 'word'].includes(layerInfo.layerType.toLowerCase())) return false\n\n      return true\n    })\n    // sort based on layer infos (do they exist, has the layer no qualifier)\n    .toSorted((layerA, layerB) => {\n      const layerAInfo = resourceLayers.get(layerA.id)\n      const layerBInfo = resourceLayers.get(layerB.id)\n\n      // no information about this layer (order layers with information first)\n      if (layerAInfo === undefined || layerBInfo === undefined) {\n        if (layerAInfo === layerBInfo) return 0\n        // B is smaller/first if no information about A\n        if (layerAInfo === undefined) return 1\n        // A is smaller/first if no information about B\n        if (layerBInfo === undefined) return -1\n      }\n\n      // maybe sort \"word\" before \"text\" layer (legacy)\n      const layerAType = layerAInfo.layerType.toLowerCase()\n      const layerBType = layerBInfo.layerType.toLowerCase()\n      if (layerAType === 'word' || layerBType === 'word') {\n        if (layerAType === layerBType) return 0\n        // if A is \"word\", then smaller/first\n        if (layerAType === 'word') return -1\n        // if B is \"word\", then smaller/first\n        if (layerBType === 'word') return 1\n      }\n\n      // order layer without qualifier first\n      if (\n        (layerAInfo.qualifier !== null && layerAInfo.qualifier !== undefined) ||\n        (layerBInfo.qualifier !== null && layerBInfo.qualifier !== undefined)\n      ) {\n        // TODO: sort based on some layer qualifiers?\n        if (\n          layerAInfo.qualifier !== null &&\n          layerAInfo.qualifier !== undefined &&\n          layerBInfo.qualifier !== null &&\n          layerBInfo.qualifier !== undefined\n        )\n          return 0\n\n        // B is smaller/first if A has a qualifier\n        if (layerAInfo.qualifier !== null && layerAInfo.qualifier !== undefined) return 1\n        // A is smaller/first if B has a qualifier\n        if (layerBInfo.qualifier !== null && layerBInfo.qualifier !== undefined) return -1\n      }\n\n      return 0\n    })\n  return mainLayerIds\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ViewAdvancedTabular({ data, resource }: ViewAdvancedTabularProps) {\n  const ref = useRef(null)\n\n  // mapping of result layer id to resource layer description\n  const resourceLayers = resource?.availableLayers?.reduce(\n    (map, availLayer) => map.set(availLayer.resultId, availLayer),\n    new Map<string, AvailableLayer>()\n  )\n\n  function renderAdvancedLayers(layers: AdvancedLayer[]) {\n    // mapping of layer id to short layer id for display\n    // TODO: caching?\n    const layerIds = layers.map((layer) => layer.id)\n    const layerIdShort = computeShortLayerIds(layerIds)\n\n    const numSpans = Math.max(...layers.map((layer) => layer.spans.length))\n\n    const mainLayerIds = filterMainLayerIds(layers, resourceLayers)\n    const mainLayerId = mainLayerIds?.[0]?.id\n    // if (mainLayerId === undefined) {\n    //   console.warn('No main layer found!', { layers, resourceLayers, resourceId: resource?.id })\n    // } else if (mainLayerIds.length > 1) {\n    //   console.debug('multiple possible mainLayerIds', mainLayerIds, resourceLayers, resource?.id)\n    // }\n\n    // console.debug(\n    //   'layer span ranges',\n    //   resource?.id,\n    //   layers.map((layer) => ({\n    //     ...layer,\n    //     spans: layer.spans.map((span) => ({\n    //       ...span,\n    //       textlen: span.text?.length,\n    //       rangeDiff: (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0),\n    //     })),\n    //     startIndex: layer.spans?.[0].range?.[0],\n    //     variant: layer.spans.every((span) => span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0))\n    //       ? 'exclusive end index'\n    //       : layer.spans.every((span) => span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0) + 1)\n    //       ? 'inclusive end index'\n    //       : layer.spans.every((span) => span.text && span.text.length === (span.range?.[1] ?? 0) - (span.range?.[0] ?? 0) - 1)\n    //       ? 'exclusive end index and ?'\n    //       : layer.spans.reduce((acc, span) => acc + (span.text?.length ?? 0), 0) == (layer.spans[layer.spans.length - 1]?.range?.[1] ?? 0) - (layer.spans?.[0].range?.[0] ?? 0)\n    //       ? 'total length matches'\n    //       : '?',\n    //   }))\n    // )\n\n    layers.sort((layerA, layerB) => {\n      if (mainLayerId === undefined) return 0\n      if (layerA.id === mainLayerId) return -1\n      if (layerB.id === mainLayerId) return 1\n\n      if (!resourceLayers) return 0\n\n      return 0\n    })\n\n    // whether to show layer type and layer identifier columns\n    const showLayerInfoColumns = layerIds.length > 1\n\n    // TODO: maybe with column hover?\n    // see: https://ianobermiller.com/blog/highlight-table-row-column-react\n\n    return (\n      <Table hover responsive className=\"mb-0 results-plain\" style={{ width: 'unset' }}>\n        <thead className=\"visually-hidden\">\n          <tr>\n            {resourceLayers !== undefined && showLayerInfoColumns && (\n              <th scope=\"col\">Layer Type</th>\n            )}\n            {showLayerInfoColumns && <th scope=\"col\">Layer Identifier</th>}\n            {Array(numSpans)\n              .fill(null)\n              .map((_, index) => (\n                <th scope=\"col\" key={index}>\n                  Token\n                </th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {layers.map((layer) => (\n            <tr\n              key={layer.id}\n              className={(['text-nowrap'] as (string | null)[])\n                .concat([layer.id === mainLayerId && layers.length > 1 ? 'table-primary' : null])\n                .filter(Boolean)\n                .join(' ')}\n            >\n              {resourceLayers !== undefined && showLayerInfoColumns && (\n                <td scope=\"row\" className=\"text-uppercase\">\n                  {resourceLayers.get(layer.id)?.layerType}\n                </td>\n              )}\n              {showLayerInfoColumns && (\n                <td scope=\"row\" title={layer.id} className=\"border-end\">\n                  {layerIdShort.get(layer.id)}\n                </td>\n              )}\n              {layer.spans.map((span, index) => (\n                <td key={span.range?.join('-') ?? index}>\n                  {span.hit ? (\n                    <mark key={index}>\n                      <strong>{span.text}</strong>\n                    </mark>\n                  ) : (\n                    span.text\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    )\n  }\n\n  return (\n    <>\n      <Table responsive striped className=\"mb-0 results-plain\">\n        <thead className=\"visually-hidden\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">References</th>\n            <th scope=\"col\">Result with Annotation Layers</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.records\n            .filter((record) => record.adv !== null)\n            .map((record, index) => (\n              <tr key={`${record.pid ?? record.ref ?? data.resource.id}-${index}`}>\n                <td scope=\"row\" className=\"result-idx text-end text-muted d-none d-sm-table-cell\">\n                  {index + 1}\n                </td>\n                <td scope=\"row\" className=\"result-refs\">\n                  {record.ref && (\n                    <a href={record.ref} className=\"matomo_link\" target=\"_blank\">\n                      <i dangerouslySetInnerHTML={{ __html: link45degIcon }} />\n                    </a>\n                  )}{' '}\n                  {record.pid && (\n                    <OverlayTrigger\n                      placement=\"auto-start\"\n                      container={ref}\n                      delay={{ show: 250, hide: 400 }}\n                      overlay={<Tooltip id={`ttip-${record.pid}-${index}`}>{record.pid}</Tooltip>}\n                    >\n                      {/* TODO: maybe with on mouse-over stay? see: https://github.com/react-bootstrap/react-bootstrap/issues/1622*/}\n                      <Badge bg=\"secondary\" className=\"pid-badge\">\n                        PID\n                      </Badge>\n                    </OverlayTrigger>\n                  )}\n                </td>\n                <td>{renderAdvancedLayers(record.adv!)}</td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n      {/* overlay mounting point to avoid flickering due to redrawing */}\n      <div ref={ref} className=\"tooltip-mounting-point\"></div>\n    </>\n  )\n}\n\nexport default ViewAdvancedTabular\n","import { useRef } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Table from 'react-bootstrap/Table'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nimport { type ResourceSearchResult } from '@/utils/api'\n\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ViewKwicProps {\n  data: ResourceSearchResult\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ViewKwic({ data }: ViewKwicProps) {\n  const ref = useRef(null)\n\n  return (\n    <>\n      <Table hover responsive className=\"mb-0 results-kwic\">\n        <thead className=\"visually-hidden\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">References</th>\n            <th scope=\"col\">Left Context</th>\n            <th scope=\"col\">Hit</th>\n            <th scope=\"col\">Right Context</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.records.map((record, index) => (\n            <tr key={`${record.pid ?? record.ref ?? data.resource.id}-${index}`}>\n              <td scope=\"row\" className=\"result-idx text-end text-muted d-none d-sm-table-cell\">\n                {index + 1}\n              </td>\n              <td scope=\"row\" className=\"result-refs\">\n                {record.ref && (\n                  <a href={record.ref} className=\"matomo_link\" target=\"_blank\">\n                    <i dangerouslySetInnerHTML={{ __html: link45degIcon }} />\n                  </a>\n                )}{' '}\n                {record.pid && (\n                  <OverlayTrigger\n                    placement=\"auto-start\"\n                    container={ref}\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={<Tooltip id={`ttip-${record.pid}-${index}`}>{record.pid}</Tooltip>}\n                  >\n                    {/* TODO: maybe with on mouse-over stay? see: https://github.com/react-bootstrap/react-bootstrap/issues/1622*/}\n                    <Badge bg=\"secondary\" className=\"pid-badge\">\n                      PID\n                    </Badge>\n                  </OverlayTrigger>\n                )}\n              </td>\n              <td>{record.hits.left}</td>\n              <td>\n                {record.hits.keyword && (\n                  <mark>\n                    <strong>{record.hits.keyword}</strong>\n                  </mark>\n                )}\n              </td>\n              <td>{record.hits.right}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {/* overlay mounting point to avoid flickering due to redrawing */}\n      <div ref={ref} className=\"tooltip-mounting-point\"></div>\n    </>\n  )\n}\n\nexport default ViewKwic\n","import { useRef } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nimport { type ResourceSearchResult } from '@/utils/api'\n\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ViewLexProps {\n  data: ResourceSearchResult\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ViewLex({ data }: ViewLexProps) {\n  const ref = useRef(null)\n\n  return (\n    <div className=\"results-lexical-entry d-flex flex-column flex-wrap column-gap-2 row-gap-2\">\n      {data.records\n        .filter((record) => record.lex !== null)\n        .map((record, index) => (\n          <Card\n            key={`${record.pid ?? record.ref ?? data.resource.id}-${index}`}\n            className=\"flex-grow-1 w-100\"\n          >\n            <Card.Body>\n              <Card.Title>\n                {record\n                  .lex!.fields.filter((field) => field.type === 'lemma')\n                  .map((field) => field.values)\n                  .flat(1)\n                  .map((value) => (\n                    <span>{value.value}</span>\n                  ))}\n              </Card.Title>\n              <ListGroup variant=\"flush\">\n                {(record.lex!.lang || record.lex!.langUri) && (\n                  <ListGroup.Item>\n                    <strong>lang</strong>: {record.lex!.lang} {record.lex!.langUri}\n                  </ListGroup.Item>\n                )}\n                {record\n                  .lex!.fields.filter((field) => field.type !== 'lemma')\n                  .map((field) => (\n                    <ListGroup.Item key={field.type}>\n                      <strong>{field.type}</strong>:\n                      {field.values.map((value, index) => (\n                        <span key={index} className=\"ms-2 lex-value\">\n                          {value.value}\n                        </span>\n                      ))}\n                    </ListGroup.Item>\n                  ))}\n              </ListGroup>\n              <Card.Link>\n                {record.ref && (\n                  <a href={record.ref} className=\"matomo_link\" target=\"_blank\">\n                    <i dangerouslySetInnerHTML={{ __html: link45degIcon }} /> Original results ...\n                  </a>\n                )}\n              </Card.Link>\n              <Card.Link>\n                {record.pid && (\n                  <OverlayTrigger\n                    placement=\"auto-start\"\n                    container={ref}\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={<Tooltip id={`ttip-${record.pid}-${index}`}>{record.pid}</Tooltip>}\n                  >\n                    {/* TODO: maybe with on mouse-over stay? see: https://github.com/react-bootstrap/react-bootstrap/issues/1622*/}\n                    <Badge bg=\"secondary\" className=\"pid-badge\">\n                      PID\n                    </Badge>\n                  </OverlayTrigger>\n                )}\n              </Card.Link>\n            </Card.Body>\n          </Card>\n        ))}\n      {/* overlay mounting point to avoid flickering due to redrawing */}\n      <div ref={ref} className=\"tooltip-mounting-point\"></div>\n    </div>\n  )\n}\n\nexport default ViewLex\n","import { useRef } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Table from 'react-bootstrap/Table'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nimport { type ResourceSearchResult } from '@/utils/api'\n\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ViewLexPlainProps {\n  data: ResourceSearchResult\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ViewLexPlain({ data }: ViewLexPlainProps) {\n  const ref = useRef(null)\n\n  return (\n    <>\n      <Table hover responsive className=\"mb-0 results-lex-plain\">\n        <thead className=\"visually-hidden\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">References</th>\n            <th scope=\"col\">Result with Hit</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.records.map((record, index) => (\n            <tr key={`${record.pid ?? record.ref ?? data.resource.id}-${index}`}>\n              <td scope=\"row\" className=\"result-idx text-end text-muted d-none d-sm-table-cell\">\n                {index + 1}\n              </td>\n              <td scope=\"row\" className=\"result-refs\">\n                {record.ref && (\n                  <a href={record.ref} className=\"matomo_link\" target=\"_blank\">\n                    <i dangerouslySetInnerHTML={{ __html: link45degIcon }} />\n                  </a>\n                )}{' '}\n                {record.pid && (\n                  <OverlayTrigger\n                    placement=\"auto-start\"\n                    container={ref}\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={<Tooltip id={`ttip-${record.pid}-${index}`}>{record.pid}</Tooltip>}\n                  >\n                    {/* TODO: maybe with on mouse-over stay? see: https://github.com/react-bootstrap/react-bootstrap/issues/1622*/}\n                    <Badge bg=\"secondary\" className=\"pid-badge\">\n                      PID\n                    </Badge>\n                  </OverlayTrigger>\n                )}\n              </td>\n              <td>\n                {record.hits.fragments.map((fragment, index) =>\n                  fragment.hit && !fragment.hitKind ? (\n                    <mark key={index}>\n                      <strong>{fragment.text}</strong>\n                    </mark>\n                  ) : fragment.hit && fragment.hitKind ? (\n                    <span\n                      key={index}\n                      className={`lex-hitkind-${fragment.hitKind}`}\n                      title={`Annotated as \"${fragment.hitKind.split('-').slice(1).join('-')}\"`}\n                    >\n                      {fragment.text}\n                    </span>\n                  ) : (\n                    <span key={index}>{fragment.text}</span>\n                  )\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {/* overlay mounting point to avoid flickering due to redrawing */}\n      <div ref={ref} className=\"tooltip-mounting-point\"></div>\n    </>\n  )\n}\n\nexport default ViewLexPlain\n","import { useRef } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Table from 'react-bootstrap/Table'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nimport { type ResourceSearchResult } from '@/utils/api'\n\nimport link45degIcon from 'bootstrap-icons/icons/link-45deg.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ViewPlainProps {\n  data: ResourceSearchResult\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ViewPlain({ data }: ViewPlainProps) {\n  const ref = useRef(null)\n\n  return (\n    <>\n      <Table hover responsive className=\"mb-0 results-plain\">\n        <thead className=\"visually-hidden\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">References</th>\n            <th scope=\"col\">Result with Hit</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.records.map((record, index) => (\n            <tr key={`${record.pid ?? record.ref ?? data.resource.id}-${index}`}>\n              <td scope=\"row\" className=\"result-idx text-end text-muted d-none d-sm-table-cell\">\n                {index + 1}\n              </td>\n              <td scope=\"row\" className=\"result-refs\">\n                {record.ref && (\n                  <a href={record.ref} className=\"matomo_link\" target=\"_blank\">\n                    <i dangerouslySetInnerHTML={{ __html: link45degIcon }} />\n                  </a>\n                )}{' '}\n                {record.pid && (\n                  <OverlayTrigger\n                    placement=\"auto-start\"\n                    container={ref}\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={<Tooltip id={`ttip-${record.pid}-${index}`}>{record.pid}</Tooltip>}\n                  >\n                    {/* TODO: maybe with on mouse-over stay? see: https://github.com/react-bootstrap/react-bootstrap/issues/1622*/}\n                    <Badge bg=\"secondary\" className=\"pid-badge\">\n                      PID\n                    </Badge>\n                  </OverlayTrigger>\n                )}\n              </td>\n              <td>\n                {record.hits.fragments.map((fragment, index) =>\n                  fragment.hit && !fragment.hitKind ? (\n                    <mark key={index}>\n                      <strong>{fragment.text}</strong>\n                    </mark>\n                  ) : (\n                    <span key={index}>{fragment.text}</span>\n                  )\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      {/* overlay mounting point to avoid flickering due to redrawing */}\n      <div ref={ref} className=\"tooltip-mounting-point\"></div>\n    </>\n  )\n}\n\nexport default ViewPlain\n","import { useEffect, useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport { Trans, useTranslation } from 'react-i18next'\n\nimport { useAggregatorData } from '@/providers/AggregatorDataContext'\nimport { useAxios } from '@/providers/AxiosContext'\nimport { useSearchParams } from '@/providers/SearchParamsContext'\nimport { useLocaleStore } from '@/stores/locale'\nimport {\n  getURLForDownload,\n  getURLForWeblicht,\n  type Resource,\n  type ResourceSearchResult,\n} from '@/utils/api'\nimport { DOWNLOAD_FORMATS, NO_MORE_RECORDS_DIAGNOSTIC_URI } from '@/utils/constants'\nimport {\n  findResourceByFilter,\n  getBestFromMultilingualValuesTryByLanguage,\n  getLanguagesFromResourceInfo,\n} from '@/utils/resources'\nimport { type ResultsViewMode } from '@/utils/results'\nimport { languageCodeToName, MULTIPLE_LANGUAGE_CODE } from '@/utils/search'\nimport LoadMoreResultsButton from './LoadMoreResultsButton'\nimport ViewAdvancedTabular from './ViewAdvancedTabular'\nimport ViewKwic from './ViewKwic'\nimport ViewLex from './ViewLex'\nimport ViewLexPlain from './ViewLexPlain'\nimport ViewPlain from './ViewPlain'\n\nimport bankIcon from 'bootstrap-icons/icons/bank.svg?raw'\nimport downloadIcon from 'bootstrap-icons/icons/download.svg?raw'\nimport envelopeArrowUpIcon from 'bootstrap-icons/icons/envelope-arrow-up.svg?raw'\nimport houseDoorIcon from 'bootstrap-icons/icons/house-door.svg?raw'\nimport infoCircleIcon from 'bootstrap-icons/icons/info-circle.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\ninterface ResourceResultsModalProps {\n  show: boolean\n  searchId: string\n  resourceId: string\n  result: ResourceSearchResult\n  viewMode: ResultsViewMode\n  showDiagnostics: boolean\n  onModalClose: () => void\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ResourceResultsModal({\n  show,\n  searchId,\n  resourceId,\n  result,\n  viewMode: viewModeProps,\n  showDiagnostics: showDiagnosticsProps,\n  onModalClose,\n}: ResourceResultsModalProps) {\n  const axios = useAxios()\n  const { t } = useTranslation()\n  const userLocale = useLocaleStore((state) => state.locale)\n  const { languages, resources, weblichtLanguages } = useAggregatorData()\n  const { numberOfResults, queryType, language, languageFilter } = useSearchParams()\n\n  const [locale, setLocale] = useState(userLocale)\n  useEffect(() => {\n    if (userLocale) setLocale(userLocale)\n  }, [userLocale])\n\n  const langNames = new Intl.DisplayNames([userLocale, 'en'], { type: 'language' })\n\n  const [showDiagnostics, setShowDiagnostics] = useState(showDiagnosticsProps)\n  useEffect(() => setShowDiagnostics(showDiagnosticsProps), [showDiagnosticsProps])\n  const [viewMode, setViewMode] = useState(viewModeProps)\n  useEffect(() => setViewMode(viewModeProps), [viewModeProps])\n\n  const languageForResource = getLanguagesFromResourceInfo(result.resource)\n\n  const hasDiagnostics =\n    result.exception ||\n    result.diagnostics?.filter((diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI)\n      .length > 0\n\n  // --------------------------------------------------------------\n  // helper\n\n  function hasMoreResults() {\n    if (!result) return false\n    if (result.nextRecordPosition === -1) return false\n    if (result.numberOfRecords === -1) return false\n    if (result.numberOfRecords === result.records.length) return true // TODO: maybe?\n    return true\n  }\n\n  let languageForWeblicht = null\n  let disableWeblicht = false\n  if (!weblichtLanguages.includes(language)) {\n    // the search language is either AnyLanguage or unsupported\n    if (language === MULTIPLE_LANGUAGE_CODE) {\n      if (result.resource.languages && result.resource.languages.length === 1) {\n        languageForWeblicht = result.resource.languages[0]\n      } else {\n        const languagesFromKwic = [\n          ...new Set(\n            result.records.map((record) => record.lang).filter((language) => language !== null)\n          ),\n        ]\n        if (languagesFromKwic.length === 1) {\n          languageForWeblicht = languagesFromKwic[0]\n        }\n      }\n    }\n    if (!languageForWeblicht) {\n      console.warn('Cannot use WebLicht: unsupported language', { language, languageFilter })\n      disableWeblicht = true\n    }\n  }\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleViewModeChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setViewMode(event.target.value as ResultsViewMode)\n  }\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  function renderResults() {\n    if (!result) return null // TODO: loading spinner? but should not reach here\n\n    if (viewMode === 'annotation-layers' && result.hasAdvResults) {\n      const resource = findResourceByFilter(\n        resources,\n        (resource: Resource) => resource.id === result.id\n      )\n      return <ViewAdvancedTabular data={result} resource={resource} />\n    }\n    if (viewMode === 'kwic' && (queryType !== 'lex' || !result.isLexHits)) {\n      return <ViewKwic data={result} />\n    }\n    if (viewMode === 'lexical-entry' && result.hasLexResults) {\n      return <ViewLex data={result} />\n    }\n    if (queryType === 'lex' && result.isLexHits) {\n      return <ViewLexPlain data={result} />\n    }\n    // 'plain' (fallback)\n    return <ViewPlain data={result} />\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={() => onModalClose()}\n      size=\"xl\"\n      fullscreen=\"lg-down\"\n      centered\n      className=\"resource-search-result-modal\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {getBestFromMultilingualValuesTryByLanguage(result.resource.title, locale)}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"resource-info\">\n        <dl className=\"mb-0\" aria-label={t('search.results.resourceInfo.infoTableAriaLabel')}>\n          <dt>\n            <i dangerouslySetInnerHTML={{ __html: bankIcon }} />{' '}\n            {t('search.results.resourceInfo.labelInstitution')}\n          </dt>\n          <dd className=\"mb-0\">\n            {getBestFromMultilingualValuesTryByLanguage(result.resource.institution, locale)}\n          </dd>\n          <dt>\n            <i dangerouslySetInnerHTML={{ __html: infoCircleIcon }} />{' '}\n            {t('search.results.resourceInfo.labelDescription')}\n          </dt>\n          {getBestFromMultilingualValuesTryByLanguage(result.resource.description, locale) && (\n            <>\n              <dd className=\"mb-0\">\n                {getBestFromMultilingualValuesTryByLanguage(result.resource.description, locale)}\n              </dd>\n              <dt>\n                <i dangerouslySetInnerHTML={{ __html: translateIcon }} />{' '}\n                {t('search.results.resourceInfo.labelLanguages')}\n              </dt>\n            </>\n          )}\n          <dd className=\"mb-0\">\n            {result.resource.languages\n              .map(\n                languages\n                  ? (code) =>\n                      languageCodeToName(code, languages, {\n                        defaultAnyLanguage: t('languageCodeToName.any', { ns: 'common' }),\n                        defaultUnknownLanguage: t('languageCodeToName.unknown', { ns: 'common' }),\n                      })\n                  : (x) => x\n              )\n              .toSorted()\n              .join(', ')}\n          </dd>\n\n          {languageForResource && languageForResource.length > 1 && (\n            <ToggleButtonGroup\n              type=\"radio\"\n              name={`${result.resource.id}-result-modal-info-languages`}\n              defaultValue={locale}\n              onChange={(language) => setLocale(language)}\n              className=\"mt-2 mb-3\"\n            >\n              {languageForResource.toSorted().map((language) => (\n                <ToggleButton\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                  key={language}\n                  id={`${result.resource.id}-result-modal-info-languages-${language}`}\n                  value={language}\n                >\n                  {langNames.of(language)} <sup>{language}</sup>\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          )}\n\n          <dt>{t('search.results.resourceInfo.labelPID')}</dt>\n          <dd>{result.resource.handle}</dd>\n        </dl>\n\n        {result.resource.landingPage && (\n          <a href={result.resource.landingPage} className=\"matomo_link\" target=\"_blank\">\n            <i dangerouslySetInnerHTML={{ __html: houseDoorIcon }} />{' '}\n            {t('search.results.resourceInfo.moreInformation')}\n          </a>\n        )}\n        <hr />\n        <Row className=\"row-gap-2\">\n          <Col lg={'auto'} md={3} sm={6}>\n            <FloatingLabel\n              label={t('search.results.displayOptions.viewModeLabel')}\n              controlId=\"results-view-mode\"\n            >\n              <Form.Select value={viewMode} onChange={handleViewModeChange}>\n                <option value=\"plain\">\n                  {t('search.results.displayOptions.viewModeOptions.plain')}\n                </option>\n                {(queryType !== 'lex' || !result.isLexHits) && (\n                  <option value=\"kwic\">\n                    {t('search.results.displayOptions.viewModeOptions.kwic')}\n                  </option>\n                )}\n                {queryType === 'fcs' && (\n                  <option value=\"annotation-layers\">\n                    {t('search.results.displayOptions.viewModeOptions.annotation-layers')}\n                  </option>\n                )}\n                {queryType === 'lex' && (\n                  <option value=\"lexical-entry\">\n                    {t('search.results.displayOptions.viewModeOptions.lexical-entry')}\n                  </option>\n                )}\n              </Form.Select>\n            </FloatingLabel>\n          </Col>\n          <Col lg={3} md={3} sm={6} className=\"align-content-center\">\n            <Form.Check\n              disabled={!hasDiagnostics}\n              checked={showDiagnostics}\n              onChange={() => setShowDiagnostics((show) => !show)}\n              id=\"results-modal-view-warnings-errors\"\n              label={t('search.results.displayOptions.optionShowWarningsErrors')}\n            />\n          </Col>\n          <Col\n            lg={'auto'}\n            md={6}\n            sm={6}\n            className=\"d-flex flex-grow-1 column-gap-3 align-items-center justify-content-end\"\n          >\n            <Dropdown>\n              <Dropdown.Toggle>\n                <i dangerouslySetInnerHTML={{ __html: downloadIcon }} />{' '}\n                {t('search.results.buttonDownload')}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {DOWNLOAD_FORMATS.map(({ id: format, label }) => (\n                  <Dropdown.Item\n                    href={getURLForDownload(\n                      axios,\n                      searchId,\n                      resourceId,\n                      format,\n                      language,\n                      languageFilter\n                    )}\n                    className=\"matomo_download\"\n                    key={format}\n                  >\n                    <Trans\n                      i18nKey=\"search.results.msgButtonDownloadOption\"\n                      values={{\n                        label: t(`downloadFormats.${format}.name`, {\n                          ns: 'common',\n                          defaultValue: label,\n                        }),\n                      }}\n                    />\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n            {/* TODO: show more visible message to user? */}\n            <Button\n              disabled={disableWeblicht}\n              aria-disabled={disableWeblicht}\n              href={getURLForWeblicht(\n                axios,\n                searchId,\n                resourceId,\n                languageForWeblicht,\n                language,\n                languageFilter\n              )}\n              className=\"matomo_link\"\n              target=\"_blank\"\n            >\n              <i dangerouslySetInnerHTML={{ __html: envelopeArrowUpIcon }} />{' '}\n              {t('search.results.buttonSendToWeblicht')}\n            </Button>\n          </Col>\n        </Row>\n        <hr />\n        {/* results */}\n        <p>\n          <Trans\n            i18nKey=\"search.results.msgShowingXresults\"\n            values={{\n              count: result.records.length,\n              context: hasMoreResults() ? 'hasmore' : null,\n              total: result.numberOfRecords,\n            }}\n          />\n        </p>\n        {renderResults()}\n      </Modal.Body>\n      {/* diagnostics */}\n      {showDiagnostics && hasDiagnostics && (\n        <Modal.Body className=\"border-top\">\n          {result.exception && (\n            <Alert variant=\"danger\" aria-label={t('search.results.diagnostics.alertAriaLabel')}>\n              <Alert.Heading style={{ fontSize: '1rem' }}>\n                <span className=\"text-uppercase\">\n                  {t('search.results.diagnostics.titleException')}\n                </span>{' '}\n                <span aria-label={t('search.results.diagnostics.msgAriaLabel')}>\n                  {result.exception.message}\n                </span>\n              </Alert.Heading>\n              {result.exception.cause && (\n                <p className=\"mb-0 small\">\n                  {t('search.results.diagnostics.msgCause', { cause: result.exception.cause })}\n                </p>\n              )}\n              {result.exception.klass && (\n                <p className=\"mb-0 small\">\n                  <Trans\n                    i18nKey=\"search.results.diagnostics.msgCausedBy\"\n                    values={{ class: result.exception.klass }}\n                  />\n                </p>\n              )}\n            </Alert>\n          )}\n          {result.diagnostics\n            .filter((diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI)\n            .map((diagnostic) => (\n              <Alert\n                variant=\"warning\"\n                key={`${diagnostic.uri}-${diagnostic.message}-${diagnostic.diagnostic}`}\n              >\n                <Alert.Heading style={{ fontSize: '1rem' }}>{diagnostic.message}</Alert.Heading>\n                {diagnostic.diagnostic && (\n                  <p className=\"mb-0 small\">\n                    {t('search.results.diagnostics.msgDiagnosticDetails', {\n                      details: diagnostic.diagnostic,\n                    })}\n                  </p>\n                )}\n                <p className=\"mb-0 small\">\n                  <Trans\n                    i18nKey=\"search.results.diagnostics.msgDiagnosticType\"\n                    values={{ uri: diagnostic.uri }}\n                  />\n                  {/* add link to list? */}\n                </p>\n              </Alert>\n            ))}\n        </Modal.Body>\n      )}\n      {/* load more button */}\n      {hasMoreResults() && (\n        <Modal.Footer className=\"justify-content-center border-top py-2\">\n          {/* TODO: maybe split button to choose how many to load? */}\n          <LoadMoreResultsButton\n            searchId={searchId}\n            resourceId={resourceId}\n            numberOfResults={numberOfResults}\n          />\n        </Modal.Footer>\n      )}\n    </Modal>\n  )\n}\n\nexport default ResourceResultsModal\n","import { useQuery } from '@tanstack/react-query'\nimport { useEffect, useId, useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Collapse from 'react-bootstrap/Collapse'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport { Trans, useTranslation } from 'react-i18next'\n\nimport { useAggregatorData } from '@/providers/AggregatorDataContext'\nimport { useAxios } from '@/providers/AxiosContext'\nimport { useSearchParams } from '@/providers/SearchParamsContext'\nimport { useLocaleStore } from '@/stores/locale'\nimport {\n  getSearchResultDetails,\n  type Resource,\n  type ResourceSearchResult,\n  type ResourceSearchResultMetaOnly,\n} from '@/utils/api'\nimport { NO_MORE_RECORDS_DIAGNOSTIC_URI } from '@/utils/constants'\nimport {\n  findResourceByFilter,\n  getBestFromMultilingualValuesTryByLanguage,\n  getLanguagesFromResourceInfo,\n} from '@/utils/resources'\nimport { type ResultsViewMode } from '@/utils/results'\nimport { languageCodeToName } from '@/utils/search'\nimport ResourceResultsModal from './ResourceResultsModal'\nimport ViewAdvancedTabular from './ViewAdvancedTabular'\nimport ViewKwic from './ViewKwic'\nimport ViewLex from './ViewLex'\nimport ViewLexPlain from './ViewLexPlain'\nimport ViewPlain from './ViewPlain'\n\nimport bankIcon from 'bootstrap-icons/icons/bank.svg?raw'\nimport eyeIcon from 'bootstrap-icons/icons/eye.svg?raw'\nimport infoCircleIcon from 'bootstrap-icons/icons/info-circle.svg?raw'\nimport translateIcon from 'bootstrap-icons/icons/translate.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport interface ResourceSearchResultProps {\n  searchId: string\n  resourceId: string\n  resultInfo: ResourceSearchResultMetaOnly\n  viewMode: ResultsViewMode\n  showResourceDetails: boolean\n  showDiagnostics: boolean\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ResourceSearchResult({\n  searchId,\n  resourceId,\n  resultInfo,\n  viewMode,\n  showResourceDetails,\n  showDiagnostics,\n}: ResourceSearchResultProps) {\n  const axios = useAxios()\n  const { t } = useTranslation()\n  const userLocale = useLocaleStore((state) => state.locale)\n  const { languages, resources } = useAggregatorData()\n  const { queryType } = useSearchParams()\n\n  const [locale, setLocale] = useState(userLocale)\n  useEffect(() => {\n    if (userLocale) setLocale(userLocale)\n  }, [userLocale])\n\n  const langNames = new Intl.DisplayNames([userLocale, 'en'], { type: 'language' })\n\n  const htmlId = useId()\n  const [expanded, setExpanded] = useState(true)\n  const [showModal, setShowModal] = useState(false)\n\n  const inProgress = resultInfo.inProgress\n  const hasResults = resultInfo.numberOfRecordsLoaded > 0 // number of required default KWIC rows loaded\n  const hasDiagnostics =\n    resultInfo.exception ||\n    resultInfo.diagnostics?.filter(\n      (diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI\n    ).length > 0\n\n  const { data, isLoading, isError } = useQuery({\n    queryKey: ['search-result-details', searchId, resourceId],\n    queryFn: getSearchResultDetails.bind(null, axios, searchId, resourceId),\n    enabled: !inProgress, // && hasResults,\n  })\n  console.debug(\n    'resource results',\n    { searchId, resourceId, inProgress, hasResults, hasDiagnostics },\n    { data, isLoading, isError }\n  )\n\n  const languageForResource = data ? getLanguagesFromResourceInfo(data.resource) : []\n\n  // TODO: filter for language \"byGuess\" mode\n\n  // do not show when\n  // (a) still in progress\n  if (inProgress) return null\n  // (b) if no results, check if diags and diags should be shown\n  if (!hasResults) {\n    // if show diags but do not have diags => hide\n    if (showDiagnostics && !hasDiagnostics) return null\n    // if no results && do not want to show diags => hide\n    if (!showDiagnostics) return null\n  }\n  // (c) does not yet have data\n  if (!data) return null\n\n  // --------------------------------------------------------------\n  // event handlers\n\n  function handleViewClick() {\n    setShowModal(true)\n  }\n\n  function handleModalClose() {\n    setShowModal(false)\n  }\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  function renderResultsCounter() {\n    if (!data) return null // TODO\n\n    if (data.numberOfRecords === -1) {\n      // probably at end, since endpoints respond with -1 when trying to request more than available\n      return data.records.length\n    } else if (data.numberOfRecords === data.records.length && data.nextRecordPosition === -1) {\n      // either everything or possibly more\n      return `${data.records.length} / ${data.numberOfRecords}?`\n    } else {\n      return `${data.records.length} / ${data.numberOfRecords}`\n    }\n  }\n\n  function renderResults() {\n    if (!data) return null // TODO: loading spinner? but should not reach here\n\n    if (viewMode === 'annotation-layers' && data.hasAdvResults) {\n      const resource = findResourceByFilter(\n        resources,\n        (resource: Resource) => resource.id === data.id\n      )\n      return <ViewAdvancedTabular data={data} resource={resource} />\n    }\n    if (viewMode === 'kwic' && (queryType !== 'lex' || !data.isLexHits)) {\n      return <ViewKwic data={data} />\n    }\n    if (viewMode === 'lexical-entry' && data.hasLexResults) {\n      return <ViewLex data={data} />\n    }\n    if (queryType === 'lex' && data.isLexHits) {\n      return <ViewLexPlain data={data} />\n    }\n    // 'plain' (fallback)\n    return <ViewPlain data={data} />\n  }\n\n  return (\n    <>\n      <Card\n        className=\"my-1 resource-search-result\"\n        role=\"group\"\n        aria-label={t('search.results.resultResourceAriaLabel', { title: data.resource.title })}\n      >\n        <Card.Header className=\"d-flex accordion\">\n          <button\n            type=\"button\"\n            onClick={() => setExpanded((expanded) => !expanded)}\n            aria-controls={htmlId}\n            aria-expanded={expanded}\n            className={`me-3 w-auto flex-grow-1 d-block text-start collapse-toggle-btn ${\n              expanded ? '' : 'collapsed'\n            }`}\n          >\n            <Badge\n              bg=\"\"\n              className=\"text-bg-light border me-2 user-select-text\"\n              aria-label={t('search.results.resultCountAriaLabel')}\n            >\n              {renderResultsCounter()}\n            </Badge>\n            <span\n              aria-label={t('search.results.resultResourceTitleAriaLabel')}\n              className=\"user-select-text\"\n            >\n              {getBestFromMultilingualValuesTryByLanguage(data.resource.title, locale)}\n            </span>\n            <small\n              className=\"text-muted user-select-text\"\n              aria-label={t('search.results.resultResourceInstitutionAriaLabel')}\n            >\n              {getBestFromMultilingualValuesTryByLanguage(data.resource.institution, locale)}\n            </small>\n          </button>\n          <div className=\"d-inline-block ms-auto\">\n            <Button size=\"sm\" onClick={handleViewClick}>\n              <i dangerouslySetInnerHTML={{ __html: eyeIcon }} /> View\n            </Button>\n          </div>\n        </Card.Header>\n        {/* data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\" */}\n        <Collapse in={expanded}>\n          <div id={htmlId}>\n            {/* result details */}\n            {showResourceDetails && (\n              <Card.Body className=\"border-bottom resource-info\">\n                <dl\n                  className=\"mb-0\"\n                  aria-label={t('search.results.resourceInfo.infoTableAriaLabel')}\n                >\n                  <dt>\n                    <i dangerouslySetInnerHTML={{ __html: bankIcon }} />{' '}\n                    {t('search.results.resourceInfo.labelInstitution')}\n                  </dt>\n                  <dd className=\"mb-0\">\n                    {getBestFromMultilingualValuesTryByLanguage(data.resource.institution, locale)}\n                  </dd>\n                  <dt>\n                    <i dangerouslySetInnerHTML={{ __html: infoCircleIcon }} />{' '}\n                    {t('search.results.resourceInfo.labelDescription')}\n                  </dt>\n                  {getBestFromMultilingualValuesTryByLanguage(\n                    data.resource.description,\n                    locale\n                  ) && (\n                    <>\n                      <dd className=\"mb-0\">\n                        {getBestFromMultilingualValuesTryByLanguage(\n                          data.resource.description,\n                          locale\n                        )}\n                      </dd>\n                      <dt>\n                        <i dangerouslySetInnerHTML={{ __html: translateIcon }} />{' '}\n                        {t('search.results.resourceInfo.labelLanguages')}\n                      </dt>\n                    </>\n                  )}\n                  <dd className=\"mb-0\">\n                    {data.resource.languages\n                      .map(\n                        languages\n                          ? (code) =>\n                              languageCodeToName(code, languages, {\n                                defaultAnyLanguage: t('languageCodeToName.any', { ns: 'common' }),\n                                defaultUnknownLanguage: t('languageCodeToName.unknown', {\n                                  ns: 'common',\n                                }),\n                              })\n                          : (x) => x\n                      )\n                      .toSorted()\n                      .join(', ')}\n                  </dd>\n                </dl>\n\n                {languageForResource && languageForResource.length > 1 && (\n                  <ToggleButtonGroup\n                    type=\"radio\"\n                    name={`${data.resource.id}-result-info-languages`}\n                    defaultValue={locale}\n                    onChange={(language) => setLocale(language)}\n                    className=\"mt-2\"\n                  >\n                    {languageForResource.toSorted().map((language) => (\n                      <ToggleButton\n                        variant=\"outline-secondary\"\n                        size=\"sm\"\n                        key={language}\n                        id={`${data.resource.id}-result-info-languages-${language}`}\n                        value={language}\n                      >\n                        {langNames.of(language)} <sup>{language}</sup>\n                      </ToggleButton>\n                    ))}\n                  </ToggleButtonGroup>\n                )}\n              </Card.Body>\n            )}\n            {/* results */}\n            {hasResults && <Card.Body>{renderResults()}</Card.Body>}\n            {/* diagnostics */}\n            {showDiagnostics && hasDiagnostics && (\n              <Card.Body className={hasResults ? 'border-top' : ''}>\n                {/* TODO: aria invisible heading, adjust levels */}\n                {data.exception && (\n                  <Alert\n                    variant=\"danger\"\n                    aria-label={t('search.results.diagnostics.alertAriaLabel')}\n                  >\n                    <Alert.Heading style={{ fontSize: '1rem' }}>\n                      <span className=\"text-uppercase\">\n                        {t('search.results.diagnostics.titleException')}\n                      </span>{' '}\n                      <span aria-label={t('search.results.diagnostics.msgAriaLabel')}>\n                        {data.exception.message}\n                      </span>\n                    </Alert.Heading>\n                    {data.exception.cause && (\n                      <p className=\"mb-0 small\">\n                        {t('search.results.diagnostics.msgCause', { cause: data.exception.cause })}\n                      </p>\n                    )}\n                    {data.exception.klass && (\n                      <p className=\"mb-0 small\">\n                        <Trans\n                          i18nKey=\"search.results.diagnostics.msgCausedBy\"\n                          values={{ class: data.exception.klass }}\n                        />\n                      </p>\n                    )}\n                  </Alert>\n                )}\n                {data.diagnostics\n                  .filter((diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI)\n                  .map((diagnostic) => (\n                    <Alert\n                      variant=\"warning\"\n                      key={`${diagnostic.uri}-${diagnostic.message}-${diagnostic.diagnostic}`}\n                    >\n                      <Alert.Heading style={{ fontSize: '1rem' }}>\n                        {diagnostic.message}\n                      </Alert.Heading>\n                      {diagnostic.diagnostic && (\n                        <p className=\"mb-0 small\">\n                          {t('search.results.diagnostics.msgDiagnosticDetails', {\n                            details: diagnostic.diagnostic,\n                          })}\n                        </p>\n                      )}\n                      <p className=\"mb-0 small\">\n                        <Trans\n                          i18nKey=\"search.results.diagnostics.msgDiagnosticType\"\n                          values={{ uri: diagnostic.uri }}\n                        />\n                        {/* add link to list? */}\n                      </p>\n                    </Alert>\n                  ))}\n              </Card.Body>\n            )}\n          </div>\n        </Collapse>\n      </Card>\n      <ResourceResultsModal\n        show={showModal}\n        searchId={searchId}\n        resourceId={resourceId}\n        result={data}\n        viewMode={viewMode}\n        showDiagnostics={showDiagnostics}\n        onModalClose={handleModalClose}\n      />\n    </>\n  )\n}\n\nexport default ResourceSearchResult\n","import LocaleStore from '@/stores/locale'\nimport type { Resource, ResourceSearchResultMetaOnly } from '@/utils/api'\nimport { getBestFromMultilingualValuesTryByLanguage } from './resources'\n\nexport type ResultsViewMode = 'plain' | 'kwic' | 'annotation-layers' | 'lexical-entry'\nexport type ResultsSorting =\n  | 'default'\n  | 'title-up'\n  | 'title-down'\n  | 'result-count-total-up'\n  | 'result-count-total-down'\n\n// --------------------------------------------------------------------------\n\nexport const DEFAULT_VIEW_MODE: ResultsViewMode = 'plain'\nexport const DEFAULT_VIEW_MODE_WHEN_LEX: ResultsViewMode = 'lexical-entry'\nexport const DEFAULT_VIEW_MODE_WHEN_FCS: ResultsViewMode = 'plain' // TODO: 'annotation-layers' might be quite UI expensive for unrestricted searches\nexport const DEFAULT_SORTING: ResultsSorting = 'default'\n\n// --------------------------------------------------------------------------\n\nexport const SORT_FNS: {\n  [key in ResultsSorting]: (\n    lookup: Map<string, Resource>\n  ) => (a: ResourceSearchResultMetaOnly, b: ResourceSearchResultMetaOnly) => number\n} = {\n  default: () => () => 0,\n  'title-up': (lookup) => (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const titleA =\n      getBestFromMultilingualValuesTryByLanguage(lookup.get(a.id)?.title ?? null, locale) ?? ''\n    const titleB =\n      getBestFromMultilingualValuesTryByLanguage(lookup.get(b.id)?.title ?? null, locale) ?? ''\n\n    return titleA.localeCompare(titleB)\n  },\n  'title-down': (lookup) => (a, b) => {\n    const locale = LocaleStore.getState().locale\n\n    const titleA =\n      getBestFromMultilingualValuesTryByLanguage(lookup.get(a.id)?.title ?? null, locale) ?? ''\n    const titleB =\n      getBestFromMultilingualValuesTryByLanguage(lookup.get(b.id)?.title ?? null, locale) ?? ''\n\n    return -titleA.localeCompare(titleB)\n  },\n  'result-count-total-up': () => (a, b) => {\n    const countA = a.numberOfRecords !== -1 ? a.numberOfRecords : a.numberOfRecordsLoaded\n    const countB = b.numberOfRecords !== -1 ? b.numberOfRecords : b.numberOfRecordsLoaded\n    return countA - countB\n  },\n  'result-count-total-down': () => (a, b) => {\n    const countA = a.numberOfRecords !== -1 ? a.numberOfRecords : a.numberOfRecordsLoaded\n    const countB = b.numberOfRecords !== -1 ? b.numberOfRecords : b.numberOfRecordsLoaded\n    return countB - countA\n  },\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { useEffect, useMemo, useState } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport FloatingLabel from 'react-bootstrap/FloatingLabel'\nimport Form from 'react-bootstrap/Form'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Popover from 'react-bootstrap/Popover'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport Row from 'react-bootstrap/Row'\nimport { Trans, useTranslation } from 'react-i18next'\n\nimport DebouncedFuzzySearchInput from '@/components/DebouncedFuzzySearchInput'\nimport ResourceSearchResult from '@/components/ResourceSearchResult'\nimport { useAggregatorData } from '@/providers/AggregatorDataContext'\nimport { useAxios } from '@/providers/AxiosContext'\nimport { useSearchParams } from '@/providers/SearchParamsContext'\nimport { getSearchResultsMetaOnly, type SearchResultsMetaOnly } from '@/utils/api'\nimport { NO_MORE_RECORDS_DIAGNOSTIC_URI } from '@/utils/constants'\nimport { trackSiteSearch } from '@/utils/matomo'\nimport {\n  DEFAULT_SORTING,\n  DEFAULT_VIEW_MODE,\n  DEFAULT_VIEW_MODE_WHEN_FCS,\n  DEFAULT_VIEW_MODE_WHEN_LEX,\n  SORT_FNS,\n  type ResultsSorting,\n  type ResultsViewMode,\n} from '@/utils/results'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\nexport const DEFAULT_POLL_DELAY = 1500\n\nexport interface SearchResultsProps {\n  searchId: string\n  pollDelay?: number\n}\n\n// --------------------------------------------------------------------------\n// component\n\n// TODO: make it (search?) cancelable! (useEffect?)\nfunction SearchResults({ searchId, pollDelay = DEFAULT_POLL_DELAY }: SearchResultsProps) {\n  const { t } = useTranslation()\n  const axios = useAxios()\n  const { resources } = useAggregatorData()\n  const { query, queryType, resourceIDs } = useSearchParams()\n\n  // TODO: useTransition for changes?\n\n  const [viewMode, setViewMode] = useState<ResultsViewMode>(\n    queryType === 'lex'\n      ? DEFAULT_VIEW_MODE_WHEN_LEX\n      : queryType === 'fcs'\n      ? DEFAULT_VIEW_MODE_WHEN_FCS\n      : DEFAULT_VIEW_MODE\n  )\n  const [sorting, setSorting] = useState<ResultsSorting>(DEFAULT_SORTING)\n  const [filter, setFilter] = useState('')\n  const [showResourceDetails, setShowResourceDetails] = useState(false)\n  const [showDiagnostics, setShowDiagnostics] = useState(false)\n\n  const sortFn = useMemo(() => {\n    const lookup = new Map()\n    resources?.forEach((resource) => {\n      lookup.set(resource.id, resource)\n    })\n    return SORT_FNS[sorting](lookup)\n  }, [sorting, resources])\n\n  // polling of meta results, dependant on searchId\n  pollDelay ??= DEFAULT_POLL_DELAY\n  const {\n    data,\n    // isLoading: isLoadingSearchResults,\n    // isError: isErrorSearchResults,\n  } = useQuery<SearchResultsMetaOnly>({\n    queryKey: ['search-results', searchId],\n    queryFn: getSearchResultsMetaOnly.bind(null, axios, searchId ?? ''),\n    enabled: !!searchId,\n    refetchInterval(query) {\n      // console.debug('[refetchInterval]', query, query.state.data)\n      if (query.state.data && query.state.data.inProgress > 0) return pollDelay\n      return false\n    },\n  })\n  // console.debug('search-results', data, isLoadingSearchResults, isErrorSearchResults)\n\n  const sortedResults = useMemo(() => data?.results.toSorted(sortFn) || [], [data, sortFn])\n\n  // all successful results use the LexHITS data view, and have Hits with hitKind attributes\n  const isAllLexHITS =\n    queryType === 'lex' &&\n    data?.results.every((result) => result.numberOfRecords <= 0 || result.isLexHits === true)\n\n  const numRequested = resourceIDs.length\n  const numInProgress = data?.inProgress ?? numRequested\n  const numWithResults = useMemo(\n    () =>\n      data?.results.filter(\n        (result) =>\n          (result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded) >\n          0\n      ).length ?? 0,\n    [data]\n  )\n  const numWithResultsWithWarnings = useMemo(\n    () =>\n      data?.results.filter(\n        (result) =>\n          !result.inProgress &&\n          (result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded) >\n            0 &&\n          result.diagnostics.filter(\n            (diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI\n          ).length > 0\n      ).length ?? 0,\n    [data]\n  )\n  const numNoResults = useMemo(\n    () =>\n      data?.results.filter(\n        (result) =>\n          !result.inProgress &&\n          (result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded) <=\n            0 &&\n          result.diagnostics.filter(\n            (diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI\n          ).length === 0 &&\n          result.exception === null\n      ).length ?? 0,\n    [data]\n  )\n  const numNoResultsWithIssues = useMemo(\n    () =>\n      data?.results.filter(\n        (result) =>\n          !result.inProgress &&\n          (result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded) <=\n            0 &&\n          (result.diagnostics.filter(\n            (diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI\n          ).length > 0 ||\n            result.exception !== null)\n      ).length ?? 0,\n    [data]\n  )\n  const numNoResultsWithExceptions = useMemo(\n    () =>\n      data?.results.filter(\n        (result) => !result.inProgress && result.numberOfRecords <= 0 && result.exception !== null\n      ).length ?? 0,\n    [data]\n  )\n  const numNoResultsWithWarnings = useMemo(\n    () =>\n      data?.results.filter(\n        (result) =>\n          !result.inProgress &&\n          (result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded) <=\n            0 &&\n          result.diagnostics.filter(\n            (diagnostic) => diagnostic.uri !== NO_MORE_RECORDS_DIAGNOSTIC_URI\n          ).length > 0 &&\n          result.exception === null\n      ).length ?? 0,\n    [data]\n  )\n\n  // TODO: this might not yet be completely correct?\n  const numResultsTotalAvailable = useMemo(\n    () =>\n      data?.results\n        .map((result) =>\n          result.numberOfRecords !== -1 ? result.numberOfRecords : result.numberOfRecordsLoaded\n        )\n        .reduce((acc, cur) => acc + cur, 0) ?? 0,\n    [data]\n  )\n  const numResultsTotalLoaded = useMemo(\n    () =>\n      data?.results\n        .map((result) => result.numberOfRecordsLoaded)\n        .reduce((acc, cur) => acc + cur, 0) ?? 0,\n    [data]\n  )\n\n  // TODO: add total result counter?\n\n  // --------------------------------------------------------------\n\n  if (import.meta.env.FEATURE_TRACKING_MATOMO) {\n    /* eslint-disable react-hooks/rules-of-hooks */\n    const [sent, setSent] = useState(false)\n    useEffect(() => {\n      if (data && numInProgress === 0) {\n        if (!sent) {\n          setSent(true)\n\n          // TODO: sum total (not yet requested) or only loaded by user\n          trackSiteSearch(query, queryType, numResultsTotalLoaded)\n        }\n      }\n    }, [data, numInProgress, query, queryType, searchId, sent, numResultsTotalLoaded])\n  }\n\n  // --------------------------------------------------------------\n  // event handlers\n\n  function handleViewModeChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    // console.debug('viewmode#onchange', viewMode, '=>', event.target.value)\n    setViewMode(event.target.value as ResultsViewMode)\n  }\n\n  function handleSortingChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    // console.debug('sorting#onchange', sorting, '=>', event.target.value)\n    setSorting(event.target.value as ResultsSorting)\n  }\n\n  // --------------------------------------------------------------\n  // rendering\n\n  // TODO: add filter for exact vs. fuzzy/normalised search results\n\n  return (\n    <div id=\"search-results\" className=\"mt-2 mb-4\">\n      {/* TODO: add visually-hidden title for semantic site structure */}\n      {/* TODO: add tooltip with easier to read information */}\n      {/* TODO: mobile design: hide labels and maybe add below? */}\n      <OverlayTrigger\n        placement=\"auto\"\n        overlay={\n          <Popover id=\"search-progress-information-popover\">\n            <Popover.Header>{t('search.results.progressPopover.title')}</Popover.Header>\n            <Popover.Body style={{ textIndent: '2rem hanging' }}>\n              {/* XXX.toString().padStart(4, '\\u00A0'), */}\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesRequested\"\n                  count={numRequested}\n                />\n              </div>\n              {numInProgress > 0 && (\n                <div>\n                  <Trans\n                    i18nKey=\"search.results.progressPopover.numResourcesRequestedPending\"\n                    count={numInProgress}\n                  />\n                </div>\n              )}\n              <hr className=\"mt-2 mb-1\" />\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesWithoutResults\"\n                  count={numNoResults + numNoResultsWithIssues}\n                />\n              </div>\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesWithoutResultsOK\"\n                  count={numNoResults}\n                />\n              </div>\n              {/*\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesWithoutResultsErrorsWarnings\"\n                  count={numNoResultsWithIssues}\n                />\n              </div>\n              */}\n              {numNoResultsWithWarnings > 0 && (\n                <div>\n                  <Trans\n                    i18nKey=\"search.results.progressPopover.numResourcesWithoutResultsWarnings\"\n                    count={numNoResultsWithWarnings}\n                  />\n                </div>\n              )}\n              {numNoResultsWithExceptions > 0 && (\n                <div>\n                  <Trans\n                    i18nKey=\"search.results.progressPopover.numResourcesWithoutResultsErrors\"\n                    count={numNoResultsWithExceptions}\n                  />\n                </div>\n              )}\n              <hr className=\"mt-2 mb-1\" />\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesWithResults\"\n                  count={numWithResults}\n                />\n              </div>\n              {numWithResultsWithWarnings > 0 && (\n                <div>\n                  <Trans\n                    i18nKey=\"search.results.progressPopover.numResourcesWithResultsWarnings\"\n                    count={numWithResultsWithWarnings}\n                  />\n                </div>\n              )}\n              <hr className=\"mt-2 mb-0\" />\n              <hr className=\"mt-1 mb-1\" />\n              <div>\n                <Trans\n                  i18nKey=\"search.results.progressPopover.numResourcesWithResultsTotal\"\n                  count={numResultsTotalLoaded}\n                  values={{ available: numResultsTotalAvailable }}\n                />\n              </div>\n            </Popover.Body>\n          </Popover>\n        }\n      >\n        <ProgressBar className=\"mb-3\">\n          <ProgressBar\n            variant=\"success\"\n            now={numWithResults}\n            max={numRequested}\n            label={\n              <span>\n                {t('search.results.progressBar.numWithResults', { count: numWithResults })}\n              </span>\n            }\n            aria-label={t('search.results.progressBar.numWithResultsAriaLabel')}\n          />\n          <ProgressBar\n            variant=\"secondary\"\n            now={numNoResults + numNoResultsWithIssues}\n            max={numRequested}\n            label={\n              <span>\n                {t('search.results.progressBar.numWithResults', {\n                  count: numNoResults + numNoResultsWithIssues,\n                })}\n              </span>\n            }\n            aria-label={t('search.results.progressBar.numWithoutResultsAriaLabel')}\n          />\n          <ProgressBar\n            striped\n            animated\n            now={numInProgress}\n            max={numRequested}\n            label={\n              <span>\n                {t('search.results.progressBar.numResultsPending', { count: numInProgress })}\n              </span>\n            }\n            aria-label={t('search.results.progressBar.numResultsPendingAriaLabel')}\n          />\n        </ProgressBar>\n      </OverlayTrigger>\n\n      <Card\n        className=\"mb-2\"\n        role=\"group\"\n        aria-label={t('search.results.displayOptions.cardAriaLabel')}\n      >\n        <Card.Body>\n          <Row className=\"row-gap-2\">\n            <Col lg={'auto'} md={6} sm={6}>\n              <FloatingLabel\n                label={t('search.results.displayOptions.viewModeLabel')}\n                controlId=\"results-view-mode\"\n              >\n                <Form.Select value={viewMode} onChange={handleViewModeChange}>\n                  <option value=\"plain\">\n                    {t('search.results.displayOptions.viewModeOptions.plain')}\n                  </option>\n                  {/* maybe allow kwic for LexCQL if not a LexHITS data view */}\n                  {(queryType !== 'lex' || !isAllLexHITS) && (\n                    <option value=\"kwic\">\n                      {t('search.results.displayOptions.viewModeOptions.kwic')}\n                    </option>\n                  )}\n                  {queryType === 'fcs' && (\n                    <option value=\"annotation-layers\">\n                      {t('search.results.displayOptions.viewModeOptions.annotation-layers')}\n                    </option>\n                  )}\n                  {queryType === 'lex' && (\n                    <option value=\"lexical-entry\">\n                      {t('search.results.displayOptions.viewModeOptions.lexical-entry')}\n                    </option>\n                  )}\n                </Form.Select>\n              </FloatingLabel>\n            </Col>\n            <Col lg={'auto'} md={6} sm={6}>\n              <FloatingLabel\n                label={t('search.results.displayOptions.sortingLabel')}\n                controlId=\"results-sorting\"\n              >\n                <Form.Select value={sorting} onChange={handleSortingChange}>\n                  <option value=\"default\">\n                    {t('search.results.displayOptions.sortingOptions.default')}\n                  </option>\n                  <option value=\"title-up\">\n                    {t('search.results.displayOptions.sortingOptions.title-up')}\n                  </option>\n                  <option value=\"title-down\">\n                    {t('search.results.displayOptions.sortingOptions.title-down')}\n                  </option>\n                  <option value=\"result-count-total-up\">\n                    {t('search.results.displayOptions.sortingOptions.result-count-total-up')}\n                  </option>\n                  <option value=\"result-count-total-down\">\n                    {t('search.results.displayOptions.sortingOptions.result-count-total-down')}\n                  </option>\n                </Form.Select>\n              </FloatingLabel>\n            </Col>\n            <Col lg={'auto'} md={12} sm={6} className=\"flex-fill order-xl-4\">\n              <FloatingLabel\n                label={t('search.results.displayOptions.resultFilterQueryLabel')}\n                controlId=\"result-filter\"\n              >\n                <DebouncedFuzzySearchInput\n                  disabled={sorting !== 'default' || true} // TODO: implement\n                  value={filter}\n                  onChange={(value) => setFilter(value)}\n                />\n              </FloatingLabel>\n            </Col>\n            <Col lg={'auto'} md={12} sm={12} className=\"align-content-center order-xl-3\">\n              <Form.Check\n                checked={showResourceDetails}\n                onChange={() => setShowResourceDetails((show) => !show)}\n                id=\"results-view-resource-details\"\n                label={t('search.results.displayOptions.optionShowResultDetails')}\n              />\n              <Form.Check\n                checked={showDiagnostics}\n                onChange={() => setShowDiagnostics((show) => !show)}\n                id=\"results-view-warnings-errors\"\n                label={t('search.results.displayOptions.optionShowWarningsErrors')}\n              />\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n\n      {searchId &&\n        data &&\n        sortedResults.map((result) => (\n          <ResourceSearchResult\n            searchId={searchId}\n            resourceId={result.id}\n            resultInfo={result}\n            viewMode={viewMode}\n            showResourceDetails={showResourceDetails}\n            showDiagnostics={showDiagnostics}\n            key={`${searchId}-${result.id}`}\n          />\n        ))}\n    </div>\n  )\n}\n\nexport default SearchResults\n","export default \"__VITE_ASSET__Dc8hwzzm__\"","export default \"__VITE_ASSET__CWrEyLdA__\"","import { useMutation, useQuery } from '@tanstack/react-query'\nimport { useEffect, useState } from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Toast from 'react-bootstrap/Toast'\nimport ToastContainer from 'react-bootstrap/ToastContainer'\nimport { Helmet } from 'react-helmet-async'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { useSearchParams } from 'react-router'\n\nimport { AggregatorDataProvider } from '@/providers/AggregatorDataContext'\nimport { useAxios } from '@/providers/AxiosContext'\nimport { SearchParamsProvider } from '@/providers/SearchParamsContext'\nimport AppStore from '@/stores/app'\nimport {\n  type ExtraScopingParams,\n  getInitData,\n  postSearch,\n  REQ_PARAM_CONSORTIA,\n  type Resource,\n} from '@/utils/api'\nimport { trackSiteSearch } from '@/utils/matomo'\nimport {\n  evaluateAggregationContext,\n  fromApi,\n  getResourceIDs,\n  getResourceIDsBySplit,\n} from '@/utils/resources'\nimport { type LanguageCode2NameMap } from '@/utils/search'\nimport SearchInput, { type SearchData } from './SearchInput'\nimport SearchResults from './SearchResults'\nimport { type ToastMessage } from './utils'\n\nimport fcsLogoDarkModeUrl from '@images/logo-fcs-dark.png'\nimport fcsLogoUrl from '@images/logo-fcs.png'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// component\n\nfunction Search() {\n  const axios = useAxios()\n  const { t } = useTranslation()\n\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams()\n\n  // REST API state\n  const [resources, setResources] = useState<Resource[]>([])\n  const [languages, setLanguages] = useState<LanguageCode2NameMap>({})\n  const [weblichtLanguages, setWeblichtLanguages] = useState<string[]>([])\n\n  const [searchResourceIDs, setSearchResourceIDs] = useState<string[] | null>(null)\n\n  const [hasSearch, setHasSearch] = useState(false)\n  const [searchParams, setSearchParams] = useState<SearchData | null>(null)\n\n  const [toasts, setToasts] = useState<ToastMessage[]>([])\n\n  const appTitleHead = AppStore.getState().appTitleHead\n  const isAuthenticated = AppStore.getState().isAuthenticated\n\n  // ------------------------------------------------------------------------\n  // initialization\n\n  const extraParams = {\n    consortia: urlSearchParams.get(REQ_PARAM_CONSORTIA),\n  } satisfies ExtraScopingParams\n  const { data, isLoading, isError } = useQuery({\n    queryKey: ['init'],\n    queryFn: getInitData.bind(null, axios, extraParams),\n  })\n\n  useEffect(() => {\n    if (!data) return\n\n    // do some initialization (based on `data`)\n    const newResources = fromApi(data.resources)\n\n    // set state\n    setLanguages(data.languages)\n    setWeblichtLanguages(data.weblichtLanguages)\n    setResources(newResources)\n\n    // initialization (hack) to select all resources\n    if (import.meta.env.FEATURE_AUTHENTICATION) {\n      // filter resources by authentication, free === true, false otherwise\n      const resourcesByAuth = getResourceIDsBySplit(newResources, (resource: Resource) =>\n        resource.availabilityRestriction === 'NONE' ? true : false\n      )\n      console.log('resourcesByAuth', resourcesByAuth)\n      const numberOfAuthOnlyRessources = (resourcesByAuth.get(false) ?? []).length\n      if (!isAuthenticated && numberOfAuthOnlyRessources > 0) {\n        console.log(\n          'Not authenticated, dropping resources from default selection',\n          resourcesByAuth.get(false)\n        )\n        const authFreeResources = resourcesByAuth.get(true)!\n        setSearchResourceIDs(authFreeResources)\n\n        setToasts((toasts) => [\n          ...toasts,\n          {\n            title: t('search.toasts.resourceSelection.title'),\n            body: (\n              <>\n                <Trans\n                  i18nKey=\"search.toasts.resourceSelection.msgAuthOnlyResourcesNotSelected\"\n                  count={numberOfAuthOnlyRessources}\n                />\n                <br />\n                <ul className=\"ps-3\">\n                  {(resourcesByAuth.get(false) ?? []).map((rid) => (\n                    <li key={rid} style={{ wordBreak: 'break-all', fontSize: '0.7rem' }}>\n                      {rid}\n                    </li>\n                  ))}\n                </ul>\n              </>\n            ),\n            variant: 'success',\n          },\n        ])\n      } else {\n        setSearchResourceIDs(getResourceIDs(newResources))\n      }\n    } else {\n      setSearchResourceIDs(getResourceIDs(newResources))\n    }\n  }, [data, isAuthenticated, t])\n\n  useEffect(() => {\n    console.debug('searchParams', urlSearchParams)\n    if (!resources || resources.length === 0) return\n\n    const aggregationContext = urlSearchParams.get('x-aggregation-context')\n    if (aggregationContext) {\n      try {\n        const endpoints2handles = JSON.parse(aggregationContext)\n\n        // TODO: evaluate if correct and what format\n        // TODO: support easier resource IDs list format\n\n        const { selected, unavailable } = evaluateAggregationContext(resources, endpoints2handles)\n        console.debug('aggregationContext', {\n          aggregationContext,\n          resources,\n          endpoints2handles,\n          evaluated: { selected, unavailable },\n        })\n\n        // TODO: check if selected resources require auth and user is unauthenticated?\n\n        if (selected.length > 0) {\n          setSearchResourceIDs(selected)\n\n          setToasts((toasts) => [\n            ...toasts,\n            {\n              title: t('search.toasts.resourceSelection.title'),\n              body: (\n                <>\n                  <Trans\n                    i18nKey=\"search.toasts.resourceSelection.msgPreselectedResources\"\n                    count={selected.length}\n                  />\n                  <br />\n                  <ul className=\"ps-3\">\n                    {selected.map((rid) => (\n                      <li style={{ wordBreak: 'break-all', fontSize: '0.7rem' }}>{rid}</li>\n                    ))}\n                  </ul>\n                </>\n              ),\n              variant: 'success',\n            },\n          ])\n        }\n        if (unavailable.length > 0) {\n          setToasts((toasts) => [\n            ...toasts,\n            {\n              title: t('search.toasts.resourceSelection.title'),\n              body: (\n                <>\n                  <Trans\n                    i18nKey=\"search.toasts.resourceSelection.msgUnableToSelectResources\"\n                    count={unavailable.length}\n                  />\n                  <br />\n                  <ul className=\"ps-3\">\n                    {unavailable.map((rid) => (\n                      <li style={{ wordBreak: 'break-all', fontSize: '0.7rem' }}>{rid}</li>\n                    ))}\n                  </ul>\n                </>\n              ),\n              variant: 'warning',\n            },\n          ])\n        }\n      } catch (error) {\n        console.error(\n          'Error trying to parse \"x-aggregation-context\" search parameter!',\n          {\n            aggregationContext,\n          },\n          error\n        )\n        if (error instanceof Error) {\n          setToasts((toasts) => [\n            ...toasts,\n            {\n              title: t('search.toasts.resourceSelection.title'),\n              body: (\n                <>\n                  {t('search.toasts.resourceSelection.msgErrorUnableToSelectResources', {\n                    error: error.name,\n                  })}\n                  <br />\n                  <small>{error.message}</small>\n                </>\n              ),\n              variant: 'error',\n            },\n          ])\n        }\n      }\n      // remove after use, will trigger next evaluation of URLSearchParams ...\n      // setUrlSearchParams((params) => (params.delete('x-aggregation-context'), params))\n      urlSearchParams.delete('x-aggregation-context')\n      setUrlSearchParams(urlSearchParams)\n    }\n  }, [resources, urlSearchParams, setUrlSearchParams, t])\n\n  // ------------------------------------------------------------------------\n\n  // on state update, this component is re-evaluated which re-evaluates the expressions below, too\n  const isInputDisabled = isLoading || isError\n  // console.debug('isInputDisabled', isInputDisabled, 'isLoading', isLoading, 'isError', isError)\n\n  // ------------------------------------------------------------------------\n  // search request\n\n  // the actual search\n  const {\n    mutate: mutateSearch,\n    data: searchId,\n    error: searchError,\n    isPending: isSearchPending,\n    isError: isSearchError,\n  } = useMutation({\n    mutationKey: ['search'],\n    mutationFn: ({ query, queryType, language, numberOfResults, resourceIDs }: SearchData) =>\n      postSearch(axios, {\n        query,\n        queryType,\n        language,\n        numberOfResults: numberOfResults.toString(),\n        resourceIds: resourceIDs,\n      }),\n  })\n  console.debug('searchId', { searchId, searchError, isSearchPending, isSearchError })\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleSearch(searchData: SearchData) {\n    console.debug('start search:', searchData)\n\n    setSearchResourceIDs(searchData.resourceIDs)\n\n    setSearchParams(searchData)\n    setHasSearch(true)\n\n    if (import.meta.env.FEATURE_TRACKING_MATOMO) {\n      trackSiteSearch(searchData.query, searchData.queryType)\n    }\n\n    mutateSearch(searchData)\n  }\n\n  function handleShowToast(toast: ToastMessage) {\n    setToasts((toasts) => [...toasts, toast])\n  }\n\n  // ------------------------------------------------------------------------\n  // utilities\n\n  // ------------------------------------------------------------------------\n  // UI\n\n  return (\n    <>\n      <Helmet>\n        <title>{appTitleHead}</title>\n      </Helmet>\n      <Container id=\"search\">\n        {/* toasters */}\n        <div aria-live=\"polite\" aria-atomic=\"true\" className=\"bg-dark position-relative\">\n          {/* TODO: animate? */}\n          <ToastContainer position=\"top-end\" className=\"mt-2\" style={{ zIndex: 100 }}>\n            {toasts.map((toast, index) => (\n              <Toast\n                bg={toast.variant}\n                key={index}\n                // show={toasts.find((oldToast) => oldToast === toast) !== undefined}\n                onClose={() =>\n                  setToasts((toasts) => toasts.filter((oldToast) => oldToast !== toast))\n                }\n                delay={toast.delay ?? 5000}\n                autohide\n              >\n                <Toast.Header closeButton={true}>\n                  <strong className=\"me-auto\">{toast.title}</strong>\n                </Toast.Header>\n                <Toast.Body>{toast.body}</Toast.Body>\n              </Toast>\n            ))}\n          </ToastContainer>\n        </div>\n\n        {/* logo image */}\n        {!hasSearch && (\n          <Row>\n            <Col className=\"text-center\">\n              <picture>\n                <source srcSet={fcsLogoUrl} media=\"(prefers-color-scheme: light)\" />\n                <source srcSet={fcsLogoDarkModeUrl} media=\"(prefers-color-scheme: dark)\" />\n                <img src={fcsLogoUrl} className=\"logo\" alt=\"FCS logo\" />\n              </picture>\n            </Col>\n          </Row>\n        )}\n\n        {/* search input */}\n        <Row className=\"mt-3\">\n          <Col>\n            <SearchInput\n              resources={resources}\n              languages={languages}\n              availableResources={null}\n              selectedResources={searchResourceIDs}\n              onSearch={handleSearch}\n              onShowToast={handleShowToast}\n              hasSearch={hasSearch}\n              disabled={isInputDisabled}\n            />\n          </Col>\n        </Row>\n\n        {/* short intro text on initial visit/site load */}\n        {!hasSearch && (\n          <Row className=\"mt-3\">\n            <Col>\n              <p>\n                <Trans i18nKey=\"search.intro.textGeneral\" />\n              </p>\n              <p>\n                <Trans\n                  i18nKey=\"search.intro.textLearnMore\"\n                  components={[\n                    <a href={t('search.intro.url')}>\n                      page <em>Content Search</em> at CLARIN.eu\n                    </a>,\n                  ]}\n                />\n              </p>\n            </Col>\n          </Row>\n        )}\n\n        {hasSearch && isSearchPending && (\n          <Row>\n            <Col className=\"text-center my-5\">\n              <Spinner animation=\"border\" />\n            </Col>\n          </Row>\n        )}\n        {searchParams && searchId && (\n          <AggregatorDataProvider\n            resources={resources}\n            languages={languages}\n            weblichtLanguages={weblichtLanguages}\n          >\n            <SearchParamsProvider {...searchParams}>\n              <SearchResults searchId={searchId} />\n            </SearchParamsProvider>\n          </AggregatorDataProvider>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Search\n","import { useCallback } from 'react'\nimport {\n  generatePath,\n  type NavigateOptions,\n  useNavigate as useReactRouterNavigate,\n} from 'react-router'\n\nimport useKeepSearchParams from './useKeepSearchParams'\n\n// --------------------------------------------------------------------------\n\n/**\n * Returns a `navigate` method to update the browser `location` using a route template path and optional params.\n *\n * @see {@link generatePath}\n * @see {@link navigate} returned hook method to perform navigation (update `location`)\n * @see {@link useReactRouterNavigate|useNavigate} `react-router`'s navigation hook\n * @see {@link useKeepSearchParams} used to persist certain search parameters after navigation\n * @category Hooks\n */\nexport default function useNavigate() {\n  const routerNavigate = useReactRouterNavigate()\n  const [search] = useKeepSearchParams()\n\n  /**\n   * Do a `location` update using a path and parameters.\n   *\n   * NOTE: will keep stable search parameters using {@link useKeepSearchParams}!\n   *\n   * @param originalPath template path\n   * @param params parameters for path interpolation\n   * @param options options for `react-router`'s {@link useReactRouterNavigate|useNavigate}\n   *\n   * @see {@link generatePath}\n   */\n  const navigate = useCallback(\n    (\n      originalPath: string,\n      params?: {\n        [key: string]: string | null\n      },\n      options?: NavigateOptions\n      // TODO: add option to ignore stable search params?\n    ) => {\n      const newPath = generatePath(originalPath, params)\n      console.debug('navigate', { newPath, originalPath, params, search, options })\n      routerNavigate({ pathname: newPath, search: search }, options)\n    },\n    [routerNavigate, search]\n  )\n\n  return navigate\n}\n","import { useContext } from 'react'\nimport { matchRoutes, UNSAFE_RouteContext, useLocation } from 'react-router'\n\n// --------------------------------------------------------------------------\n\n/**\n * Returns the `react-router` route match or `null` if no matching routes.\n *\n * NOTE: uses the {@link UNSAFE_RouteContext} interface to access defined routes!\n *\n * @see {@link useLocation}\n * @see {@link matchRoutes}\n * @category Hooks\n */\nexport default function useRouteMatch() {\n  const routeContext = useContext(UNSAFE_RouteContext)\n  const location = useLocation()\n\n  const routes = routeContext.matches.map((m) => m.route)\n  const routeMatch = matchRoutes(routes, location)\n\n  if (routeMatch !== null && routeMatch.length > 0) {\n    return routeMatch[0]\n  }\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\n// credit: https://stackoverflow.com/a/57706747/9360161\n// TODO: look into https://stackoverflow.com/a/59307806/9360161\n\nexport default function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","export const REQ_PARAM_RESOURCE_ID = 'resource'\n","import { useAxios } from '@/providers/AxiosContext'\nimport { useQuery, useQueryClient } from '@tanstack/react-query'\nimport { useEffect, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport { useTranslation } from 'react-i18next'\nimport { Link, useSearchParams } from 'react-router'\n\nimport LanguageModal from '@/components/LanguageModal'\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\nimport usePrevious from '@/hooks/usePrevious'\nimport { useLocaleStore } from '@/stores/locale'\nimport {\n  type AvailabilityRestriction,\n  type Consortium,\n  type ExtraScopingParams,\n  getLanguages,\n  getResources,\n  REQ_PARAM_CONSORTIA,\n  type Resource,\n  type SearchCapability,\n} from '@/utils/api'\nimport {\n  flattenResources,\n  fromApi,\n  getBestFromMultilingualValuesTryByLanguage,\n} from '@/utils/resources'\nimport { type LanguageCode2NameMap } from '@/utils/search'\nimport { REQ_PARAM_RESOURCE_ID } from './utils'\n\nimport eyeIcon from 'bootstrap-icons/icons/eye-fill.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n\ntype ResourceInstitutionVariantOptions = 'institution' | 'hoster'\ntype URLVariantOptions = 'url' | 'domain' | 'tld'\n\nconst DEFAULT_RESOURCE_INSTITUTION_VARIANT: ResourceInstitutionVariantOptions = 'institution'\nconst DEFAULT_URL_VARIANT: URLVariantOptions = 'url'\n\n// --------------------------------------------------------------------------\n\nfunction extractTLD(url: string): string {\n  // TODO: best effort TLD extraction\n  const domain = new URL(url).hostname\n  const parts = domain.split('.')\n\n  // this should not be possible\n  if (parts.length <= 1) return domain\n\n  const lastTLDPart = parts.at(-1)!\n\n  // if only two parts, the last is the TLD\n  if (parts.length === 2) return lastTLDPart\n\n  const preLastTLDPart = parts.at(-2)!\n\n  // NOTE: heuristic to check if parts are too short...\n  if (\n    (lastTLDPart.length === 2 && preLastTLDPart.length === 2) ||\n    (lastTLDPart.length === 3 && preLastTLDPart.length === 2)\n  ) {\n    return `${preLastTLDPart}.${lastTLDPart}`\n  }\n\n  return lastTLDPart\n}\n\nfunction extractMainDomain(url: string): string {\n  const tld = extractTLD(url)\n\n  const parsed = new URL(url)\n  const domain = parsed.hostname\n  const domainWithoutTLD = domain.slice(0, -(tld.length + 1))\n\n  const parts = domainWithoutTLD.split('.')\n  const mainDomainPart = parts.slice(-1)\n\n  const shortDomain = `${mainDomainPart}.${tld}`\n\n  if (parsed.port) {\n    return `${shortDomain}:${parsed.port}`\n  }\n  return shortDomain\n}\n\nfunction getSURT(url: string): string[] {\n  const parsed = new URL(url)\n  const domain = parsed.hostname\n  const domainSURT = domain.split('.').toReversed()\n  const restOfURL = url.substring(\n    url.indexOf('/', parsed.protocol.length + 2 + parsed.hostname.length)\n  )\n  // ignore protocol\n  return [...domainSURT, parsed.port, restOfURL]\n}\n\nfunction sortBySURT(urlA: string, urlB: string) {\n  const surtA = getSURT(urlA)\n  const surtB = getSURT(urlB)\n  const len = Math.min(surtA.length, surtB.length)\n  for (let i = 0; i < len; i++) {\n    const fragmentA = surtA[i]\n    const fragmentB = surtB[i]\n    const res = fragmentA.localeCompare(fragmentB)\n    if (res !== 0) return res\n  }\n  return 0\n}\n\n// --------------------------------------------------------------------------\n// component\n\nfunction FCSStatistics() {\n  const axios = useAxios()\n  const queryClient = useQueryClient()\n  const { t } = useTranslation()\n\n  const userLocale = useLocaleStore((state) => state.locale)\n  // const [locale, setLocale] = useState(userLocale)\n  // const langNames = new Intl.DisplayNames([userLocale, 'en'], { type: 'language' })\n\n  const [, getLinkSearch] = useKeepSearchParams()\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams()\n\n  const [resources, setResources] = useState<Resource[]>([])\n  const [resourcesAll, setResourcesAll] = useState<Resource[]>([])\n  const [languages, setLanguages] = useState<LanguageCode2NameMap>({})\n\n  const [selectedResourceInstitutionVariantOption, setSelectedResourceInstitutionVariantOption] =\n    useState<ResourceInstitutionVariantOptions>(DEFAULT_RESOURCE_INSTITUTION_VARIANT)\n  const [selectedEndpointURLVariantOption, setSelectedEndpointURLVariantOption] =\n    useState<URLVariantOptions>(DEFAULT_URL_VARIANT)\n  const [showLanguageSelectionModal, setShowLanguageSelectionModal] = useState(false)\n\n  // ------------------------------------------------------------------------\n  // initialization\n\n  const consortia = urlSearchParams.get(REQ_PARAM_CONSORTIA)?.split(',') ?? []\n\n  const extraParams = {\n    consortia: urlSearchParams.get(REQ_PARAM_CONSORTIA),\n  } satisfies ExtraScopingParams\n  const {\n    data: dataResources,\n    isPending: isPendingResources,\n    isError: isErrorResources,\n    error: errorResources,\n  } = useQuery({\n    queryKey: ['resources'],\n    queryFn: getResources.bind(null, axios, extraParams),\n  })\n  const {\n    data: dataLanguages,\n    isPending: isPendingLanguages,\n    isError: isErrorLanguages,\n    error: errorLanguages,\n  } = useQuery({\n    queryKey: ['languages'],\n    queryFn: getLanguages.bind(null, axios, extraParams),\n  })\n\n  // conditional data\n  const {\n    data: dataResourcesAll,\n    isPending: isPendingResourcesAll,\n    isError: isErrorResourcesAll,\n    error: errorResourcesAll,\n  } = useQuery({\n    queryKey: ['resources-all'],\n    queryFn: import.meta.env.SHOW_CONSORTIA_INFO\n      ? getResources.bind(null, axios, undefined)\n      : () => [],\n  })\n\n  useEffect(() => {\n    if (!dataResources) return\n    // do some initialization (based on `dataResources`)\n    const newResources = fromApi(dataResources)\n    // set state\n    setResources(newResources)\n  }, [dataResources])\n  useEffect(() => {\n    if (!dataLanguages) return\n    setLanguages(dataLanguages)\n  }, [dataLanguages])\n\n  if (import.meta.env.SHOW_CONSORTIA_INFO) {\n    // NOTE: intential for conditional build (either it exists or not)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!dataResourcesAll) return\n      setResourcesAll(fromApi(dataResourcesAll))\n    }, [dataResourcesAll])\n\n    // invalidate every query to refresh data\n    // BUT only run if consortia query param changed\n    // NOTE: needs to be delayed as API requests and URL change race each other...\n    const consortia = urlSearchParams.get(REQ_PARAM_CONSORTIA)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const prevConsortia = usePrevious(consortia)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const newConsortia = urlSearchParams.get(REQ_PARAM_CONSORTIA)\n      if (prevConsortia !== newConsortia) queryClient.invalidateQueries()\n    }, [prevConsortia, queryClient, urlSearchParams])\n  }\n\n  // ------------------------------------------------------------------------\n\n  const flatResources = flattenResources(resources)\n\n  const endpointURLsWithResources = flatResources.reduce((map, resource) => {\n    const url = resource.endpoint.url\n    if (!map.has(url)) map.set(url, [])\n    map.get(url)!.push(resource)\n    return map\n  }, new Map<string, Resource[]>())\n  const endpointDomainsWithURLs = Array.from(endpointURLsWithResources.keys()).reduce(\n    (map, url) => {\n      const domain = extractMainDomain(url)\n      if (!map.has(domain)) map.set(domain, [])\n      map.get(domain)!.push(url)\n      return map\n    },\n    new Map<string, string[]>()\n  )\n  const endpointTLDsWithURLs = Array.from(endpointURLsWithResources.keys()).reduce((map, url) => {\n    const tld = extractTLD(url)\n    if (!map.has(tld)) map.set(tld, [])\n    map.get(tld)!.push(url)\n    return map\n  }, new Map<string, string[]>())\n\n  const institutionsWithResources = flatResources.reduce((map, resource) => {\n    const institution =\n      getBestFromMultilingualValuesTryByLanguage(resource.institution, userLocale) ??\n      resource.endpointInstitution.name\n    if (!map.has(institution)) map.set(institution, [])\n    map.get(institution)!.push(resource)\n    return map\n  }, new Map<string, Resource[]>())\n  const endpointInstitutionsWithResources = flatResources.reduce((map, resource) => {\n    const institution = resource.endpointInstitution.name\n    if (!map.has(institution)) map.set(institution, [])\n    map.get(institution)!.push(resource)\n    return map\n  }, new Map<string, Resource[]>())\n\n  const searchCapabilitiesWithResources = flatResources.reduce((map, resource) => {\n    const capabilities = resource.searchCapabilitiesResolved\n    for (const capability of capabilities) {\n      if (!map.has(capability)) map.set(capability, [])\n      map.get(capability)!.push(resource)\n    }\n    return map\n  }, new Map<SearchCapability, Resource[]>())\n  const availabilityRestrictionsWithResources = flatResources.reduce((map, resource) => {\n    const restriction = resource.availabilityRestriction\n    if (!map.has(restriction)) map.set(restriction, [])\n    map.get(restriction)!.push(resource)\n    return map\n  }, new Map<AvailabilityRestriction, Resource[]>())\n\n  const consortiaWithResources = import.meta.env.SHOW_CONSORTIA_INFO\n    ? flattenResources(resourcesAll).reduce((map, resource) => {\n        const consortium = resource.endpointInstitution.consortium ?? null\n        if (!map.has(consortium)) {\n          map.set(consortium, { resources: [], endpoints: new Set<string>() })\n        }\n        const consortiumData = map.get(consortium)!\n        consortiumData.resources.push(resource)\n        consortiumData.endpoints.add(resource.endpoint.url)\n        return map\n      }, new Map<Consortium | null, { resources: Resource[]; endpoints: Set<string> }>())\n    : new Map<Consortium | null, { resources: Resource[]; endpoints: Set<string> }>()\n\n  const hasResources = resources && resources.length > 0\n  const hasLanguages = languages && Object.getOwnPropertyNames(languages).length > 0\n  const enableResourceLanguageSelectionModal = hasResources && hasLanguages\n\n  const hasResourcesWithAvailabilityRestriction =\n    Array.from(availabilityRestrictionsWithResources.keys()).filter(\n      (restriction) => restriction !== 'NONE'\n    ).length > 0\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function toggleConsortium(consortium: string) {\n    // compute the new list of consortia\n    const consortia = urlSearchParams.get(REQ_PARAM_CONSORTIA)?.split(',').filter(Boolean) ?? []\n    console.debug('Toggle consortia', { consortia, consortium })\n    const newConsortia = consortia.includes(consortium)\n      ? consortia.filter((c) => c !== consortium)\n      : consortia.concat([consortium])\n\n    // update our persistent query param\n    if (newConsortia.length === 0) {\n      urlSearchParams.delete(REQ_PARAM_CONSORTIA)\n    } else {\n      urlSearchParams.set(REQ_PARAM_CONSORTIA, newConsortia.join(','))\n    }\n    setUrlSearchParams(urlSearchParams)\n\n    // query invalidation happens above with usePrevious hook/state machine\n  }\n\n  // ------------------------------------------------------------------------\n  // rendering\n\n  function renderEndpointURLTable() {\n    if (selectedEndpointURLVariantOption === 'tld') {\n      return (\n        <Table hover responsive className=\"mt-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\">{t('statistics.fcs.thEndpointDomain')}</th>\n              <th scope=\"col\">{t('statistics.fcs.thCountURLsForDomain')}</th>\n              <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from(endpointTLDsWithURLs.entries())\n              .toSorted(([tldA], [tldB]) => sortBySURT(`http://${tldA}`, `http://${tldB}`))\n              .map(([domain, urls]) => {\n                const resources = urls.map((url) => endpointURLsWithResources.get(url)).flat()\n\n                return (\n                  <tr key={domain}>\n                    <td>{domain}</td>\n                    <td>{urls.length}</td>\n                    <td>{resources.length}</td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </Table>\n      )\n    }\n\n    if (selectedEndpointURLVariantOption === 'domain') {\n      return (\n        <Table hover responsive className=\"mt-2\">\n          <thead>\n            <tr>\n              <th scope=\"col\">{t('statistics.fcs.thEndpointDomain')}</th>\n              <th scope=\"col\">{t('statistics.fcs.thCountURLsForDomain')}</th>\n              <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from(endpointDomainsWithURLs.entries())\n              .toSorted(([urlA], [urlB]) => sortBySURT(`http://${urlA}`, `http://${urlB}`))\n              .map(([domain, urls]) => {\n                const resources = urls.map((url) => endpointURLsWithResources.get(url)).flat()\n\n                return (\n                  <tr key={domain}>\n                    <td>{domain}</td>\n                    <td>{urls.length}</td>\n                    <td>{resources.length}</td>\n                  </tr>\n                )\n              })}\n          </tbody>\n        </Table>\n      )\n    }\n\n    return (\n      <Table hover responsive className=\"mt-2\">\n        <thead>\n          <tr>\n            <th scope=\"col\">{t('statistics.fcs.thEndpointUrl')}</th>\n            <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Array.from(endpointURLsWithResources.entries())\n            .toSorted(([urlA], [urlB]) => sortBySURT(urlA, urlB))\n            .map(([url, resources]) => (\n              <tr key={url}>\n                <td>{url}</td>\n                <td>{resources.length}</td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    )\n  }\n\n  // ------------------------------------------------------------------------\n\n  return (\n    <Container className=\"d-grid gap-2 mt-3\">\n      {/* error / loading indicators */}\n      {(isPendingResources || isErrorResources) && (\n        <Row>\n          <Col>\n            {isPendingResources\n              ? t('statistics.loading', { context: 'what', what: 'resources' })\n              : null}\n            <br />\n            {isErrorResources ? errorResources.message : null}\n          </Col>\n        </Row>\n      )}\n      {(isPendingLanguages || isErrorLanguages) && (\n        <Row>\n          <Col>\n            {isPendingLanguages\n              ? t('statistics.loading', { context: 'what', what: 'languages' })\n              : null}\n            <br />\n            {isErrorLanguages ? errorLanguages.message : null}\n          </Col>\n        </Row>\n      )}\n      {import.meta.env.SHOW_CONSORTIA_INFO && (\n        <>\n          {(isPendingResourcesAll || isErrorResourcesAll) && (\n            <Row>\n              <Col>\n                {isPendingResourcesAll\n                  ? t('statistics.loading', { context: 'what', what: 'resources-all' })\n                  : null}\n                <br />\n                {isErrorResourcesAll ? errorResourcesAll.message : null}\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n\n      <Card className=\"p-3\">\n        <h3 className=\"h4 pb-1 mb-3 border-bottom\">{t('statistics.fcs.title')}</h3>\n\n        <h4 className=\"h5 pb-1 mb-3 border-bottom\" id=\"overview\">\n          {t('statistics.fcs.titleOverall')}\n        </h4>\n\n        <Table hover responsive>\n          <thead className=\"visually-hidden\">\n            <tr>\n              <th scope=\"col\">{t('statistics.fcs.thStatsKey')}</th>\n              <th scope=\"col\">{t('statistics.fcs.thStatsValue')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td scope=\"row\">{t('statistics.fcs.tdLabelResourceCount')}</td>\n              <td>{flatResources.length}</td>\n            </tr>\n            <tr>\n              <td scope=\"row\">{t('statistics.fcs.tdLabelEndpointCount')}</td>\n              <td>{endpointURLsWithResources.size}</td>\n            </tr>\n            <tr>\n              <td scope=\"row\">{t('statistics.fcs.tdLabelInstitutionCount')}</td>\n              <td>{endpointInstitutionsWithResources.size}</td>\n            </tr>\n          </tbody>\n        </Table>\n\n        {import.meta.env.SHOW_CONSORTIA_INFO && (\n          <>\n            <h4 className=\"h5 pb-1 mb-3 border-bottom\" id=\"consortia\">\n              {t('statistics.fcs.titleConsortia')}\n            </h4>\n\n            <Card className=\"my-2\">\n              <Card.Header>{t('statistics.fcs.cardHeaderConsortia')}</Card.Header>\n              <Card.Body>\n                <Table hover responsive className=\"mt-2\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">{t('statistics.fcs.thConsortium')}</th>\n                      <th scope=\"col\">{t('statistics.fcs.thCountEndpoints')}</th>\n                      <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n                      <th scope=\"col\">{t('statistics.fcs.thActions')}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Array.from(consortiaWithResources.entries()).map(\n                      ([consortium, { resources, endpoints }]) => (\n                        <tr\n                          key={consortium}\n                          className={\n                            consortium && consortia.includes(consortium)\n                              ? 'table-primary'\n                              : undefined\n                          }\n                        >\n                          <td>{consortium ?? t('statistics.fcs.tdNoConsortium')}</td>\n                          <td>{endpoints.size}</td>\n                          <td>{resources.length}</td>\n                          <td className={consortium === null ? '' : 'py-0 align-middle'}>\n                            {consortium === null ? (\n                              '–'\n                            ) : (\n                              <Button size=\"sm\" onClick={() => toggleConsortium(consortium)}>\n                                {t('statistics.fcs.btnToggleConsortium', {\n                                  context: consortia.includes(consortium) ? 'remove' : 'add',\n                                })}\n                              </Button>\n                            )}\n                          </td>\n                        </tr>\n                      )\n                    )}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </>\n        )}\n\n        <h4 className=\"h5 pb-1 mb-3 border-bottom\" id=\"institutions\">\n          {t('statistics.fcs.titleInstitutions')}\n        </h4>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderInstitutionStats')}</Card.Header>\n          <Card.Body>\n            <dl className=\"mb-0\">\n              <dt>{t('statistics.fcs.tdLabelInstitutionCount')}</dt>\n              <dd>{institutionsWithResources.size}</dd>\n              <dt>{t('statistics.fcs.tdLabelInstitutionHosterCount')}</dt>\n              <dd>{endpointInstitutionsWithResources.size}</dd>\n            </dl>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderInstitutions')}</Card.Header>\n          <Card.Body>\n            <Form onSubmit={(event) => event.preventDefault()}>\n              <Col className=\"filter-checkboxes\" lg={12} md={12}>\n                <Form.Text className=\"me-2\">\n                  {t('statistics.fcs.labelForResourceInstitutionVariants')}\n                </Form.Text>\n                {(['institution', 'hoster'] as ResourceInstitutionVariantOptions[]).map((type) => (\n                  <Form.Check\n                    key={type}\n                    type=\"radio\"\n                    name=\"resourceInstitutionVariant\"\n                    value={type}\n                    id={`resourceInstitutionVariant-${type}`}\n                    checked={selectedResourceInstitutionVariantOption === type}\n                    onChange={() => setSelectedResourceInstitutionVariantOption(type)}\n                    label={t(`statistics.fcs.resourceInstitutionVariant${type}`)}\n                  />\n                ))}\n              </Col>\n            </Form>\n\n            <Table hover responsive className=\"mt-2\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">{t('statistics.fcs.thInstitutionName')}</th>\n                  <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from(\n                  (selectedResourceInstitutionVariantOption === 'hoster'\n                    ? endpointInstitutionsWithResources\n                    : institutionsWithResources\n                  ).entries()\n                ).map(([institution, resources]) => (\n                  <tr key={institution}>\n                    <td>{institution}</td>\n                    <td>{resources.length}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n\n        <h4 className=\"h5 pb-1 mt-4 mb-3 border-bottom\" id=\"endpoints\">\n          {t('statistics.fcs.titleEndpoints')}\n        </h4>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderEndpointStats')}</Card.Header>\n          <Card.Body>\n            <dl className=\"mb-0\">\n              <dt>{t('statistics.fcs.tdLabelEndpointCount')}</dt>\n              <dd>{endpointURLsWithResources.size}</dd>\n              <dt>{t('statistics.fcs.tdLabelEndpointDomainCount')}</dt>\n              <dd>{endpointDomainsWithURLs.size}</dd>\n            </dl>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderEndpoints')}</Card.Header>\n          <Card.Body>\n            <Form onSubmit={(event) => event.preventDefault()}>\n              <Col className=\"filter-checkboxes\" lg={12} md={12}>\n                <Form.Text className=\"me-2\">\n                  {t('statistics.fcs.labelForResourceInstitutionVariants')}\n                </Form.Text>\n                {(['url', 'domain', 'tld'] as URLVariantOptions[]).map((type) => (\n                  <Form.Check\n                    key={type}\n                    type=\"radio\"\n                    name=\"endpointURLVariant\"\n                    value={type}\n                    id={`endpointURLVariant-${type}`}\n                    checked={selectedEndpointURLVariantOption === type}\n                    onChange={() => setSelectedEndpointURLVariantOption(type)}\n                    label={t(`statistics.fcs.endpointURLVariant${type}`)}\n                  />\n                ))}\n              </Col>\n            </Form>\n\n            {renderEndpointURLTable()}\n          </Card.Body>\n        </Card>\n\n        <h4 className=\"h5 pb-1 mb-3 border-bottom\" id=\"resources\">\n          {t('statistics.fcs.titleResources')}\n        </h4>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderResourceStats')}</Card.Header>\n          <Card.Body>\n            <dl className=\"mb-0\">\n              <dt>{t('statistics.fcs.tdLabelResourceCount')}</dt>\n              <dd>{flatResources.length}</dd>\n              <dt>{t('statistics.fcs.tdLabelRootResourceCount')}</dt>\n              <dd>{resources.length}</dd>\n              <dt>{t('statistics.fcs.tdLabelResourceWithAvailabilityRestrictionCount')}</dt>\n              <dd>\n                {\n                  Array.from(availabilityRestrictionsWithResources.entries())\n                    .filter(([restriction]) => restriction !== 'NONE')\n                    .map(([, resources]) => resources)\n                    .flat().length\n                }\n              </dd>\n            </dl>\n          </Card.Body>\n          {enableResourceLanguageSelectionModal && (\n            <Card.Footer className=\"d-flex gap-2\">\n              <Button variant=\"primary\" onClick={() => setShowLanguageSelectionModal(true)}>\n                {t('statistics.fcs.btnOpenResourceLanguageSelectionModal')}\n              </Button>\n            </Card.Footer>\n          )}\n        </Card>\n\n        <Card className=\"my-2\">\n          <Card.Header>{t('statistics.fcs.cardHeaderSearchCapabilities')}</Card.Header>\n          <Card.Body>\n            <Table hover responsive className=\"mt-2\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">{t('statistics.fcs.thSearchCapability')}</th>\n                  <th scope=\"col\">{t('statistics.fcs.thCountResources')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from(searchCapabilitiesWithResources.entries()).map(\n                  ([capability, resources]) => (\n                    <tr key={capability}>\n                      <td>{capability}</td>\n                      <td>{resources.length}</td>\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </Table>\n          </Card.Body>\n        </Card>\n\n        {hasResourcesWithAvailabilityRestriction && (\n          <Card className=\"my-2\">\n            <Card.Header>\n              {t('statistics.fcs.cardHeaderResourcesWithAvailabilityRestrictions')}\n            </Card.Header>\n            <Card.Body>\n              <Table hover responsive className=\"mt-2\">\n                <caption>{t('statistics.fcs.tblAvailabilityRestrictionCaption')}</caption>\n                <thead>\n                  <tr>\n                    <th scope=\"col\">{t('statistics.fcs.thAvailabilityRestriction')}</th>\n                    <th scope=\"col\">{t('statistics.fcs.thResourceTitle')}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Array.from(availabilityRestrictionsWithResources.entries())\n                    .filter(([restriction]) => restriction !== 'NONE')\n                    .map(([restriction, resources]) =>\n                      resources.map((resource) => (\n                        <tr key={resource.id}>\n                          <td>{restriction}</td>\n                          <td>\n                            {getBestFromMultilingualValuesTryByLanguage(resource.title, userLocale)}{' '}\n                            <Link\n                              to={{\n                                pathname: '/stats/resources',\n                                search: getLinkSearch({ [REQ_PARAM_RESOURCE_ID]: resource.id }),\n                              }}\n                            >\n                              <i\n                                dangerouslySetInnerHTML={{ __html: eyeIcon }}\n                                className=\"align-baseline ms-2\"\n                              />\n                            </Link>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        )}\n      </Card>\n\n      <LanguageModal\n        languages={languages}\n        resources={resources}\n        showResourceCounts={true}\n        showLanguageFilterOptions={false}\n        show={showLanguageSelectionModal}\n        onModalClose={() => setShowLanguageSelectionModal(false)}\n      />\n    </Container>\n  )\n}\n\nexport default FCSStatistics\n","import { Highlight } from '@nozbe/microfuzz/react'\nimport { useQuery } from '@tanstack/react-query'\nimport { Fragment, useEffect, useState } from 'react'\nimport Badge from 'react-bootstrap/Badge'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport { useTranslation } from 'react-i18next'\nimport { Link, useSearchParams } from 'react-router'\n\nimport useFuzzySearchListWithHierarchy, {\n  type FuzzyMatchesByField,\n} from '@/hooks/useFuzzySearchListWithHierarchy'\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\nimport { useAxios } from '@/providers/AxiosContext'\nimport { useLocaleStore } from '@/stores/locale'\nimport {\n  type ExtraScopingParams,\n  getResources,\n  REQ_PARAM_CONSORTIA,\n  type Resource,\n} from '@/utils/api'\nimport {\n  findResourceByFilter,\n  fromApi,\n  getBestFromMultilingualValuesTryByLanguage,\n  getBestLanguageFromMultilingualValuesTryByLanguage,\n  getLanguagesFromResourceInfo,\n  SORT_FNS,\n} from '@/utils/resources'\nimport { REQ_PARAM_RESOURCE_ID } from './utils'\n\nimport eyeIcon from 'bootstrap-icons/icons/eye-fill.svg?raw'\nimport houseDoorIcon from 'bootstrap-icons/icons/house-door.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// component\n\nfunction ResourcesDetails({ validatorUrl }: { validatorUrl: string | null }) {\n  const axios = useAxios()\n  const { t } = useTranslation()\n\n  const userLocale = useLocaleStore((state) => state.locale)\n  const [locale, setLocale] = useState(userLocale)\n\n  const langNames = new Intl.DisplayNames([userLocale, 'en'], { type: 'language' })\n\n  const [, getLinkSearch] = useKeepSearchParams()\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams()\n\n  const [resources, setResources] = useState<Resource[]>([])\n  const [filter, setFilter] = useState('')\n  const [selectedResourceId, setSelectedResourceId] = useState<string | null>(\n    urlSearchParams.get(REQ_PARAM_RESOURCE_ID)\n  )\n\n  // iff resourceId is a resourceHandle\n  // redirect to full endpointUrl#resourceHandle == resourceId format\n  const resourceFoundById = findResourceByFilter(\n    resources,\n    (resource: Resource) => resource.id === selectedResourceId\n  )\n  if (resourceFoundById === undefined) {\n    const resourceFoundByHandle = findResourceByFilter(\n      resources,\n      (resource: Resource) => resource.handle === selectedResourceId\n    )\n    if (resourceFoundByHandle !== undefined) {\n      const newResourceId = resourceFoundByHandle.id\n      if (newResourceId !== selectedResourceId) {\n        setSelectedResourceId(newResourceId)\n        urlSearchParams.set(REQ_PARAM_RESOURCE_ID, newResourceId)\n        setUrlSearchParams(urlSearchParams)\n      }\n    }\n  }\n\n  const selectedResource = selectedResourceId ? resourceFoundById : undefined\n\n  // ------------------------------------------------------------------------\n  // initialization\n\n  const extraParams = {\n    consortia: urlSearchParams.get(REQ_PARAM_CONSORTIA),\n  } satisfies ExtraScopingParams\n  const { data, isPending, isError, error } = useQuery({\n    queryKey: ['resources'],\n    queryFn: getResources.bind(null, axios, extraParams),\n  })\n\n  useEffect(() => {\n    if (!data) return\n    // do some initialization (based on `data`)\n    const newResources = fromApi(data)\n    // set state\n    setResources(newResources)\n  }, [data])\n\n  useEffect(() => {\n    const newResourceId = urlSearchParams.get(REQ_PARAM_RESOURCE_ID)\n    if (!newResourceId) return\n    if (newResourceId === selectedResourceId) return\n    // TODO: check if resource id exists?\n    console.debug('Set selected resource from URLSearchParams', newResourceId)\n    setSelectedResourceId(newResourceId)\n  }, [urlSearchParams, selectedResourceId])\n\n  // languages for resource infos (title/description/institution)\n  const resourceInfoLanguages = resources\n    .map((resource) => getLanguagesFromResourceInfo(resource))\n    .flat()\n  const resourceInfoLanguagesGrouped = resourceInfoLanguages.reduce(\n    (acc, cur) => acc.set(cur, (acc.get(cur) ?? 0) + 1),\n    new Map()\n  )\n\n  // sort resources\n  const sortedResources = resources.toSorted(SORT_FNS['title-up'])\n  // filter resources (dropdown)\n  const { resources: filteredResources, matches: filteredResourcesHighlights } =\n    useFuzzySearchListWithHierarchy(filter, sortedResources, locale, ['title', 'institution'])\n\n  // ------------------------------------------------------------------------\n  // event handlers\n\n  function handleChangeResource(eventKey: string | null) {\n    if (!eventKey) return\n\n    const newResourceId = eventKey\n    // set selection\n    setSelectedResourceId(newResourceId)\n    // update url search parameter\n    urlSearchParams.set(REQ_PARAM_RESOURCE_ID, newResourceId)\n    setUrlSearchParams(urlSearchParams)\n  }\n\n  // ------------------------------------------------------------------------\n  // rendering\n\n  function renderResourceDropdownItem(\n    resource: Resource,\n    highlightings?: Map<string, FuzzyMatchesByField>,\n    nestLevel: number = 0\n  ): JSX.Element {\n    const highlighting = highlightings?.get(resource.id) ?? new Map()\n\n    const item = (\n      <Dropdown.Item\n        key={resource.id}\n        eventKey={resource.id}\n        style={{ paddingInlineStart: `${1 + nestLevel * 1}em` }}\n        // as=\"button\"\n        // onClick={(event) => event.preventDefault()}\n      >\n        <Highlight\n          text={getBestFromMultilingualValuesTryByLanguage(resource.title, locale) ?? ''}\n          ranges={highlighting.get('title') ?? null}\n        />\n      </Dropdown.Item>\n    )\n\n    if (resource.subResources && resource.subResources.length > 0) {\n      return (\n        <Fragment key={resource.id}>\n          {item}\n          {resource.subResources.map((subResource) =>\n            renderResourceDropdownItem(subResource, filteredResourcesHighlights, nestLevel + 1)\n          )}\n        </Fragment>\n      )\n    }\n\n    return item\n  }\n\n  function renderResourceMetadataField(\n    fieldType: string,\n    fieldValues: string | { [language: string]: string } | null,\n    fallbackEmptyValue: string = '–'\n  ) {\n    if (fieldValues === null) return null\n\n    const selectedLanguage = getBestLanguageFromMultilingualValuesTryByLanguage(\n      fieldValues,\n      userLocale\n    )\n\n    return (\n      <Card className=\"my-2\">\n        <Card.Header>\n          {t(`statistics.resources.cardHeader${fieldType[0].toUpperCase()}${fieldType.slice(1)}`)}\n        </Card.Header>\n        {typeof fieldValues === 'string' ? (\n          <Card.Body>{fieldValues || fallbackEmptyValue}</Card.Body>\n        ) : (\n          <ListGroup className=\"list-group-flush\">\n            {Object.entries(fieldValues).map(([language, value]) => (\n              <ListGroup.Item key={language}>\n                <Badge\n                  bg={selectedLanguage === language ? 'primary' : 'secondary'}\n                  className=\"me-2\"\n                >\n                  {langNames.of(language)} <sup>{language}</sup>\n                </Badge>{' '}\n                {value || fallbackEmptyValue}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Card>\n    )\n  }\n\n  function renderResourceHierarchy(resource: Resource) {\n    if (!resources) return null\n    if (!resource) return null\n\n    const rootResource =\n      resource.rootResourceId === null\n        ? resource\n        : findResourceByFilter(resources, (r: Resource) => r.id === resource.rootResourceId)\n    if (!rootResource) return null\n\n    function renderRecursiveResourceHierarchy(resourceInHierarchy: Resource) {\n      return (\n        <li key={resourceInHierarchy.id}>\n          {resourceInHierarchy.id === resource.id ? (\n            <strong>{resourceInHierarchy.handle}</strong>\n          ) : (\n            <>\n              {resourceInHierarchy.handle}\n              <Link\n                to={{ search: getLinkSearch({ [REQ_PARAM_RESOURCE_ID]: resourceInHierarchy.id }) }}\n                onClick={(event) => {\n                  event.preventDefault()\n                  handleChangeResource(resourceInHierarchy.id)\n                }}\n              >\n                <i\n                  dangerouslySetInnerHTML={{ __html: eyeIcon }}\n                  className=\"align-baseline ms-2 me-1\"\n                />\n              </Link>\n            </>\n          )}{' '}\n          – {getBestFromMultilingualValuesTryByLanguage(resourceInHierarchy.title, userLocale)}\n          {resourceInHierarchy.subResources.length > 0 && (\n            <ul>\n              {resourceInHierarchy.subResources.map((subResource) =>\n                renderRecursiveResourceHierarchy(subResource)\n              )}\n            </ul>\n          )}\n        </li>\n      )\n    }\n\n    return <ul>{renderRecursiveResourceHierarchy(rootResource)}</ul>\n  }\n\n  // ------------------------------------------------------------------------\n\n  const showLexDVInfo =\n    selectedResource &&\n    (selectedResource.availableDataViews?.find(\n      (dv) => dv.mimeType === 'application/x-clarin-fcs-lex+xml'\n    ) ||\n      (selectedResource.availableLexFields && selectedResource.availableLexFields.length > 0))\n\n  const showAdvDVInfo =\n    selectedResource &&\n    (selectedResource.availableDataViews?.find(\n      (dv) => dv.mimeType === 'application/x-clarin-fcs-adv+xml'\n    ) ||\n      (selectedResource.availableLayers && selectedResource.availableLayers.length > 0))\n\n  return (\n    <Container className=\"d-grid gap-2 mt-3\">\n      {(isPending || isError) && (\n        <Row>\n          <Col>\n            {isPending ? t('statistics.loading') : null}\n            <br />\n            {isError ? error.message : null}\n          </Col>\n        </Row>\n      )}\n\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <Dropdown onSelect={handleChangeResource}>\n          <Dropdown.Toggle className=\"resource-selector\" variant=\"outline-dark\">\n            {t('statistics.resources.dropdownLabel', { count: resources.length })}{' '}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.ItemText>\n              <Form.Control value={filter} onChange={(event) => setFilter(event.target.value)} />\n\n              {resourceInfoLanguagesGrouped.size > 1 && (\n                <Form.Group as={Row} controlId=\"resource-info-language\" className=\"mt-2\">\n                  <Form.Label column sm=\"auto\" style={{ fontSize: '0.875rem' }}>\n                    {t('search.resourcesModal.labelChangeResourceInfoLanguage')}\n                  </Form.Label>\n                  <Col sm=\"auto\">\n                    <ToggleButtonGroup\n                      type=\"radio\"\n                      name=\"resource-info-languages\"\n                      defaultValue={locale}\n                      onChange={(language) => setLocale(language)}\n                    >\n                      {Array.from(resourceInfoLanguagesGrouped.entries())\n                        .toSorted()\n                        .map(([language, amount]) => (\n                          <ToggleButton\n                            size=\"sm\"\n                            key={language}\n                            id={`resource-info-languages-${language}`}\n                            value={language}\n                            variant=\"secondary\"\n                            title={t(\n                              'search.resourcesModal.buttonChangeResourceInfoLanguageTitle',\n                              {\n                                count: amount,\n                                language,\n                                languageName: langNames.of(language),\n                              }\n                            )}\n                          >\n                            {langNames.of(language)} <sup>{language}</sup>\n                          </ToggleButton>\n                        ))}\n                    </ToggleButtonGroup>\n                  </Col>\n                </Form.Group>\n              )}\n            </Dropdown.ItemText>\n\n            <Dropdown.Divider />\n            {filteredResources.map((resource) =>\n              renderResourceDropdownItem(resource, filteredResourcesHighlights)\n            )}\n          </Dropdown.Menu>\n        </Dropdown>\n      </Form>\n\n      {selectedResource && (\n        <Card className=\"p-3 mt-3\">\n          <h3 className=\"h4 pb-1 mb-3 border-bottom\">\n            {getBestFromMultilingualValuesTryByLanguage(selectedResource.title, userLocale)}\n          </h3>\n\n          <h4 className=\"h5 pb-1 mb-3 border-bottom\">\n            {t('statistics.resources.titleBasicMetadata')}\n          </h4>\n\n          {renderResourceMetadataField('title', selectedResource.title)}\n          {renderResourceMetadataField('description', selectedResource.description)}\n          {renderResourceMetadataField('institution', selectedResource.institution)}\n          {selectedResource.landingPage && (\n            <Card className=\"my-2\">\n              <Card.Header>{t('statistics.resources.cardHeaderLandingPage')}</Card.Header>\n              <Card.Body>\n                <a href={selectedResource.landingPage} className=\"matomo_link\" target=\"_blank\">\n                  {selectedResource.landingPage}\n                </a>\n              </Card.Body>\n            </Card>\n          )}\n\n          <h4 className=\"h5 pb-1 mt-4 mb-3 border-bottom\">\n            {t('statistics.resources.titleTechnicalMetadata')}\n          </h4>\n\n          <Card className=\"my-2\">\n            <Card.Header>{t('statistics.resources.cardHeaderResource')}</Card.Header>\n            <Card.Body>\n              <dl className=\"mb-0\">\n                <dt>{t('statistics.labels.resourcePid')}</dt>\n                <dd>{selectedResource.handle}</dd>\n                <dt>{t('statistics.labels.resourceHierarchy')}</dt>\n                <dd>{renderResourceHierarchy(selectedResource)}</dd>\n                <dt>{t('statistics.labels.searchCapabilitiesOfResource')}</dt>\n                <dd>{selectedResource.searchCapabilitiesResolved.join(', ')}</dd>\n                <dt>{t('statistics.labels.availabilityRestriction')}</dt>\n                <dd>{selectedResource.availabilityRestriction}</dd>\n              </dl>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"my-2\">\n            <Card.Header>{t('statistics.resources.cardHeaderEndpoint')}</Card.Header>\n            <Card.Body>\n              <dl className=\"mb-0\">\n                <dt>{t('statistics.labels.endpointUrl')}</dt>\n                <dd>\n                  {selectedResource.endpoint.url}{' '}\n                  {validatorUrl && (\n                    <>\n                      {' '}\n                      <a\n                        href={`${validatorUrl}?url=${encodeURIComponent(\n                          selectedResource.endpoint.url\n                        )}`}\n                        className=\"matomo_link\"\n                        target=\"_blank\"\n                      >\n                        <i\n                          dangerouslySetInnerHTML={{ __html: eyeIcon }}\n                          className=\"align-baseline ms-2\"\n                        />\n                      </a>\n                    </>\n                  )}\n                </dd>\n                {/* TODO: add sideloaded status? */}\n                <dt>{t('statistics.labels.fcsVersion')}</dt>\n                <dd>{selectedResource.endpoint.protocol}</dd>\n                <dt>{t('statistics.labels.searchCapabilitiesOfEndpoint')}</dt>\n                <dd>{selectedResource.endpoint.searchCapabilities.join(', ')}</dd>\n                <dt>{t('statistics.labels.endpointInstitution')}</dt>\n                <dd>\n                  {selectedResource.endpointInstitution.name}\n                  {selectedResource.endpointInstitution.link && (\n                    <>\n                      {' – '}\n                      <a\n                        href={selectedResource.endpointInstitution.link}\n                        className=\"matomo_link\"\n                        target=\"_blank\"\n                      >\n                        {t('statistics.labels.moreInformation')}{' '}\n                        <i dangerouslySetInnerHTML={{ __html: houseDoorIcon }} />\n                      </a>\n                    </>\n                  )}\n                </dd>\n              </dl>\n            </Card.Body>\n          </Card>\n\n          <h4 className=\"h5 pb-1 mt-4 mb-3 border-bottom\">\n            {t('statistics.resources.titleSeachInformation')}\n          </h4>\n\n          <Card className=\"my-2\">\n            <Card.Header>{t('statistics.resources.cardHeaderDataViews')}</Card.Header>\n            <Card.Body>\n              {selectedResource.availableDataViews && (\n                <Table hover responsive>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">{t('statistics.resources.thDataViewIdentifier')}</th>\n                      <th scope=\"col\">{t('statistics.resources.thDataViewMimeType')}</th>\n                      <th scope=\"col\">{t('statistics.resources.thDataViewDeliveryPolicy')}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {selectedResource.availableDataViews.map((dv) => (\n                      <tr key={dv.identifier}>\n                        <td>{dv.identifier}</td>\n                        <td>{dv.mimeType}</td>\n                        <td>{dv.deliveryPolicy}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card.Body>\n          </Card>\n\n          {showAdvDVInfo && (\n            <Card className=\"my-2\">\n              <Card.Header>{t('statistics.resources.cardHeaderAdvancedDataView')}</Card.Header>\n              <Card.Body>\n                {selectedResource.availableLayers && (\n                  <Table hover responsive>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">{t('statistics.resources.thLayerType')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thQualifier')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thResultId')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thIdentifier')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thEncoding')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thAltValueInfo')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thAltValueInfoURI')}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {selectedResource.availableLayers.map((layer) => (\n                        <tr key={layer.identifier}>\n                          <td>{layer.layerType}</td>\n                          <td>{layer.qualifier}</td>\n                          <td>{layer.resultId}</td>\n                          <td>{layer.identifier}</td>\n                          <td>{layer.encoding}</td>\n                          <td>{layer.altValueInfo}</td>\n                          <td>{layer.altValueInfoURI}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n              </Card.Body>\n            </Card>\n          )}\n\n          {showLexDVInfo && (\n            <Card className=\"my-2\">\n              <Card.Header>{t('statistics.resources.cardHeaderLexDataView')}</Card.Header>\n              <Card.Body>\n                {selectedResource.availableLexFields && (\n                  <Table hover responsive>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">{t('statistics.resources.thLexFieldType')}</th>\n                        <th scope=\"col\">{t('statistics.resources.thLexIdentifier')}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {selectedResource.availableLexFields.map((field) => (\n                        <tr key={field.id}>\n                          <td>{field.type}</td>\n                          <td>{field.id}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n              </Card.Body>\n            </Card>\n          )}\n        </Card>\n      )}\n    </Container>\n  )\n}\n\nexport default ResourcesDetails\n","import type { HighlightRanges } from '@nozbe/microfuzz'\nimport { Highlight } from '@nozbe/microfuzz/react'\nimport Alert from 'react-bootstrap/Alert'\nimport Badge from 'react-bootstrap/Badge'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router'\nimport slugify from 'react-slugify'\nimport { Fragment } from 'react/jsx-runtime'\n\nimport useKeepSearchParams from '@/hooks/useKeepSearchParams'\nimport type { InstitutionEndpointInfo, StatisticsResourceInfo } from '@/utils/api'\nimport { REQ_PARAM_RESOURCE_ID } from './utils'\n\nimport exclamationTriangleIcon from 'bootstrap-icons/icons/exclamation-triangle.svg?raw'\nimport eyeIcon from 'bootstrap-icons/icons/eye-fill.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// component\n\nfunction EndpointStatistics({\n  url,\n  statistics,\n  validatorUrl,\n  isScan,\n}: {\n  url: string\n  statistics: InstitutionEndpointInfo & {\n    matchEndpoint: HighlightRanges | null\n    matchResources: (HighlightRanges | null)[]\n  }\n  validatorUrl: string | null\n  isScan: boolean\n}) {\n  const { t, i18n } = useTranslation()\n  const [, getLinkSearch] = useKeepSearchParams()\n\n  const secondsFormatter = new Intl.NumberFormat(i18n.language, {\n    style: 'unit',\n    unit: 'second',\n    unitDisplay: 'short',\n  })\n\n  function renderResourceWithInfos(resInfo: StatisticsResourceInfo, idx: number) {\n    const resourceInner = (\n      <Highlight text={resInfo.title} ranges={statistics.matchResources?.[idx] ?? null} />\n    )\n    const linkToResourceInfo = (\n      <Link\n        to={{\n          pathname: '/stats/resources',\n          search: getLinkSearch({ [REQ_PARAM_RESOURCE_ID]: resInfo.handle }),\n        }}\n      >\n        <i dangerouslySetInnerHTML={{ __html: eyeIcon }} className=\"align-baseline ms-2\" />\n      </Link>\n    )\n\n    if (resInfo.valid && resInfo.notes.length === 0) {\n      return (\n        <>\n          {resourceInner} {linkToResourceInfo}\n        </>\n      )\n    }\n\n    return (\n      <OverlayTrigger\n        placement=\"auto-start\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={\n          <Tooltip id={`resource-info-warning-${resInfo.handle}`}>\n            {!resInfo.valid && t('statistics.errors.notAvailableInAggregator')}\n            {!resInfo.valid && resInfo.notes.length >= 1 && <hr className=\"mt-2 mb-1\" />}\n            {resInfo.notes.length === 1 ? (\n              resInfo.notes[0]\n            ) : resInfo.notes.length >= 1 ? (\n              <ul className=\"text-start m-0 my-1 ps-3\">\n                {resInfo.notes.map((note, idx) => (\n                  <li key={idx}>{note}</li>\n                ))}\n              </ul>\n            ) : null}\n          </Tooltip>\n        }\n      >\n        <span>\n          <i\n            dangerouslySetInnerHTML={{ __html: exclamationTriangleIcon }}\n            className=\"align-baseline me-2\"\n          />\n          {!resInfo.valid ? <s>{resourceInner}</s> : resourceInner} {linkToResourceInfo}\n        </span>\n      </OverlayTrigger>\n    )\n  }\n\n  return (\n    <div className=\"ps-sm-4 mt-sm-0 mt-2 pt-sm-0 pt-1\" key={url}>\n      <h4 className=\"h5\" id={`${slugify(url)}-${isScan ? 'scan' : 'search'}`}>\n        <Highlight text={url} ranges={statistics.matchEndpoint} />\n        {validatorUrl && (\n          <>\n            {' '}\n            <a href={`${validatorUrl}?url=${encodeURIComponent(url)}`}>\n              <i dangerouslySetInnerHTML={{ __html: eyeIcon }} className=\"align-baseline ms-2\" />\n            </a>\n          </>\n        )}\n      </h4>\n      <dl className=\"ps-sm-4\">\n        <dt>{t('statistics.labels.fcsVersion')}</dt>\n        <dd>{statistics.version}</dd>\n        <dt>{t('statistics.labels.searchCapabilities')}</dt>\n        <dd>{statistics.searchCapabilities.join(', ')}</dd>\n        <dt>{t('statistics.labels.maxConcurrentScanRequests')}</dt>\n        <dd>{statistics.maxConcurrentRequests}</dd>\n        <dt>{t('statistics.labels.requestStatistics')}</dt>\n        <dd className=\"mb-0\">\n          {t('statistics.labels.numberOfRequests', { count: statistics.numberOfRequests })}\n        </dd>\n        {statistics.avgQueueTime !== 0 && (\n          <dd className=\"mb-0\">\n            {t('statistics.labels.queueTime', {\n              avg: secondsFormatter.format(statistics.avgQueueTime),\n              max: secondsFormatter.format(statistics.maxQueueTime),\n            })}\n          </dd>\n        )}\n        <dd>\n          {t('statistics.labels.executionTime', {\n            avg: secondsFormatter.format(statistics.avgExecutionTime),\n            max: secondsFormatter.format(statistics.maxExecutionTime),\n          })}\n        </dd>\n        {statistics.rootResources?.length > 0 && (\n          <>\n            <dt>{t('statistics.labels.resources')}</dt>\n            <dd>\n              {t('statistics.labels.numberOfRootResources', {\n                count: statistics.rootResources.length,\n              })}\n            </dd>\n            <dd>\n              <ul>\n                {statistics.rootResources.map((nameOrResInfo, idx) =>\n                  typeof nameOrResInfo === 'string' ? (\n                    <li key={nameOrResInfo}>\n                      <Highlight\n                        text={nameOrResInfo}\n                        ranges={statistics.matchResources?.[idx] ?? null}\n                      />\n                    </li>\n                  ) : (\n                    <li key={nameOrResInfo.handle}>\n                      {renderResourceWithInfos(nameOrResInfo, idx)}\n                    </li>\n                  )\n                )}\n              </ul>\n            </dd>\n          </>\n        )}\n        <Fragment>\n          {Object.entries(statistics.diagnostics || {}).map(([reason, info]) => (\n            <Alert variant=\"warning\" key={reason} style={{ fontSize: '0.85rem' }}>\n              <Alert.Heading style={{ fontSize: '1rem' }}>\n                <Badge bg=\"warning\">{info.counter}x</Badge>{' '}\n                <span className=\"text-uppercase\">{t('statistics.diagnostic.diagnostic')}</span>{' '}\n                {info.diagnostic.message}\n                {info.diagnostic.diagnostic && (\n                  <>\n                    {' - '}\n                    <small>{info.diagnostic.diagnostic}</small>\n                  </>\n                )}\n              </Alert.Heading>\n              <p className=\"mb-0\">\n                {t('statistics.diagnostic.context')} <a href={info.context}>{info.context}</a>\n              </p>\n            </Alert>\n          ))}\n          {Object.entries(statistics.errors || {}).map(([reason, info]) => (\n            <Alert variant=\"danger\" key={reason} style={{ fontSize: '0.85rem' }}>\n              <Alert.Heading style={{ fontSize: '1rem' }}>\n                <Badge bg=\"danger\">{info.counter}x</Badge>{' '}\n                <span className=\"text-uppercase\">{t('statistics.diagnostic.exception')}</span>{' '}\n                {info.exception.message}\n              </Alert.Heading>\n              <p className=\"mb-0\">\n                {t('statistics.diagnostic.context')} <a href={info.context}>{info.context}</a>\n              </p>\n              {info.exception.cause && (\n                <p className=\"mb-0\">\n                  {t('statistics.diagnostic.causedBy')} {info.exception.cause}\n                </p>\n              )}\n            </Alert>\n          ))}\n        </Fragment>\n      </dl>\n    </div>\n  )\n}\n\nexport default EndpointStatistics\n","import type { HighlightRanges } from '@nozbe/microfuzz'\nimport { Highlight, useFuzzySearchList } from '@nozbe/microfuzz/react'\nimport { useMemo, useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Card from 'react-bootstrap/Card'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { useTranslation } from 'react-i18next'\nimport slugify from 'react-slugify'\n\nimport type { InstitutionEndpointInfo, StatisticsSection } from '@/utils/api'\nimport EndpointStatistics from './EndpointStatistics'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\ntype FilterField = 'institution' | 'endpoint' | 'resources'\n\n// --------------------------------------------------------------------------\n// component\n\nfunction SectionStatistics({\n  data,\n  validatorUrl,\n}: {\n  data: StatisticsSection\n  validatorUrl: string | null\n}) {\n  const { t, i18n } = useTranslation()\n\n  const [filter, setFilter] = useState('')\n  const [filterFields, setFilterFields] = useState<FilterField[]>([\n    'institution',\n    'endpoint',\n    'resources',\n  ])\n  const [showIssuesOnly, setShowIssuesOnly] = useState(false)\n\n  const idSuffix = `-${data.isScan ? 'scan' : 'search'}`\n\n  // make it flat\n  const flatData = useMemo(\n    () =>\n      Object.entries(data.institutions)\n        .toSorted()\n        .map(([institutionName, institutionEndpoints]) =>\n          Object.entries(institutionEndpoints)\n            .toSorted()\n            .map(([endpointUrl, endpointInfo]) => ({\n              institutionName,\n              endpointUrl,\n              endpointInfo: {\n                ...endpointInfo,\n                rootResources: endpointInfo.rootResources.toSorted(),\n              },\n            }))\n        )\n        .flat(1)\n        .filter(\n          showIssuesOnly\n            ? (item) =>\n                Object.keys(item.endpointInfo.diagnostics).length > 0 ||\n                Object.keys(item.endpointInfo.errors).length > 0\n            : () => true\n        ),\n    [data, showIssuesOnly]\n  )\n  const endpointsWithIssues = flatData.filter(\n    (item) =>\n      Object.keys(item.endpointInfo.diagnostics).length > 0 ||\n      Object.keys(item.endpointInfo.errors).length > 0\n  )\n\n  // filter by user query\n  const filteredData = useFuzzySearchList({\n    list: flatData,\n    queryText: filter,\n    // search on institution name, endpoint url and on each (root) resource name\n    getText: (item) => {\n      const strings = []\n      if (filterFields.length === 0) {\n        strings.push(\n          ...[\n            item.institutionName,\n            item.endpointUrl,\n            ...item.endpointInfo.rootResources.map((strOrObj) =>\n              typeof strOrObj === 'string' ? strOrObj : strOrObj.title\n            ),\n          ]\n        )\n      } else {\n        if (filterFields.includes('institution')) strings.push(item.institutionName)\n        if (filterFields.includes('endpoint')) strings.push(item.endpointUrl)\n        if (filterFields.includes('resources'))\n          strings.push(\n            ...item.endpointInfo.rootResources.map((strOrObj) =>\n              typeof strOrObj === 'string' ? strOrObj : strOrObj.title\n            )\n          )\n      }\n      return strings\n    },\n    mapResultItem: ({ item, score, matches }) => ({ item, matches, score }),\n    // strategy: 'off'\n  })\n\n  // rebuild nested structure, group by first occuring institution name\n  // add highlight information\n  const institutionData = filteredData.reduce(\n    (acc, cur) => {\n      const { institutionName, endpointUrl, endpointInfo } = cur.item\n\n      // check if we have not yet seen this institution name, then add it\n      if (!Object.getOwnPropertyNames(acc).includes(institutionName)) {\n        acc[institutionName] = {\n          match:\n            filterFields.length === 0 || filterFields.includes('institution')\n              ? cur.matches[0]\n              : null, // TODO: this is repeated for each endpoint that matches, so not sure what highlighting will work best here (hopefully the first)\n          endpoints: {},\n        }\n      }\n      // add endpoint info with highlight info\n      acc[institutionName].endpoints[endpointUrl] = {\n        ...endpointInfo,\n        matchEndpoint:\n          filterFields.length === 0 || filterFields.includes('endpoint')\n            ? cur.matches[filterFields.length === 0 || filterFields.includes('institution') ? 1 : 0]\n            : null,\n        matchResources:\n          filterFields.length === 0 || filterFields.includes('resources')\n            ? cur.matches.slice(\n                0 +\n                  (filterFields.length === 0 || filterFields.includes('institution') ? 1 : 0) +\n                  (filterFields.length === 0 || filterFields.includes('endpoint') ? 1 : 0)\n              )\n            : [],\n      }\n      return acc\n    },\n    {} as {\n      // map with key institution name\n      [institutionName: string]: {\n        // to institution name highlight match\n        match: HighlightRanges | null\n        endpoints: {\n          // and a map with endpoint url as key\n          [endpointUrl: string]: InstitutionEndpointInfo & {\n            // information augmented with highlight match information for endpoint url and each (root) resource\n            matchEndpoint: HighlightRanges | null\n            matchResources: (HighlightRanges | null)[]\n          }\n        }\n      }\n    }\n  )\n\n  // --------------------------------------------------------------\n\n  function handleFilterOptionToggleChange(field: FilterField) {\n    if (filterFields.includes(field)) {\n      setFilterFields(filterFields.filter((f) => f !== field))\n    } else {\n      setFilterFields([...filterFields, field])\n    }\n  }\n\n  // --------------------------------------------------------------\n\n  return (\n    <Container className=\"d-grid gap-2 mt-3\">\n      <Alert variant=\"info\" className=\"mb-0\">\n        <dl className=\"mb-0\">\n          <dt>{t('statistics.labels.startDate')}</dt>\n          <dd className=\"mb-0\">{new Date(data.date).toLocaleString(i18n.language)}</dd>\n          <dt>{t('statistics.labels.timeout')}</dt>\n          <dd className=\"mb-0\">\n            {new Intl.NumberFormat(i18n.language, {\n              style: 'unit',\n              unit: 'second',\n              unitDisplay: 'short',\n            }).format(data.timeout)}\n          </dd>\n        </dl>\n      </Alert>\n      <Form onSubmit={(event) => event.preventDefault()}>\n        <Row className=\"gy-2\">\n          <Col lg={6} md={12}>\n            <Form.Control\n              placeholder={t('statistics.filter.inputPlaceholder')}\n              value={filter}\n              onChange={(event) => setFilter(event.target.value)}\n            />\n          </Col>\n          <Col className=\"filter-checkboxes\" lg={6} md={12}>\n            <Form.Text className=\"me-2\">{t('statistics.filter.labelForCheckboxes')}</Form.Text>\n            <Form.Check\n              type=\"checkbox\"\n              checked={filterFields.includes('institution')}\n              onChange={() => handleFilterOptionToggleChange('institution')}\n              id={`filter-institution-name${idSuffix}`}\n              label={t('statistics.filter.checkboxInstitution')}\n            />\n            <Form.Check\n              type=\"checkbox\"\n              checked={filterFields.includes('endpoint')}\n              onChange={() => handleFilterOptionToggleChange('endpoint')}\n              id={`filter-endpoint-url${idSuffix}`}\n              label={t('statistics.filter.checkboxEndpoint')}\n            />\n            <Form.Check\n              type=\"checkbox\"\n              checked={filterFields.includes('resources')}\n              onChange={() => handleFilterOptionToggleChange('resources')}\n              id={`filter-resource-names${idSuffix}`}\n              label={t('statistics.filter.checkboxResources')}\n            />\n          </Col>\n        </Row>\n      </Form>\n      <Row>\n        <Col>\n          <Form.Check\n            type=\"checkbox\"\n            checked={showIssuesOnly}\n            onChange={() => setShowIssuesOnly(!showIssuesOnly)}\n            id={`filter-show-issues-only${idSuffix}`}\n            label={t('statistics.filter.checkboxShowWithIssues', {\n              count: endpointsWithIssues.length,\n            })}\n          />\n        </Col>\n      </Row>\n      {Object.entries(institutionData).map(\n        ([institutionName, { match: institutionMatch, endpoints: institutionEndpoints }]) => (\n          <Card className=\"p-2\" key={institutionName}>\n            <h3 className=\"h4 pb-1 border-bottom\" id={`${slugify(institutionName)}${idSuffix}`}>\n              <Highlight text={institutionName} ranges={institutionMatch} />\n            </h3>\n            {Object.entries(institutionEndpoints)\n              .toSorted()\n              .map(([endpointUrl, endpointInfo]) => (\n                <EndpointStatistics\n                  url={endpointUrl}\n                  statistics={endpointInfo}\n                  validatorUrl={validatorUrl}\n                  key={endpointUrl}\n                  isScan={data.isScan}\n                />\n              ))}\n          </Card>\n        )\n      )}\n    </Container>\n  )\n}\n\nexport default SectionStatistics\n","import { useQuery, useQueryClient } from '@tanstack/react-query'\nimport { useState } from 'react'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Nav from 'react-bootstrap/Nav'\nimport Row from 'react-bootstrap/Row'\nimport Tab from 'react-bootstrap/Tab'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { useParams, useSearchParams } from 'react-router'\n\nimport useNavigate from '@/hooks/useNavigate'\nimport useRouteMatch from '@/hooks/useRouteMatch'\nimport { useAxios } from '@/providers/AxiosContext'\nimport AppStore from '@/stores/app'\nimport type { ExtraScopingParams, StatisticsSection } from '@/utils/api'\nimport { getStatisticsData, REQ_PARAM_CONSORTIA } from '@/utils/api'\nimport FCSStatistics from './FCSStatistics'\nimport ResourcesDetails from './ResourcesDetails'\nimport SectionStatistics from './SectionStatistics'\n\nimport arrowClockwiseIcon from 'bootstrap-icons/icons/arrow-clockwise.svg?raw'\n\nimport './styles.css'\n\n// --------------------------------------------------------------------------\n// types\n\n// --------------------------------------------------------------------------\n// constants\n\nconst CATEGORY_LABELS = [\n  { id: 'last-scan', label: 'Last Scan' },\n  { id: 'recent-searches', label: 'Recent Searches' },\n] as const\nconst CATEGORY_LABELS_MAP = Object.fromEntries(CATEGORY_LABELS.map((item) => [item.id, item]))\n\nconst OTHER_TABS = ['resources', 'fcs']\n\n// --------------------------------------------------------------------------\n// component\n\nfunction Statistics() {\n  const axios = useAxios()\n  const queryClient = useQueryClient()\n  const [urlSearchParams] = useSearchParams()\n  const { t } = useTranslation()\n\n  const { categoryId } = useParams()\n  const routeMatch = useRouteMatch()\n  const navigate = useNavigate()\n  console.debug('route', { routeMatch, categoryId })\n\n  const extraParams = {\n    consortia: urlSearchParams.get(REQ_PARAM_CONSORTIA),\n  } satisfies ExtraScopingParams\n  const { isPending, isError, data, error } = useQuery({\n    queryKey: ['statistics'],\n    queryFn: getStatisticsData.bind(null, axios, extraParams),\n  })\n\n  const [validatorUrl, setValidatorUrl] = useState(AppStore.getState().validatorURL)\n  AppStore.subscribe((state) => setValidatorUrl(state.validatorURL))\n\n  const appTitleHead = AppStore.getState().appTitleHead\n\n  const categoryKeys = [...(data !== undefined ? Object.keys(data).toSorted() : []), ...OTHER_TABS]\n  // check if path param of to-be-selected statistics category exists and is valid otherwise default\n  const defaultCategoryTab =\n    categoryId != undefined && categoryKeys.includes(categoryId)\n      ? categoryId\n      : categoryKeys.length > 0\n      ? categoryKeys[0]\n      : undefined\n\n  // --------------------------------------------------------------\n\n  function refreshData() {\n    console.debug('Invalidate data and refresh ...')\n    queryClient.invalidateQueries({ queryKey: ['statistics'] })\n    queryClient.invalidateQueries({ queryKey: ['resources'] })\n    queryClient.invalidateQueries({ queryKey: ['languages'] })\n\n    if (import.meta.env.SHOW_CONSORTIA_INFO) {\n      queryClient.invalidateQueries({ queryKey: ['resources-all'] })\n      queryClient.invalidateQueries({ queryKey: ['consortia'] })\n    }\n  }\n\n  function handleTabChange(eventKey: string | null) {\n    console.debug('[handleTabChange]', {\n      eventKey,\n      routeMatch,\n      categoryId: routeMatch?.params.categoryId,\n    })\n    if (routeMatch) {\n      if (routeMatch.params.categoryId !== eventKey) {\n        if (routeMatch.route.path) {\n          navigate(routeMatch.route.path, { categoryId: eventKey })\n        }\n      }\n    }\n  }\n\n  // --------------------------------------------------------------\n\n  return (\n    <>\n      <Helmet>\n        <title>{appTitleHead} – Statistics</title>\n      </Helmet>\n      <Container id=\"statistics\" className=\"my-4\">\n        <h1 className=\"h1\">{t('statistics.title')}</h1>\n        {(isPending || isError) && (\n          <Row>\n            <Col>\n              {isPending ? t('statistics.loading') : null}\n              <br />\n              {isError ? error.message : null}\n            </Col>\n          </Row>\n        )}\n        {/* TODO: add some fuzzy search on title/endpoint/resource names */}\n        {data && (\n          <Tab.Container\n            activeKey={\n              categoryId && categoryKeys.includes(categoryId) ? categoryId : defaultCategoryTab\n            }\n            onSelect={handleTabChange}\n          >\n            <Nav className=\"nav-tabs\" as=\"ul\">\n              {Object.keys(data).map((section: string) => (\n                <Nav.Item as=\"li\" role=\"presentation\" key={section}>\n                  <Nav.Link as=\"button\" eventKey={section}>\n                    {t(`statistics.tabs.${section}`, {\n                      defaultValue: CATEGORY_LABELS_MAP[section]?.label ?? section,\n                    })}\n                  </Nav.Link>\n                </Nav.Item>\n              ))}\n              <Nav.Item as=\"li\" role=\"presentation\" key=\"resources\">\n                <Nav.Link as=\"button\" eventKey=\"resources\">\n                  {t('statistics.tabs.resources')}\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item as=\"li\" role=\"presentation\" key=\"fcs\">\n                <Nav.Link as=\"button\" eventKey=\"fcs\">\n                  {t('statistics.tabs.fcs')}\n                </Nav.Link>\n              </Nav.Item>\n              {/* custom right aligned \"refresh\" tab button */}\n              <Nav.Item as=\"li\" role=\"presentation\" className=\"ms-auto\">\n                <Nav.Link as=\"button\" onClick={refreshData}>\n                  <i dangerouslySetInnerHTML={{ __html: arrowClockwiseIcon }} />{' '}\n                  {t('statistics.tabs.btnRefresh')}\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n            <Tab.Content>\n              {Object.entries(data).map(([section, contents]: [string, StatisticsSection]) => (\n                <Tab.Pane eventKey={section} key={section}>\n                  <SectionStatistics data={contents} validatorUrl={validatorUrl} />\n                </Tab.Pane>\n              ))}\n              <Tab.Pane eventKey=\"resources\" key=\"resources\">\n                <ResourcesDetails validatorUrl={validatorUrl} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"fcs\" key=\"fcs\">\n                <FCSStatistics />\n              </Tab.Pane>\n            </Tab.Content>\n          </Tab.Container>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default Statistics\n","import { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { Route, Routes, useLocation } from 'react-router'\n\nimport Footer from '@/components/Footer'\nimport Header from '@/components/Header'\nimport useColorMode from '@/hooks/useColorMode'\nimport { i18n } from '@/i18n'\nimport About from '@/pages/About'\nimport Help from '@/pages/Help'\nimport Search from '@/pages/Search'\nimport Statistics from '@/pages/Statistics'\nimport AppStore from '@/stores/app'\nimport { useLocaleStore } from '@/stores/locale'\nimport { trackPageView } from '@/utils/matomo'\n\n// --------------------------------------------------------------------------\n\nfunction App() {\n  const appTitleHead = AppStore.getState().appTitleHead\n\n  // initial setup\n  useColorMode() // TODO: or move to index.tsx?\n\n  // locale changes\n  const locale = useLocaleStore((state) => state.locale)\n  useEffect(() => {\n    if (i18n.language !== locale) i18n.changeLanguage(locale)\n  }, [locale])\n\n  if (import.meta.env.FEATURE_TRACKING_MATOMO) {\n    /* eslint-disable react-hooks/rules-of-hooks */\n    // https://react.dev/reference/rules/rules-of-hooks\n    // NOTE: intentional, will be tree-shaken if not enabled on build\n\n    const location = useLocation() // current state\n    const [pathname, setPathname] = useState(location.pathname) // previous state\n    useEffect(() => {\n      const newPathname = location.pathname\n      if (newPathname !== pathname) {\n        // switched page\n        setPathname(newPathname + location.search)\n        // console.debug('location', pathname, '=>', newPathname, location)\n        trackPageView(newPathname, document.title, pathname) // TODO: maybe referrer pathname should be absolute?\n      }\n    }, [location, pathname])\n  }\n\n  return (\n    <>\n      <Helmet>\n        {/* fallback/reset when not overridden in children (pages) */}\n        {/* NOTE: will not \"fire\" before matomo tracking update, so better to override ourselves explicitely */}\n        <title>{appTitleHead}</title>\n\n        {/* TODO: socials ? --> static index.html might be better */}\n      </Helmet>\n      <Header />\n      <main>\n        <Routes>\n          <Route index element={<Search />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/help\" element={<Help />} />\n          <Route path=\"/stats/:categoryId?\" element={<Statistics />} />\n        </Routes>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import AppStore from '@/stores/app'\nimport LocaleStore from '@/stores/locale'\nimport { SetupAndInstallScriptParams as MatomoSetupParams } from './utils/matomo'\n\n// --------------------------------------------------------------------------\n\ntype MyAggregatorConfiguration = {\n  DEPLOY_PATH: string\n  API_URL: string\n  VALIDATOR_URL: string | null\n  SHOW_SEARCH_RESULT_LINK: boolean\n  APP_TITLE: string\n  APP_TITLE_HEAD: string\n  MATOMO_TRACKING_PARAMS: string | MatomoSetupParams | null\n  AUTH_USERNAME: string | null\n}\n\ndeclare const window: Window &\n  typeof globalThis & {\n    MyAggregator: Partial<MyAggregatorConfiguration> & { [key: string]: unknown }\n    _paq: unknown[] | { push: (params: unknown[]) => void }\n  }\n\n// declare const navigator: Navigator &\n//   NavigatorLanguage & {\n//     userLanguage?: string\n//   }\n\n// --------------------------------------------------------------------------\n\n// set global defaults\nwindow.MyAggregator = window['MyAggregator'] || {}\nwindow._paq = window['_paq'] || []\n\n// --------------------------------------------------------------------------\n\nexport const CONFIG_NAMES_ONLY_ON_INITIALIZATION = [\n  'DEPLOY_PATH',\n  'API_URL',\n  'APP_TITLE',\n  'APP_TITLE_HEAD',\n  'MATOMO_TRACKING_PARAMS',\n]\n\n/**\n * Configure AppStore with `MyAggregatorConfiguration`.\n * Must be called only once and should be run before the React App rendering happens.\n */\nexport function configure() {\n  if (window.MyAggregator.DEPLOY_PATH !== undefined) {\n    AppStore.getState().setDeployPath(window.MyAggregator.DEPLOY_PATH)\n  }\n  if (window.MyAggregator.API_URL !== undefined) {\n    AppStore.getState().setApiURL(window.MyAggregator.API_URL)\n  }\n  if (window.MyAggregator.VALIDATOR_URL !== undefined) {\n    AppStore.getState().setValidatorURL(window.MyAggregator.VALIDATOR_URL)\n  }\n  if (window.MyAggregator.SHOW_SEARCH_RESULT_LINK !== undefined) {\n    AppStore.getState().setShowSearchResultLink(window.MyAggregator.SHOW_SEARCH_RESULT_LINK)\n  }\n  if (window.MyAggregator.APP_TITLE !== undefined) {\n    AppStore.getState().setAppTitle(window.MyAggregator.APP_TITLE)\n  }\n  if (window.MyAggregator.APP_TITLE_HEAD !== undefined) {\n    AppStore.getState().setAppTitleHead(window.MyAggregator.APP_TITLE_HEAD)\n  }\n  if (import.meta.env.FEATURE_TRACKING_MATOMO) {\n    if (window.MyAggregator.MATOMO_TRACKING_PARAMS !== undefined) {\n      AppStore.getState().setMatomoTrackingParams(window.MyAggregator.MATOMO_TRACKING_PARAMS)\n    }\n  }\n  if (import.meta.env.FEATURE_AUTHENTICATION) {\n    if (window.MyAggregator.AUTH_USERNAME !== undefined) {\n      AppStore.getState().setAuthUsername(window.MyAggregator.AUTH_USERNAME)\n    }\n  }\n\n  // observe and notify about invalid configuration changes\n  window.MyAggregator = new Proxy(window.MyAggregator, {\n    get(target, prop: string) {\n      return target[prop]\n    },\n    set(target, prop: string, val: unknown) {\n      if (CONFIG_NAMES_ONLY_ON_INITIALIZATION.includes(prop)) {\n        console.error(`Configuration ${prop} can only be set on initialization!`)\n        return false\n      }\n\n      if (prop === 'VALIDATOR_URL') {\n        if (val === null || typeof val === 'string') {\n          console.log('Updating VALIDATOR_URL ...')\n          AppStore.getState().setValidatorURL(val)\n          return true\n        }\n        return false\n      }\n      if (prop === 'SHOW_SEARCH_RESULT_LINK') {\n        if (typeof val === 'boolean') {\n          console.log('Updating SHOW_SEARCH_RESULT_LINK ...')\n          AppStore.getState().setShowSearchResultLink(val)\n          return true\n        }\n        return false\n      }\n\n      if (import.meta.env.FEATURE_AUTHENTICATION) {\n        if (prop === 'AUTH_USERNAME') {\n          if (val === null || typeof val === 'string') {\n            console.log('Updating AUTH_USERNAME ...')\n            AppStore.getState().setAuthUsername(val)\n            return true\n          }\n          return false\n        }\n      }\n\n      target[prop] = val\n      return true\n    },\n  })\n\n  // TODO: for debugging\n  Object.assign(window.MyAggregator, {\n    getAppStore: () => AppStore,\n  })\n}\n\nexport function updateLocale() {\n  // update locale stuff\n  // - get browser languages\n  // - check against available languages\n  // - use match or fall back to default\n  const localeStore = LocaleStore.getState()\n  const userLanguages: string[] = [\n    // ...((navigator.language || navigator.userLanguage) ? [navigator.language || navigator.userLanguage!] : []),\n    navigator.language,\n    ...navigator.languages,\n  ]\n  let foundLocale = false\n  for (const userLanguage of userLanguages) {\n    // match, ok\n    if (userLanguage === localeStore.locale) {\n      // TODO: notify if not first match?\n      console.debug('User locale matches default locale:', userLanguage)\n      foundLocale = true\n      break\n    }\n    // check if found in alternatives\n    if (localeStore.locales.includes(userLanguage)) {\n      console.log('Switching locale to:', userLanguage)\n      localeStore.setLocale(userLanguage)\n      foundLocale = true\n      break\n    }\n  }\n  if (!foundLocale) {\n    console.warn(\n      'User locale',\n      userLanguages,\n      'was not found in available languages',\n      localeStore.locales\n    )\n  }\n\n  // TODO: for debugging\n  Object.assign(window.MyAggregator, {\n    getLocaleStore: () => LocaleStore,\n  })\n}\n","import { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport axios from 'axios'\nimport { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { BrowserRouter } from 'react-router'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport './utils.css'\n\nimport App from '@/App.tsx'\nimport { i18n } from '@/i18n'\nimport { AxiosProvider } from '@/providers/AxiosContext'\nimport { configure, updateLocale } from '@/public'\nimport AppStore from '@/stores/app'\nimport LocaleStore from '@/stores/locale'\nimport { setupAndInstallFromConfigString } from '@/utils/matomo'\n\n// --------------------------------------------------------------------------\n\n// configure AppStore and fetch runtime configuration to override build configuration\n// will guard against invalid/unexpected changes and notify about valid ones\nconfigure()\n// update locale languages based on browser/navigator and available languages\nupdateLocale()\n\nconsole.debug('AppStore.getState()', AppStore.getInitialState(), AppStore.getState())\nconsole.debug('LocaleStore.getState()', LocaleStore.getInitialState(), LocaleStore.getState())\n\n// BrowserRouter#basename for subpath deployment\nconst basename = AppStore.getState().deployPath\nconst apiURL = AppStore.getState().apiURL\n\nconst language = LocaleStore.getState().locale\ni18n.changeLanguage(language)\n\n// --------------------------------------------------------------------------\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // TODO: disable for cleaner debugging and/or for production?\n      // refetchOnWindowFocus: false\n    },\n  },\n})\nconst axiosClient = axios.create({\n  baseURL: apiURL,\n  timeout: 5000,\n  // throw if response is not JSON\n  // - https://stackoverflow.com/a/75785157/9360161\n  responseType: 'json',\n  transitional: {\n    silentJSONParsing: false,\n  },\n})\n\n// --------------------------------------------------------------------------\n\nif (import.meta.env.FEATURE_TRACKING_MATOMO) {\n  const matomoParams = AppStore.getState().matomoTrackingParams\n  const successful = setupAndInstallFromConfigString(matomoParams)\n  if (!successful) console.warn('Unable to setup tracking ...')\n}\n\n// --------------------------------------------------------------------------\n\n// App mount point\nconst rootId = 'root'\nconst domRoot = document.getElementById(rootId)\nconst root = createRoot(domRoot!)\n\nroot.render(\n  <StrictMode>\n    <AxiosProvider axios={axiosClient}>\n      <QueryClientProvider client={queryClient}>\n        <HelmetProvider>\n          <BrowserRouter basename={basename}>\n            <App />\n          </BrowserRouter>\n        </HelmetProvider>\n      </QueryClientProvider>\n    </AxiosProvider>\n  </StrictMode>\n)\n"],"file":"lib/fcs-sru-aggregator-ui.js"}